// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: builra3/CASTree.proto
// Protobuf C++ Version: 5.27.2

#include "builra3/CASTree.pb.h"

#include <algorithm>
#include <type_traits>
#include "Omnira/DataSerialization/io/coded_stream.h"
#include "Omnira/DataSerialization/generated_message_tctable_impl.h"
#include "Omnira/DataSerialization/extension_set.h"
#include "Omnira/DataSerialization/wire_format_lite.h"
#include "Omnira/DataSerialization/descriptor.h"
#include "Omnira/DataSerialization/generated_message_reflection.h"
#include "Omnira/DataSerialization/reflection_ops.h"
#include "Omnira/DataSerialization/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "Omnira/DataSerialization/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::Omnira::DataSerialization;
namespace _pbi = ::Omnira::DataSerialization::internal;
namespace _fl = ::Omnira::DataSerialization::internal::field_layout;
namespace builra3 {

inline constexpr PosixFileDetails::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mode_{0u},
        owner_{0u},
        group_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PosixFileDetails::PosixFileDetails(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PosixFileDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PosixFileDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PosixFileDetailsDefaultTypeInternal() {}
  union {
    PosixFileDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PosixFileDetailsDefaultTypeInternal _PosixFileDetails_default_instance_;

inline constexpr NamedDirectoryEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::Omnira::DataSerialization::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        posixdetails_{nullptr},
        size_{::uint64_t{0u}},
        type_{static_cast< ::builra3::FileType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR NamedDirectoryEntry::NamedDirectoryEntry(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NamedDirectoryEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NamedDirectoryEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NamedDirectoryEntryDefaultTypeInternal() {}
  union {
    NamedDirectoryEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NamedDirectoryEntryDefaultTypeInternal _NamedDirectoryEntry_default_instance_;

inline constexpr NamedDirectoryEntries::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entries_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NamedDirectoryEntries::NamedDirectoryEntries(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NamedDirectoryEntriesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NamedDirectoryEntriesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NamedDirectoryEntriesDefaultTypeInternal() {}
  union {
    NamedDirectoryEntries _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NamedDirectoryEntriesDefaultTypeInternal _NamedDirectoryEntries_default_instance_;

inline constexpr FileInformation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        posixdetails_{nullptr},
        size_{::uint64_t{0u}},
        type_{static_cast< ::builra3::FileType >(0)},
        compression_{static_cast< ::builra3::FileDataCompressionMethod >(0)},
        payload_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR FileInformation::FileInformation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FileInformationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileInformationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileInformationDefaultTypeInternal() {}
  union {
    FileInformation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileInformationDefaultTypeInternal _FileInformation_default_instance_;
}  // namespace builra3
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_builra3_2fCASTree_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_builra3_2fCASTree_2eproto = nullptr;
const ::uint32_t
    TableStruct_builra3_2fCASTree_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::builra3::PosixFileDetails, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::builra3::PosixFileDetails, _impl_.mode_),
        PROTOBUF_FIELD_OFFSET(::builra3::PosixFileDetails, _impl_.owner_),
        PROTOBUF_FIELD_OFFSET(::builra3::PosixFileDetails, _impl_.group_),
        PROTOBUF_FIELD_OFFSET(::builra3::NamedDirectoryEntry, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::builra3::NamedDirectoryEntry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::builra3::NamedDirectoryEntry, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::builra3::NamedDirectoryEntry, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::builra3::NamedDirectoryEntry, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::builra3::NamedDirectoryEntry, _impl_.posixdetails_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::builra3::NamedDirectoryEntries, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::builra3::NamedDirectoryEntries, _impl_.entries_),
        PROTOBUF_FIELD_OFFSET(::builra3::FileInformation, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::builra3::FileInformation, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::builra3::FileInformation, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::builra3::FileInformation, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::builra3::FileInformation, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::builra3::FileInformation, _impl_.compression_),
        PROTOBUF_FIELD_OFFSET(::builra3::FileInformation, _impl_.posixdetails_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::builra3::FileInformation, _impl_.payload_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::builra3::PosixFileDetails)},
        {11, 23, -1, sizeof(::builra3::NamedDirectoryEntry)},
        {27, -1, -1, sizeof(::builra3::NamedDirectoryEntries)},
        {36, 52, -1, sizeof(::builra3::FileInformation)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::builra3::_PosixFileDetails_default_instance_._instance,
    &::builra3::_NamedDirectoryEntry_default_instance_._instance,
    &::builra3::_NamedDirectoryEntries_default_instance_._instance,
    &::builra3::_FileInformation_default_instance_._instance,
};
const char descriptor_table_protodef_builra3_2fCASTree_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\026builra3/CASTree.proto\022\010builra3\">\n\020Po"
    "sixFileDetails\022\014\n\004mode\030\001 \001(\r\022\r\n\005owner\030\002 "
    "\001(\r\022\r\n\005group\030\003 \001(\r\"\205\001\n\023NamedDirectoryEnt"
    "ry\022\014\n\004name\030\001 \001(\t\022 \n\004type\030\002 \001(\0162\022.builra"
    "3.FileType\022\014\n\004size\030\003 \001(\004\0220\n\014posixDetails"
    "\030\004 \001(\0132\032.builra3.PosixFileDetails\"G\n\025Na"
    "medDirectoryEntries\022.\n\007entries\030\001 \003(\0132\035.l"
    "lbuild3.NamedDirectoryEntry\"\307\002\n\017FileInfo"
    "rmation\022 \n\004type\030\001 \001(\0162\022.builra3.FileTyp"
    "e\022\014\n\004size\030\002 \001(\004\0228\n\013compression\030\004 \001(\0162#.l"
    "lbuild3.FileDataCompressionMethod\0220\n\014pos"
    "ixDetails\030\005 \001(\0132\032.builra3.PosixFileDeta"
    "ils\022\030\n\016fixedChunkSize\030\013 \001(\004H\000\0229\n\016inlineC"
    "hildren\030\014 \001(\0132\037.builra3.NamedDirectoryE"
    "ntriesH\000\022 \n\026referencedChildrenTree\030\r \001(\r"
    "H\000B\t\n\007payloadJ\004\010\003\020\004R\020posixPermissions*j\n"
    "\010FileType\022\027\n\023FILETYPE_PLAIN_FILE\020\000\022\027\n\023FI"
    "LETYPE_EXECUTABLE\020\001\022\026\n\022FILETYPE_DIRECTOR"
    "Y\020\002\022\024\n\020FILETYPE_SYMLINK\020\003*\233\001\n\031FileDataCo"
    "mpressionMethod\022\"\n\036FILEDATACOMPRESSIONME"
    "THOD_NONE\020\000\"\004\010\001\020\001\"\004\010\002\020\002*\036FILEDATACOMPRES"
    "SIONMETHOD_ZSTD*.FILEDATACOMPRESSIONMETH"
    "OD_ZSTD_WITH_DICTIONARYb\006proto3"
};
static ::absl::once_flag descriptor_table_builra3_2fCASTree_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_builra3_2fCASTree_2eproto = {
    false,
    false,
    911,
    descriptor_table_protodef_builra3_2fCASTree_2eproto,
    "builra3/CASTree.proto",
    &descriptor_table_builra3_2fCASTree_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_builra3_2fCASTree_2eproto::offsets,
    file_level_enum_descriptors_builra3_2fCASTree_2eproto,
    file_level_service_descriptors_builra3_2fCASTree_2eproto,
};
namespace builra3 {
const ::Omnira::DataSerialization::EnumDescriptor* FileType_descriptor() {
  ::Omnira::DataSerialization::internal::AssignDescriptors(&descriptor_table_builra3_2fCASTree_2eproto);
  return file_level_enum_descriptors_builra3_2fCASTree_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t FileType_internal_data_[] = {
    262144u, 0u, };
bool FileType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::Omnira::DataSerialization::EnumDescriptor* FileDataCompressionMethod_descriptor() {
  ::Omnira::DataSerialization::internal::AssignDescriptors(&descriptor_table_builra3_2fCASTree_2eproto);
  return file_level_enum_descriptors_builra3_2fCASTree_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t FileDataCompressionMethod_internal_data_[] = {
    65536u, 0u, };
bool FileDataCompressionMethod_IsValid(int value) {
  return 0 <= value && value <= 0;
}
// ===================================================================

class PosixFileDetails::_Internal {
 public:
};

PosixFileDetails::PosixFileDetails(::Omnira::DataSerialization::Arena* arena)
    : ::Omnira::DataSerialization::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:builra3.PosixFileDetails)
}
PosixFileDetails::PosixFileDetails(
    ::Omnira::DataSerialization::Arena* arena, const PosixFileDetails& from)
    : PosixFileDetails(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PosixFileDetails::Impl_::Impl_(
    ::Omnira::DataSerialization::internal::InternalVisibility visibility,
    ::Omnira::DataSerialization::Arena* arena)
      : _cached_size_{0} {}

inline void PosixFileDetails::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mode_),
           0,
           offsetof(Impl_, group_) -
               offsetof(Impl_, mode_) +
               sizeof(Impl_::group_));
}
PosixFileDetails::~PosixFileDetails() {
  // @@protoc_insertion_point(destructor:builra3.PosixFileDetails)
  _internal_metadata_.Delete<::Omnira::DataSerialization::UnknownFieldSet>();
  SharedDtor();
}
inline void PosixFileDetails::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::Omnira::DataSerialization::MessageLite::ClassData*
PosixFileDetails::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::Omnira::DataSerialization::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PosixFileDetails, _impl_._cached_size_),
              false,
          },
          &PosixFileDetails::MergeImpl,
          &PosixFileDetails::kDescriptorMethods,
          &descriptor_table_builra3_2fCASTree_2eproto,
          nullptr,  // tracker
      };
  ::Omnira::DataSerialization::internal::PrefetchToLocalCache(&_data_);
  ::Omnira::DataSerialization::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PosixFileDetails::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PosixFileDetails_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::builra3::PosixFileDetails>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 mode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PosixFileDetails, _impl_.mode_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PosixFileDetails, _impl_.mode_)}},
    // uint32 owner = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PosixFileDetails, _impl_.owner_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PosixFileDetails, _impl_.owner_)}},
    // uint32 group = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PosixFileDetails, _impl_.group_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PosixFileDetails, _impl_.group_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 mode = 1;
    {PROTOBUF_FIELD_OFFSET(PosixFileDetails, _impl_.mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 owner = 2;
    {PROTOBUF_FIELD_OFFSET(PosixFileDetails, _impl_.owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 group = 3;
    {PROTOBUF_FIELD_OFFSET(PosixFileDetails, _impl_.group_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PosixFileDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:builra3.PosixFileDetails)
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.mode_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.group_) -
      reinterpret_cast<char*>(&_impl_.mode_)) + sizeof(_impl_.group_));
  _internal_metadata_.Clear<::Omnira::DataSerialization::UnknownFieldSet>();
}

::uint8_t* PosixFileDetails::_InternalSerialize(
    ::uint8_t* target,
    ::Omnira::DataSerialization::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:builra3.PosixFileDetails)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 mode = 1;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_mode(), target);
  }

  // uint32 owner = 2;
  if (this->_internal_owner() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_owner(), target);
  }

  // uint32 group = 3;
  if (this->_internal_group() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_group(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>(::Omnira::DataSerialization::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:builra3.PosixFileDetails)
  return target;
}

::size_t PosixFileDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:builra3.PosixFileDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // uint32 mode = 1;
  if (this->_internal_mode() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_mode());
  }

  // uint32 owner = 2;
  if (this->_internal_owner() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_owner());
  }

  // uint32 group = 3;
  if (this->_internal_group() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_group());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PosixFileDetails::MergeImpl(::Omnira::DataSerialization::MessageLite& to_msg, const ::Omnira::DataSerialization::MessageLite& from_msg) {
  auto* const _this = static_cast<PosixFileDetails*>(&to_msg);
  auto& from = static_cast<const PosixFileDetails&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:builra3.PosixFileDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mode() != 0) {
    _this->_impl_.mode_ = from._impl_.mode_;
  }
  if (from._internal_owner() != 0) {
    _this->_impl_.owner_ = from._impl_.owner_;
  }
  if (from._internal_group() != 0) {
    _this->_impl_.group_ = from._impl_.group_;
  }
  _this->_internal_metadata_.MergeFrom<::Omnira::DataSerialization::UnknownFieldSet>(from._internal_metadata_);
}

void PosixFileDetails::CopyFrom(const PosixFileDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:builra3.PosixFileDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PosixFileDetails::InternalSwap(PosixFileDetails* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::Omnira::DataSerialization::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PosixFileDetails, _impl_.group_)
      + sizeof(PosixFileDetails::_impl_.group_)
      - PROTOBUF_FIELD_OFFSET(PosixFileDetails, _impl_.mode_)>(
          reinterpret_cast<char*>(&_impl_.mode_),
          reinterpret_cast<char*>(&other->_impl_.mode_));
}

::Omnira::DataSerialization::Metadata PosixFileDetails::GetMetadata() const {
  return ::Omnira::DataSerialization::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NamedDirectoryEntry::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NamedDirectoryEntry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NamedDirectoryEntry, _impl_._has_bits_);
};

NamedDirectoryEntry::NamedDirectoryEntry(::Omnira::DataSerialization::Arena* arena)
    : ::Omnira::DataSerialization::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:builra3.NamedDirectoryEntry)
}
inline PROTOBUF_NDEBUG_INLINE NamedDirectoryEntry::Impl_::Impl_(
    ::Omnira::DataSerialization::internal::InternalVisibility visibility, ::Omnira::DataSerialization::Arena* arena,
    const Impl_& from, const ::builra3::NamedDirectoryEntry& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

NamedDirectoryEntry::NamedDirectoryEntry(
    ::Omnira::DataSerialization::Arena* arena,
    const NamedDirectoryEntry& from)
    : ::Omnira::DataSerialization::Message(arena) {
  NamedDirectoryEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::Omnira::DataSerialization::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.posixdetails_ = (cached_has_bits & 0x00000001u) ? ::Omnira::DataSerialization::Message::CopyConstruct<::builra3::PosixFileDetails>(
                              arena, *from._impl_.posixdetails_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, size_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, size_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:builra3.NamedDirectoryEntry)
}
inline PROTOBUF_NDEBUG_INLINE NamedDirectoryEntry::Impl_::Impl_(
    ::Omnira::DataSerialization::internal::InternalVisibility visibility,
    ::Omnira::DataSerialization::Arena* arena)
      : _cached_size_{0},
        name_(arena) {}

inline void NamedDirectoryEntry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, posixdetails_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, posixdetails_) +
               sizeof(Impl_::type_));
}
NamedDirectoryEntry::~NamedDirectoryEntry() {
  // @@protoc_insertion_point(destructor:builra3.NamedDirectoryEntry)
  _internal_metadata_.Delete<::Omnira::DataSerialization::UnknownFieldSet>();
  SharedDtor();
}
inline void NamedDirectoryEntry::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  delete _impl_.posixdetails_;
  _impl_.~Impl_();
}

const ::Omnira::DataSerialization::MessageLite::ClassData*
NamedDirectoryEntry::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::Omnira::DataSerialization::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(NamedDirectoryEntry, _impl_._cached_size_),
              false,
          },
          &NamedDirectoryEntry::MergeImpl,
          &NamedDirectoryEntry::kDescriptorMethods,
          &descriptor_table_builra3_2fCASTree_2eproto,
          nullptr,  // tracker
      };
  ::Omnira::DataSerialization::internal::PrefetchToLocalCache(&_data_);
  ::Omnira::DataSerialization::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 41, 2> NamedDirectoryEntry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NamedDirectoryEntry, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NamedDirectoryEntry_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::builra3::NamedDirectoryEntry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .builra3.PosixFileDetails posixDetails = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(NamedDirectoryEntry, _impl_.posixdetails_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NamedDirectoryEntry, _impl_.name_)}},
    // .builra3.FileType type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NamedDirectoryEntry, _impl_.type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NamedDirectoryEntry, _impl_.type_)}},
    // uint64 size = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(NamedDirectoryEntry, _impl_.size_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NamedDirectoryEntry, _impl_.size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(NamedDirectoryEntry, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .builra3.FileType type = 2;
    {PROTOBUF_FIELD_OFFSET(NamedDirectoryEntry, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 size = 3;
    {PROTOBUF_FIELD_OFFSET(NamedDirectoryEntry, _impl_.size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .builra3.PosixFileDetails posixDetails = 4;
    {PROTOBUF_FIELD_OFFSET(NamedDirectoryEntry, _impl_.posixdetails_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::builra3::PosixFileDetails>()},
  }}, {{
    "\34\4\0\0\0\0\0\0"
    "builra3.NamedDirectoryEntry"
    "name"
  }},
};

PROTOBUF_NOINLINE void NamedDirectoryEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:builra3.NamedDirectoryEntry)
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.posixdetails_ != nullptr);
    _impl_.posixdetails_->Clear();
  }
  ::memset(&_impl_.size_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.size_)) + sizeof(_impl_.type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::Omnira::DataSerialization::UnknownFieldSet>();
}

::uint8_t* NamedDirectoryEntry::_InternalSerialize(
    ::uint8_t* target,
    ::Omnira::DataSerialization::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:builra3.NamedDirectoryEntry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::Omnira::DataSerialization::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::Omnira::DataSerialization::internal::WireFormatLite::SERIALIZE, "builra3.NamedDirectoryEntry.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .builra3.FileType type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  // uint64 size = 3;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_size(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .builra3.PosixFileDetails posixDetails = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::Omnira::DataSerialization::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.posixdetails_, _impl_.posixdetails_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>(::Omnira::DataSerialization::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:builra3.NamedDirectoryEntry)
  return target;
}

::size_t NamedDirectoryEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:builra3.NamedDirectoryEntry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::Omnira::DataSerialization::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // .builra3.PosixFileDetails posixDetails = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::Omnira::DataSerialization::internal::WireFormatLite::MessageSize(*_impl_.posixdetails_);
  }

  // uint64 size = 3;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_size());
  }

  // .builra3.FileType type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NamedDirectoryEntry::MergeImpl(::Omnira::DataSerialization::MessageLite& to_msg, const ::Omnira::DataSerialization::MessageLite& from_msg) {
  auto* const _this = static_cast<NamedDirectoryEntry*>(&to_msg);
  auto& from = static_cast<const NamedDirectoryEntry&>(from_msg);
  ::Omnira::DataSerialization::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:builra3.NamedDirectoryEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.posixdetails_ != nullptr);
    if (_this->_impl_.posixdetails_ == nullptr) {
      _this->_impl_.posixdetails_ =
          ::Omnira::DataSerialization::Message::CopyConstruct<::builra3::PosixFileDetails>(arena, *from._impl_.posixdetails_);
    } else {
      _this->_impl_.posixdetails_->MergeFrom(*from._impl_.posixdetails_);
    }
  }
  if (from._internal_size() != 0) {
    _this->_impl_.size_ = from._impl_.size_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::Omnira::DataSerialization::UnknownFieldSet>(from._internal_metadata_);
}

void NamedDirectoryEntry::CopyFrom(const NamedDirectoryEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:builra3.NamedDirectoryEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NamedDirectoryEntry::InternalSwap(NamedDirectoryEntry* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::Omnira::DataSerialization::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NamedDirectoryEntry, _impl_.type_)
      + sizeof(NamedDirectoryEntry::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(NamedDirectoryEntry, _impl_.posixdetails_)>(
          reinterpret_cast<char*>(&_impl_.posixdetails_),
          reinterpret_cast<char*>(&other->_impl_.posixdetails_));
}

::Omnira::DataSerialization::Metadata NamedDirectoryEntry::GetMetadata() const {
  return ::Omnira::DataSerialization::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NamedDirectoryEntries::_Internal {
 public:
};

NamedDirectoryEntries::NamedDirectoryEntries(::Omnira::DataSerialization::Arena* arena)
    : ::Omnira::DataSerialization::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:builra3.NamedDirectoryEntries)
}
inline PROTOBUF_NDEBUG_INLINE NamedDirectoryEntries::Impl_::Impl_(
    ::Omnira::DataSerialization::internal::InternalVisibility visibility, ::Omnira::DataSerialization::Arena* arena,
    const Impl_& from, const ::builra3::NamedDirectoryEntries& from_msg)
      : entries_{visibility, arena, from.entries_},
        _cached_size_{0} {}

NamedDirectoryEntries::NamedDirectoryEntries(
    ::Omnira::DataSerialization::Arena* arena,
    const NamedDirectoryEntries& from)
    : ::Omnira::DataSerialization::Message(arena) {
  NamedDirectoryEntries* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::Omnira::DataSerialization::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:builra3.NamedDirectoryEntries)
}
inline PROTOBUF_NDEBUG_INLINE NamedDirectoryEntries::Impl_::Impl_(
    ::Omnira::DataSerialization::internal::InternalVisibility visibility,
    ::Omnira::DataSerialization::Arena* arena)
      : entries_{visibility, arena},
        _cached_size_{0} {}

inline void NamedDirectoryEntries::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NamedDirectoryEntries::~NamedDirectoryEntries() {
  // @@protoc_insertion_point(destructor:builra3.NamedDirectoryEntries)
  _internal_metadata_.Delete<::Omnira::DataSerialization::UnknownFieldSet>();
  SharedDtor();
}
inline void NamedDirectoryEntries::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::Omnira::DataSerialization::MessageLite::ClassData*
NamedDirectoryEntries::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::Omnira::DataSerialization::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(NamedDirectoryEntries, _impl_._cached_size_),
              false,
          },
          &NamedDirectoryEntries::MergeImpl,
          &NamedDirectoryEntries::kDescriptorMethods,
          &descriptor_table_builra3_2fCASTree_2eproto,
          nullptr,  // tracker
      };
  ::Omnira::DataSerialization::internal::PrefetchToLocalCache(&_data_);
  ::Omnira::DataSerialization::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> NamedDirectoryEntries::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NamedDirectoryEntries_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::builra3::NamedDirectoryEntries>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .builra3.NamedDirectoryEntry entries = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NamedDirectoryEntries, _impl_.entries_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .builra3.NamedDirectoryEntry entries = 1;
    {PROTOBUF_FIELD_OFFSET(NamedDirectoryEntries, _impl_.entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::builra3::NamedDirectoryEntry>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void NamedDirectoryEntries::Clear() {
// @@protoc_insertion_point(message_clear_start:builra3.NamedDirectoryEntries)
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _internal_metadata_.Clear<::Omnira::DataSerialization::UnknownFieldSet>();
}

::uint8_t* NamedDirectoryEntries::_InternalSerialize(
    ::uint8_t* target,
    ::Omnira::DataSerialization::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:builra3.NamedDirectoryEntries)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .builra3.NamedDirectoryEntry entries = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_entries_size());
       i < n; i++) {
    const auto& repfield = this->_internal_entries().Get(i);
    target =
        ::Omnira::DataSerialization::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>(::Omnira::DataSerialization::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:builra3.NamedDirectoryEntries)
  return target;
}

::size_t NamedDirectoryEntries::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:builra3.NamedDirectoryEntries)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .builra3.NamedDirectoryEntry entries = 1;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->_internal_entries()) {
    total_size += ::Omnira::DataSerialization::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NamedDirectoryEntries::MergeImpl(::Omnira::DataSerialization::MessageLite& to_msg, const ::Omnira::DataSerialization::MessageLite& from_msg) {
  auto* const _this = static_cast<NamedDirectoryEntries*>(&to_msg);
  auto& from = static_cast<const NamedDirectoryEntries&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:builra3.NamedDirectoryEntries)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  _this->_internal_metadata_.MergeFrom<::Omnira::DataSerialization::UnknownFieldSet>(from._internal_metadata_);
}

void NamedDirectoryEntries::CopyFrom(const NamedDirectoryEntries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:builra3.NamedDirectoryEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NamedDirectoryEntries::InternalSwap(NamedDirectoryEntries* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
}

::Omnira::DataSerialization::Metadata NamedDirectoryEntries::GetMetadata() const {
  return ::Omnira::DataSerialization::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FileInformation::_Internal {
 public:
  using HasBits =
      decltype(std::declval<FileInformation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FileInformation, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::builra3::FileInformation, _impl_._oneof_case_);
};

void FileInformation::set_allocated_inlinechildren(::builra3::NamedDirectoryEntries* inlinechildren) {
  ::Omnira::DataSerialization::Arena* message_arena = GetArena();
  clear_payload();
  if (inlinechildren) {
    ::Omnira::DataSerialization::Arena* submessage_arena = inlinechildren->GetArena();
    if (message_arena != submessage_arena) {
      inlinechildren = ::Omnira::DataSerialization::internal::GetOwnedMessage(message_arena, inlinechildren, submessage_arena);
    }
    set_has_inlinechildren();
    _impl_.payload_.inlinechildren_ = inlinechildren;
  }
  // @@protoc_insertion_point(field_set_allocated:builra3.FileInformation.inlineChildren)
}
FileInformation::FileInformation(::Omnira::DataSerialization::Arena* arena)
    : ::Omnira::DataSerialization::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:builra3.FileInformation)
}
inline PROTOBUF_NDEBUG_INLINE FileInformation::Impl_::Impl_(
    ::Omnira::DataSerialization::internal::InternalVisibility visibility, ::Omnira::DataSerialization::Arena* arena,
    const Impl_& from, const ::builra3::FileInformation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        payload_{},
        _oneof_case_{from._oneof_case_[0]} {}

FileInformation::FileInformation(
    ::Omnira::DataSerialization::Arena* arena,
    const FileInformation& from)
    : ::Omnira::DataSerialization::Message(arena) {
  FileInformation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::Omnira::DataSerialization::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.posixdetails_ = (cached_has_bits & 0x00000001u) ? ::Omnira::DataSerialization::Message::CopyConstruct<::builra3::PosixFileDetails>(
                              arena, *from._impl_.posixdetails_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, size_),
           offsetof(Impl_, compression_) -
               offsetof(Impl_, size_) +
               sizeof(Impl_::compression_));
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kFixedChunkSize:
        _impl_.payload_.fixedchunksize_ = from._impl_.payload_.fixedchunksize_;
        break;
      case kInlineChildren:
        _impl_.payload_.inlinechildren_ = ::Omnira::DataSerialization::Message::CopyConstruct<::builra3::NamedDirectoryEntries>(arena, *from._impl_.payload_.inlinechildren_);
        break;
      case kReferencedChildrenTree:
        _impl_.payload_.referencedchildrentree_ = from._impl_.payload_.referencedchildrentree_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:builra3.FileInformation)
}
inline PROTOBUF_NDEBUG_INLINE FileInformation::Impl_::Impl_(
    ::Omnira::DataSerialization::internal::InternalVisibility visibility,
    ::Omnira::DataSerialization::Arena* arena)
      : _cached_size_{0},
        payload_{},
        _oneof_case_{} {}

inline void FileInformation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, posixdetails_),
           0,
           offsetof(Impl_, compression_) -
               offsetof(Impl_, posixdetails_) +
               sizeof(Impl_::compression_));
}
FileInformation::~FileInformation() {
  // @@protoc_insertion_point(destructor:builra3.FileInformation)
  _internal_metadata_.Delete<::Omnira::DataSerialization::UnknownFieldSet>();
  SharedDtor();
}
inline void FileInformation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.posixdetails_;
  if (has_payload()) {
    clear_payload();
  }
  _impl_.~Impl_();
}

void FileInformation::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:builra3.FileInformation)
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kFixedChunkSize: {
      // No need to clear
      break;
    }
    case kInlineChildren: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.inlinechildren_;
      } else if (::Omnira::DataSerialization::internal::DebugHardenClearOneofMessageOnArena()) {
        ::Omnira::DataSerialization::internal::MaybePoisonAfterClear(_impl_.payload_.inlinechildren_);
      }
      break;
    }
    case kReferencedChildrenTree: {
      // No need to clear
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


const ::Omnira::DataSerialization::MessageLite::ClassData*
FileInformation::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::Omnira::DataSerialization::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(FileInformation, _impl_._cached_size_),
              false,
          },
          &FileInformation::MergeImpl,
          &FileInformation::kDescriptorMethods,
          &descriptor_table_builra3_2fCASTree_2eproto,
          nullptr,  // tracker
      };
  ::Omnira::DataSerialization::internal::PrefetchToLocalCache(&_data_);
  ::Omnira::DataSerialization::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 0, 2> FileInformation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FileInformation, _impl_._has_bits_),
    0, // no _extensions_
    13, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294960100,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FileInformation_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::builra3::FileInformation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .builra3.FileType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FileInformation, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FileInformation, _impl_.type_)}},
    // uint64 size = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FileInformation, _impl_.size_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(FileInformation, _impl_.size_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .builra3.FileDataCompressionMethod compression = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FileInformation, _impl_.compression_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(FileInformation, _impl_.compression_)}},
    // .builra3.PosixFileDetails posixDetails = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(FileInformation, _impl_.posixdetails_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .builra3.FileType type = 1;
    {PROTOBUF_FIELD_OFFSET(FileInformation, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 size = 2;
    {PROTOBUF_FIELD_OFFSET(FileInformation, _impl_.size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .builra3.FileDataCompressionMethod compression = 4;
    {PROTOBUF_FIELD_OFFSET(FileInformation, _impl_.compression_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .builra3.PosixFileDetails posixDetails = 5;
    {PROTOBUF_FIELD_OFFSET(FileInformation, _impl_.posixdetails_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 fixedChunkSize = 11;
    {PROTOBUF_FIELD_OFFSET(FileInformation, _impl_.payload_.fixedchunksize_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt64)},
    // .builra3.NamedDirectoryEntries inlineChildren = 12;
    {PROTOBUF_FIELD_OFFSET(FileInformation, _impl_.payload_.inlinechildren_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 referencedChildrenTree = 13;
    {PROTOBUF_FIELD_OFFSET(FileInformation, _impl_.payload_.referencedchildrentree_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::builra3::PosixFileDetails>()},
    {::_pbi::TcParser::GetTable<::builra3::NamedDirectoryEntries>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void FileInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:builra3.FileInformation)
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.posixdetails_ != nullptr);
    _impl_.posixdetails_->Clear();
  }
  ::memset(&_impl_.size_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.compression_) -
      reinterpret_cast<char*>(&_impl_.size_)) + sizeof(_impl_.compression_));
  clear_payload();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::Omnira::DataSerialization::UnknownFieldSet>();
}

::uint8_t* FileInformation::_InternalSerialize(
    ::uint8_t* target,
    ::Omnira::DataSerialization::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:builra3.FileInformation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .builra3.FileType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // uint64 size = 2;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_size(), target);
  }

  // .builra3.FileDataCompressionMethod compression = 4;
  if (this->_internal_compression() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_compression(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .builra3.PosixFileDetails posixDetails = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::Omnira::DataSerialization::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.posixdetails_, _impl_.posixdetails_->GetCachedSize(), target, stream);
  }

  switch (payload_case()) {
    case kFixedChunkSize: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          11, this->_internal_fixedchunksize(), target);
      break;
    }
    case kInlineChildren: {
      target = ::Omnira::DataSerialization::internal::WireFormatLite::InternalWriteMessage(
          12, *_impl_.payload_.inlinechildren_, _impl_.payload_.inlinechildren_->GetCachedSize(), target, stream);
      break;
    }
    case kReferencedChildrenTree: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          13, this->_internal_referencedchildrentree(), target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>(::Omnira::DataSerialization::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:builra3.FileInformation)
  return target;
}

::size_t FileInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:builra3.FileInformation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .builra3.PosixFileDetails posixDetails = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::Omnira::DataSerialization::internal::WireFormatLite::MessageSize(*_impl_.posixdetails_);
  }

  // uint64 size = 2;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_size());
  }

  // .builra3.FileType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // .builra3.FileDataCompressionMethod compression = 4;
  if (this->_internal_compression() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_compression());
  }

  switch (payload_case()) {
    // uint64 fixedChunkSize = 11;
    case kFixedChunkSize: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_fixedchunksize());
      break;
    }
    // .builra3.NamedDirectoryEntries inlineChildren = 12;
    case kInlineChildren: {
      total_size +=
          1 + ::Omnira::DataSerialization::internal::WireFormatLite::MessageSize(*_impl_.payload_.inlinechildren_);
      break;
    }
    // uint32 referencedChildrenTree = 13;
    case kReferencedChildrenTree: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_referencedchildrentree());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void FileInformation::MergeImpl(::Omnira::DataSerialization::MessageLite& to_msg, const ::Omnira::DataSerialization::MessageLite& from_msg) {
  auto* const _this = static_cast<FileInformation*>(&to_msg);
  auto& from = static_cast<const FileInformation&>(from_msg);
  ::Omnira::DataSerialization::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:builra3.FileInformation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.posixdetails_ != nullptr);
    if (_this->_impl_.posixdetails_ == nullptr) {
      _this->_impl_.posixdetails_ =
          ::Omnira::DataSerialization::Message::CopyConstruct<::builra3::PosixFileDetails>(arena, *from._impl_.posixdetails_);
    } else {
      _this->_impl_.posixdetails_->MergeFrom(*from._impl_.posixdetails_);
    }
  }
  if (from._internal_size() != 0) {
    _this->_impl_.size_ = from._impl_.size_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (from._internal_compression() != 0) {
    _this->_impl_.compression_ = from._impl_.compression_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kFixedChunkSize: {
        _this->_impl_.payload_.fixedchunksize_ = from._impl_.payload_.fixedchunksize_;
        break;
      }
      case kInlineChildren: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.inlinechildren_ =
              ::Omnira::DataSerialization::Message::CopyConstruct<::builra3::NamedDirectoryEntries>(arena, *from._impl_.payload_.inlinechildren_);
        } else {
          _this->_impl_.payload_.inlinechildren_->MergeFrom(from._internal_inlinechildren());
        }
        break;
      }
      case kReferencedChildrenTree: {
        _this->_impl_.payload_.referencedchildrentree_ = from._impl_.payload_.referencedchildrentree_;
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::Omnira::DataSerialization::UnknownFieldSet>(from._internal_metadata_);
}

void FileInformation::CopyFrom(const FileInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:builra3.FileInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FileInformation::InternalSwap(FileInformation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::Omnira::DataSerialization::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FileInformation, _impl_.compression_)
      + sizeof(FileInformation::_impl_.compression_)
      - PROTOBUF_FIELD_OFFSET(FileInformation, _impl_.posixdetails_)>(
          reinterpret_cast<char*>(&_impl_.posixdetails_),
          reinterpret_cast<char*>(&other->_impl_.posixdetails_));
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::Omnira::DataSerialization::Metadata FileInformation::GetMetadata() const {
  return ::Omnira::DataSerialization::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace builra3
namespace Omnira {
namespace DataSerialization {
}  // namespace DataSerialization
}  // namespace Omnira
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_builra3_2fCASTree_2eproto),
         ::std::false_type{});
#include "Omnira/DataSerialization/port_undef.inc"
