// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: builra3/CAS.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_builra3_2fCAS_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_builra3_2fCAS_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "Omnira/DataSerialization/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "Omnira/DataSerialization/io/coded_stream.h"
#include "Omnira/DataSerialization/arena.h"
#include "Omnira/DataSerialization/arenastring.h"
#include "Omnira/DataSerialization/generated_message_tctable_decl.h"
#include "Omnira/DataSerialization/generated_message_util.h"
#include "Omnira/DataSerialization/metadata_lite.h"
#include "Omnira/DataSerialization/generated_message_reflection.h"
#include "Omnira/DataSerialization/message.h"
#include "Omnira/DataSerialization/repeated_field.h"  // IWYU pragma: export
#include "Omnira/DataSerialization/extension_set.h"  // IWYU pragma: export
#include "Omnira/DataSerialization/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "Omnira/DataSerialization/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_builra3_2fCAS_2eproto

namespace Omnira {
namespace DataSerialization {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace DataSerialization
}  // namespace Omnira

// Internal implementation detail -- do not use these members.
struct TableStruct_builra3_2fCAS_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::Omnira::DataSerialization::internal::DescriptorTable
    descriptor_table_builra3_2fCAS_2eproto;
namespace builra3 {
class CASID;
struct CASIDDefaultTypeInternal;
extern CASIDDefaultTypeInternal _CASID_default_instance_;
class CASObject;
struct CASObjectDefaultTypeInternal;
extern CASObjectDefaultTypeInternal _CASObject_default_instance_;
}  // namespace builra3
namespace Omnira {
namespace DataSerialization {
}  // namespace DataSerialization
}  // namespace Omnira

namespace builra3 {

// ===================================================================


// -------------------------------------------------------------------

class CASID final : public ::Omnira::DataSerialization::Message
/* @@protoc_insertion_point(class_definition:builra3.CASID) */ {
 public:
  inline CASID() : CASID(nullptr) {}
  ~CASID() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CASID(
      ::Omnira::DataSerialization::internal::ConstantInitialized);

  inline CASID(const CASID& from) : CASID(nullptr, from) {}
  inline CASID(CASID&& from) noexcept
      : CASID(nullptr, std::move(from)) {}
  inline CASID& operator=(const CASID& from) {
    CopyFrom(from);
    return *this;
  }
  inline CASID& operator=(CASID&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::Omnira::DataSerialization::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>(::Omnira::DataSerialization::UnknownFieldSet::default_instance);
  }
  inline ::Omnira::DataSerialization::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>();
  }

  static const ::Omnira::DataSerialization::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::Omnira::DataSerialization::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::Omnira::DataSerialization::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CASID& default_instance() {
    return *internal_default_instance();
  }
  static inline const CASID* internal_default_instance() {
    return reinterpret_cast<const CASID*>(
        &_CASID_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CASID& a, CASID& b) { a.Swap(&b); }
  inline void Swap(CASID* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::Omnira::DataSerialization::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CASID* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CASID* New(::Omnira::DataSerialization::Arena* arena = nullptr) const final {
    return ::Omnira::DataSerialization::Message::DefaultConstruct<CASID>(arena);
  }
  using ::Omnira::DataSerialization::Message::CopyFrom;
  void CopyFrom(const CASID& from);
  using ::Omnira::DataSerialization::Message::MergeFrom;
  void MergeFrom(const CASID& from) { CASID::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::Omnira::DataSerialization::MessageLite& to_msg,
      const ::Omnira::DataSerialization::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::Omnira::DataSerialization::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::Omnira::DataSerialization::Arena* arena);
  void SharedDtor();
  void InternalSwap(CASID* other);
 private:
  friend class ::Omnira::DataSerialization::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "builra3.CASID"; }

 protected:
  explicit CASID(::Omnira::DataSerialization::Arena* arena);
  CASID(::Omnira::DataSerialization::Arena* arena, const CASID& from);
  CASID(::Omnira::DataSerialization::Arena* arena, CASID&& from) noexcept
      : CASID(arena) {
    *this = ::std::move(from);
  }
  const ::Omnira::DataSerialization::Message::ClassData* GetClassData() const final;

 public:
  ::Omnira::DataSerialization::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBytesFieldNumber = 1,
  };
  // bytes bytes = 1;
  void clear_bytes() ;
  const std::string& bytes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bytes(Arg_&& arg, Args_... args);
  std::string* mutable_bytes();
  PROTOBUF_NODISCARD std::string* release_bytes();
  void set_allocated_bytes(std::string* value);

  private:
  const std::string& _internal_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bytes(
      const std::string& value);
  std::string* _internal_mutable_bytes();

  public:
  // @@protoc_insertion_point(class_scope:builra3.CASID)
 private:
  class _Internal;
  friend class ::Omnira::DataSerialization::internal::TcParser;
  static const ::Omnira::DataSerialization::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CASID_default_instance_;

  friend class ::Omnira::DataSerialization::MessageLite;
  friend class ::Omnira::DataSerialization::Arena;
  template <typename T>
  friend class ::Omnira::DataSerialization::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::Omnira::DataSerialization::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena);
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena, const Impl_& from,
                          const CASID& from_msg);
    ::Omnira::DataSerialization::internal::ArenaStringPtr bytes_;
    mutable ::Omnira::DataSerialization::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_builra3_2fCAS_2eproto;
};
// -------------------------------------------------------------------

class CASObject final : public ::Omnira::DataSerialization::Message
/* @@protoc_insertion_point(class_definition:builra3.CASObject) */ {
 public:
  inline CASObject() : CASObject(nullptr) {}
  ~CASObject() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CASObject(
      ::Omnira::DataSerialization::internal::ConstantInitialized);

  inline CASObject(const CASObject& from) : CASObject(nullptr, from) {}
  inline CASObject(CASObject&& from) noexcept
      : CASObject(nullptr, std::move(from)) {}
  inline CASObject& operator=(const CASObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline CASObject& operator=(CASObject&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::Omnira::DataSerialization::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>(::Omnira::DataSerialization::UnknownFieldSet::default_instance);
  }
  inline ::Omnira::DataSerialization::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>();
  }

  static const ::Omnira::DataSerialization::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::Omnira::DataSerialization::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::Omnira::DataSerialization::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CASObject& default_instance() {
    return *internal_default_instance();
  }
  static inline const CASObject* internal_default_instance() {
    return reinterpret_cast<const CASObject*>(
        &_CASObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CASObject& a, CASObject& b) { a.Swap(&b); }
  inline void Swap(CASObject* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::Omnira::DataSerialization::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CASObject* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CASObject* New(::Omnira::DataSerialization::Arena* arena = nullptr) const final {
    return ::Omnira::DataSerialization::Message::DefaultConstruct<CASObject>(arena);
  }
  using ::Omnira::DataSerialization::Message::CopyFrom;
  void CopyFrom(const CASObject& from);
  using ::Omnira::DataSerialization::Message::MergeFrom;
  void MergeFrom(const CASObject& from) { CASObject::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::Omnira::DataSerialization::MessageLite& to_msg,
      const ::Omnira::DataSerialization::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::Omnira::DataSerialization::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::Omnira::DataSerialization::Arena* arena);
  void SharedDtor();
  void InternalSwap(CASObject* other);
 private:
  friend class ::Omnira::DataSerialization::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "builra3.CASObject"; }

 protected:
  explicit CASObject(::Omnira::DataSerialization::Arena* arena);
  CASObject(::Omnira::DataSerialization::Arena* arena, const CASObject& from);
  CASObject(::Omnira::DataSerialization::Arena* arena, CASObject&& from) noexcept
      : CASObject(arena) {
    *this = ::std::move(from);
  }
  const ::Omnira::DataSerialization::Message::ClassData* GetClassData() const final;

 public:
  ::Omnira::DataSerialization::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRefsFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // repeated .builra3.CASID refs = 1;
  int refs_size() const;
  private:
  int _internal_refs_size() const;

  public:
  void clear_refs() ;
  ::builra3::CASID* mutable_refs(int index);
  ::Omnira::DataSerialization::RepeatedPtrField<::builra3::CASID>* mutable_refs();

  private:
  const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::CASID>& _internal_refs() const;
  ::Omnira::DataSerialization::RepeatedPtrField<::builra3::CASID>* _internal_mutable_refs();
  public:
  const ::builra3::CASID& refs(int index) const;
  ::builra3::CASID* add_refs();
  const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::CASID>& refs() const;
  // bytes data = 2;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:builra3.CASObject)
 private:
  class _Internal;
  friend class ::Omnira::DataSerialization::internal::TcParser;
  static const ::Omnira::DataSerialization::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CASObject_default_instance_;

  friend class ::Omnira::DataSerialization::MessageLite;
  friend class ::Omnira::DataSerialization::Arena;
  template <typename T>
  friend class ::Omnira::DataSerialization::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::Omnira::DataSerialization::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena);
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena, const Impl_& from,
                          const CASObject& from_msg);
    ::Omnira::DataSerialization::RepeatedPtrField< ::builra3::CASID > refs_;
    ::Omnira::DataSerialization::internal::ArenaStringPtr data_;
    mutable ::Omnira::DataSerialization::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_builra3_2fCAS_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CASID

// bytes bytes = 1;
inline void CASID::clear_bytes() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.bytes_.ClearToEmpty();
}
inline const std::string& CASID::bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.CASID.bytes)
  return _internal_bytes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CASID::set_bytes(Arg_&& arg,
                                                     Args_... args) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.bytes_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:builra3.CASID.bytes)
}
inline std::string* CASID::mutable_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bytes();
  // @@protoc_insertion_point(field_mutable:builra3.CASID.bytes)
  return _s;
}
inline const std::string& CASID::_internal_bytes() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.bytes_.Get();
}
inline void CASID::_internal_set_bytes(const std::string& value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.bytes_.Set(value, GetArena());
}
inline std::string* CASID::_internal_mutable_bytes() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  return _impl_.bytes_.Mutable( GetArena());
}
inline std::string* CASID::release_bytes() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.CASID.bytes)
  return _impl_.bytes_.Release();
}
inline void CASID::set_allocated_bytes(std::string* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.bytes_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bytes_.IsDefault()) {
          _impl_.bytes_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:builra3.CASID.bytes)
}

// -------------------------------------------------------------------

// CASObject

// repeated .builra3.CASID refs = 1;
inline int CASObject::_internal_refs_size() const {
  return _internal_refs().size();
}
inline int CASObject::refs_size() const {
  return _internal_refs_size();
}
inline void CASObject::clear_refs() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.refs_.Clear();
}
inline ::builra3::CASID* CASObject::mutable_refs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:builra3.CASObject.refs)
  return _internal_mutable_refs()->Mutable(index);
}
inline ::Omnira::DataSerialization::RepeatedPtrField<::builra3::CASID>* CASObject::mutable_refs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:builra3.CASObject.refs)
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  return _internal_mutable_refs();
}
inline const ::builra3::CASID& CASObject::refs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.CASObject.refs)
  return _internal_refs().Get(index);
}
inline ::builra3::CASID* CASObject::add_refs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  ::builra3::CASID* _add = _internal_mutable_refs()->Add();
  // @@protoc_insertion_point(field_add:builra3.CASObject.refs)
  return _add;
}
inline const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::CASID>& CASObject::refs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:builra3.CASObject.refs)
  return _internal_refs();
}
inline const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::CASID>&
CASObject::_internal_refs() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.refs_;
}
inline ::Omnira::DataSerialization::RepeatedPtrField<::builra3::CASID>*
CASObject::_internal_mutable_refs() {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return &_impl_.refs_;
}

// bytes data = 2;
inline void CASObject::clear_data() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& CASObject::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.CASObject.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CASObject::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:builra3.CASObject.data)
}
inline std::string* CASObject::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:builra3.CASObject.data)
  return _s;
}
inline const std::string& CASObject::_internal_data() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void CASObject::_internal_set_data(const std::string& value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* CASObject::_internal_mutable_data() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* CASObject::release_data() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.CASObject.data)
  return _impl_.data_.Release();
}
inline void CASObject::set_allocated_data(std::string* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:builra3.CASObject.data)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace builra3


// @@protoc_insertion_point(global_scope)

#include "Omnira/DataSerialization/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_builra3_2fCAS_2eproto_2epb_2eh
