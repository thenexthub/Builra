// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: builra3/Action.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_builra3_2fAction_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_builra3_2fAction_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "Omnira/DataSerialization/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "Omnira/DataSerialization/io/coded_stream.h"
#include "Omnira/DataSerialization/arena.h"
#include "Omnira/DataSerialization/arenastring.h"
#include "Omnira/DataSerialization/generated_message_tctable_decl.h"
#include "Omnira/DataSerialization/generated_message_util.h"
#include "Omnira/DataSerialization/metadata_lite.h"
#include "Omnira/DataSerialization/generated_message_reflection.h"
#include "Omnira/DataSerialization/message.h"
#include "Omnira/DataSerialization/repeated_field.h"  // IWYU pragma: export
#include "Omnira/DataSerialization/extension_set.h"  // IWYU pragma: export
#include "Omnira/DataSerialization/unknown_field_set.h"
#include "builra3/CAS.pb.h"
#include "builra3/CASTree.pb.h"
#include "builra3/Label.pb.h"
#include "Omnira/DataSerialization/any.pb.h"
#include "Omnira/DataSerialization/duration.pb.h"
#include "Omnira/DataSerialization/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "Omnira/DataSerialization/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_builra3_2fAction_2eproto

namespace Omnira {
namespace DataSerialization {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace DataSerialization
}  // namespace Omnira

// Internal implementation detail -- do not use these members.
struct TableStruct_builra3_2fAction_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::Omnira::DataSerialization::internal::DescriptorTable
    descriptor_table_builra3_2fAction_2eproto;
namespace builra3 {
class Action;
struct ActionDefaultTypeInternal;
extern ActionDefaultTypeInternal _Action_default_instance_;
class ActionExecutionMetadata;
struct ActionExecutionMetadataDefaultTypeInternal;
extern ActionExecutionMetadataDefaultTypeInternal _ActionExecutionMetadata_default_instance_;
class ActionResult;
struct ActionResultDefaultTypeInternal;
extern ActionResultDefaultTypeInternal _ActionResult_default_instance_;
class FileObject;
struct FileObjectDefaultTypeInternal;
extern FileObjectDefaultTypeInternal _FileObject_default_instance_;
class Platform;
struct PlatformDefaultTypeInternal;
extern PlatformDefaultTypeInternal _Platform_default_instance_;
class Platform_Property;
struct Platform_PropertyDefaultTypeInternal;
extern Platform_PropertyDefaultTypeInternal _Platform_Property_default_instance_;
class Subprocess;
struct SubprocessDefaultTypeInternal;
extern SubprocessDefaultTypeInternal _Subprocess_default_instance_;
class SubprocessResult;
struct SubprocessResultDefaultTypeInternal;
extern SubprocessResultDefaultTypeInternal _SubprocessResult_default_instance_;
class Subprocess_EnvironmentVariable;
struct Subprocess_EnvironmentVariableDefaultTypeInternal;
extern Subprocess_EnvironmentVariableDefaultTypeInternal _Subprocess_EnvironmentVariable_default_instance_;
}  // namespace builra3
namespace Omnira {
namespace DataSerialization {
}  // namespace DataSerialization
}  // namespace Omnira

namespace builra3 {

// ===================================================================


// -------------------------------------------------------------------

class Subprocess_EnvironmentVariable final : public ::Omnira::DataSerialization::Message
/* @@protoc_insertion_point(class_definition:builra3.Subprocess.EnvironmentVariable) */ {
 public:
  inline Subprocess_EnvironmentVariable() : Subprocess_EnvironmentVariable(nullptr) {}
  ~Subprocess_EnvironmentVariable() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Subprocess_EnvironmentVariable(
      ::Omnira::DataSerialization::internal::ConstantInitialized);

  inline Subprocess_EnvironmentVariable(const Subprocess_EnvironmentVariable& from) : Subprocess_EnvironmentVariable(nullptr, from) {}
  inline Subprocess_EnvironmentVariable(Subprocess_EnvironmentVariable&& from) noexcept
      : Subprocess_EnvironmentVariable(nullptr, std::move(from)) {}
  inline Subprocess_EnvironmentVariable& operator=(const Subprocess_EnvironmentVariable& from) {
    CopyFrom(from);
    return *this;
  }
  inline Subprocess_EnvironmentVariable& operator=(Subprocess_EnvironmentVariable&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::Omnira::DataSerialization::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>(::Omnira::DataSerialization::UnknownFieldSet::default_instance);
  }
  inline ::Omnira::DataSerialization::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>();
  }

  static const ::Omnira::DataSerialization::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::Omnira::DataSerialization::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::Omnira::DataSerialization::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Subprocess_EnvironmentVariable& default_instance() {
    return *internal_default_instance();
  }
  static inline const Subprocess_EnvironmentVariable* internal_default_instance() {
    return reinterpret_cast<const Subprocess_EnvironmentVariable*>(
        &_Subprocess_EnvironmentVariable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Subprocess_EnvironmentVariable& a, Subprocess_EnvironmentVariable& b) { a.Swap(&b); }
  inline void Swap(Subprocess_EnvironmentVariable* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::Omnira::DataSerialization::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Subprocess_EnvironmentVariable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Subprocess_EnvironmentVariable* New(::Omnira::DataSerialization::Arena* arena = nullptr) const final {
    return ::Omnira::DataSerialization::Message::DefaultConstruct<Subprocess_EnvironmentVariable>(arena);
  }
  using ::Omnira::DataSerialization::Message::CopyFrom;
  void CopyFrom(const Subprocess_EnvironmentVariable& from);
  using ::Omnira::DataSerialization::Message::MergeFrom;
  void MergeFrom(const Subprocess_EnvironmentVariable& from) { Subprocess_EnvironmentVariable::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::Omnira::DataSerialization::MessageLite& to_msg,
      const ::Omnira::DataSerialization::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::Omnira::DataSerialization::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::Omnira::DataSerialization::Arena* arena);
  void SharedDtor();
  void InternalSwap(Subprocess_EnvironmentVariable* other);
 private:
  friend class ::Omnira::DataSerialization::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "builra3.Subprocess.EnvironmentVariable"; }

 protected:
  explicit Subprocess_EnvironmentVariable(::Omnira::DataSerialization::Arena* arena);
  Subprocess_EnvironmentVariable(::Omnira::DataSerialization::Arena* arena, const Subprocess_EnvironmentVariable& from);
  Subprocess_EnvironmentVariable(::Omnira::DataSerialization::Arena* arena, Subprocess_EnvironmentVariable&& from) noexcept
      : Subprocess_EnvironmentVariable(arena) {
    *this = ::std::move(from);
  }
  const ::Omnira::DataSerialization::Message::ClassData* GetClassData() const final;

 public:
  ::Omnira::DataSerialization::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string value = 2;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:builra3.Subprocess.EnvironmentVariable)
 private:
  class _Internal;
  friend class ::Omnira::DataSerialization::internal::TcParser;
  static const ::Omnira::DataSerialization::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Subprocess_EnvironmentVariable_default_instance_;

  friend class ::Omnira::DataSerialization::MessageLite;
  friend class ::Omnira::DataSerialization::Arena;
  template <typename T>
  friend class ::Omnira::DataSerialization::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::Omnira::DataSerialization::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena);
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena, const Impl_& from,
                          const Subprocess_EnvironmentVariable& from_msg);
    ::Omnira::DataSerialization::internal::ArenaStringPtr name_;
    ::Omnira::DataSerialization::internal::ArenaStringPtr value_;
    mutable ::Omnira::DataSerialization::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_builra3_2fAction_2eproto;
};
// -------------------------------------------------------------------

class Platform_Property final : public ::Omnira::DataSerialization::Message
/* @@protoc_insertion_point(class_definition:builra3.Platform.Property) */ {
 public:
  inline Platform_Property() : Platform_Property(nullptr) {}
  ~Platform_Property() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Platform_Property(
      ::Omnira::DataSerialization::internal::ConstantInitialized);

  inline Platform_Property(const Platform_Property& from) : Platform_Property(nullptr, from) {}
  inline Platform_Property(Platform_Property&& from) noexcept
      : Platform_Property(nullptr, std::move(from)) {}
  inline Platform_Property& operator=(const Platform_Property& from) {
    CopyFrom(from);
    return *this;
  }
  inline Platform_Property& operator=(Platform_Property&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::Omnira::DataSerialization::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>(::Omnira::DataSerialization::UnknownFieldSet::default_instance);
  }
  inline ::Omnira::DataSerialization::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>();
  }

  static const ::Omnira::DataSerialization::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::Omnira::DataSerialization::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::Omnira::DataSerialization::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Platform_Property& default_instance() {
    return *internal_default_instance();
  }
  static inline const Platform_Property* internal_default_instance() {
    return reinterpret_cast<const Platform_Property*>(
        &_Platform_Property_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Platform_Property& a, Platform_Property& b) { a.Swap(&b); }
  inline void Swap(Platform_Property* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::Omnira::DataSerialization::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Platform_Property* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Platform_Property* New(::Omnira::DataSerialization::Arena* arena = nullptr) const final {
    return ::Omnira::DataSerialization::Message::DefaultConstruct<Platform_Property>(arena);
  }
  using ::Omnira::DataSerialization::Message::CopyFrom;
  void CopyFrom(const Platform_Property& from);
  using ::Omnira::DataSerialization::Message::MergeFrom;
  void MergeFrom(const Platform_Property& from) { Platform_Property::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::Omnira::DataSerialization::MessageLite& to_msg,
      const ::Omnira::DataSerialization::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::Omnira::DataSerialization::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::Omnira::DataSerialization::Arena* arena);
  void SharedDtor();
  void InternalSwap(Platform_Property* other);
 private:
  friend class ::Omnira::DataSerialization::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "builra3.Platform.Property"; }

 protected:
  explicit Platform_Property(::Omnira::DataSerialization::Arena* arena);
  Platform_Property(::Omnira::DataSerialization::Arena* arena, const Platform_Property& from);
  Platform_Property(::Omnira::DataSerialization::Arena* arena, Platform_Property&& from) noexcept
      : Platform_Property(arena) {
    *this = ::std::move(from);
  }
  const ::Omnira::DataSerialization::Message::ClassData* GetClassData() const final;

 public:
  ::Omnira::DataSerialization::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string value = 2;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:builra3.Platform.Property)
 private:
  class _Internal;
  friend class ::Omnira::DataSerialization::internal::TcParser;
  static const ::Omnira::DataSerialization::internal::TcParseTable<
      1, 2, 0,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Platform_Property_default_instance_;

  friend class ::Omnira::DataSerialization::MessageLite;
  friend class ::Omnira::DataSerialization::Arena;
  template <typename T>
  friend class ::Omnira::DataSerialization::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::Omnira::DataSerialization::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena);
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena, const Impl_& from,
                          const Platform_Property& from_msg);
    ::Omnira::DataSerialization::internal::ArenaStringPtr name_;
    ::Omnira::DataSerialization::internal::ArenaStringPtr value_;
    mutable ::Omnira::DataSerialization::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_builra3_2fAction_2eproto;
};
// -------------------------------------------------------------------

class Platform final : public ::Omnira::DataSerialization::Message
/* @@protoc_insertion_point(class_definition:builra3.Platform) */ {
 public:
  inline Platform() : Platform(nullptr) {}
  ~Platform() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Platform(
      ::Omnira::DataSerialization::internal::ConstantInitialized);

  inline Platform(const Platform& from) : Platform(nullptr, from) {}
  inline Platform(Platform&& from) noexcept
      : Platform(nullptr, std::move(from)) {}
  inline Platform& operator=(const Platform& from) {
    CopyFrom(from);
    return *this;
  }
  inline Platform& operator=(Platform&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::Omnira::DataSerialization::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>(::Omnira::DataSerialization::UnknownFieldSet::default_instance);
  }
  inline ::Omnira::DataSerialization::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>();
  }

  static const ::Omnira::DataSerialization::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::Omnira::DataSerialization::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::Omnira::DataSerialization::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Platform& default_instance() {
    return *internal_default_instance();
  }
  static inline const Platform* internal_default_instance() {
    return reinterpret_cast<const Platform*>(
        &_Platform_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Platform& a, Platform& b) { a.Swap(&b); }
  inline void Swap(Platform* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::Omnira::DataSerialization::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Platform* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Platform* New(::Omnira::DataSerialization::Arena* arena = nullptr) const final {
    return ::Omnira::DataSerialization::Message::DefaultConstruct<Platform>(arena);
  }
  using ::Omnira::DataSerialization::Message::CopyFrom;
  void CopyFrom(const Platform& from);
  using ::Omnira::DataSerialization::Message::MergeFrom;
  void MergeFrom(const Platform& from) { Platform::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::Omnira::DataSerialization::MessageLite& to_msg,
      const ::Omnira::DataSerialization::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::Omnira::DataSerialization::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::Omnira::DataSerialization::Arena* arena);
  void SharedDtor();
  void InternalSwap(Platform* other);
 private:
  friend class ::Omnira::DataSerialization::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "builra3.Platform"; }

 protected:
  explicit Platform(::Omnira::DataSerialization::Arena* arena);
  Platform(::Omnira::DataSerialization::Arena* arena, const Platform& from);
  Platform(::Omnira::DataSerialization::Arena* arena, Platform&& from) noexcept
      : Platform(arena) {
    *this = ::std::move(from);
  }
  const ::Omnira::DataSerialization::Message::ClassData* GetClassData() const final;

 public:
  ::Omnira::DataSerialization::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Property = Platform_Property;

  // accessors -------------------------------------------------------
  enum : int {
    kPropertiesFieldNumber = 1,
  };
  // repeated .builra3.Platform.Property properties = 1;
  int properties_size() const;
  private:
  int _internal_properties_size() const;

  public:
  void clear_properties() ;
  ::builra3::Platform_Property* mutable_properties(int index);
  ::Omnira::DataSerialization::RepeatedPtrField<::builra3::Platform_Property>* mutable_properties();

  private:
  const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::Platform_Property>& _internal_properties() const;
  ::Omnira::DataSerialization::RepeatedPtrField<::builra3::Platform_Property>* _internal_mutable_properties();
  public:
  const ::builra3::Platform_Property& properties(int index) const;
  ::builra3::Platform_Property* add_properties();
  const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::Platform_Property>& properties() const;
  // @@protoc_insertion_point(class_scope:builra3.Platform)
 private:
  class _Internal;
  friend class ::Omnira::DataSerialization::internal::TcParser;
  static const ::Omnira::DataSerialization::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Platform_default_instance_;

  friend class ::Omnira::DataSerialization::MessageLite;
  friend class ::Omnira::DataSerialization::Arena;
  template <typename T>
  friend class ::Omnira::DataSerialization::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::Omnira::DataSerialization::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena);
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena, const Impl_& from,
                          const Platform& from_msg);
    ::Omnira::DataSerialization::RepeatedPtrField< ::builra3::Platform_Property > properties_;
    mutable ::Omnira::DataSerialization::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_builra3_2fAction_2eproto;
};
// -------------------------------------------------------------------

class FileObject final : public ::Omnira::DataSerialization::Message
/* @@protoc_insertion_point(class_definition:builra3.FileObject) */ {
 public:
  inline FileObject() : FileObject(nullptr) {}
  ~FileObject() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FileObject(
      ::Omnira::DataSerialization::internal::ConstantInitialized);

  inline FileObject(const FileObject& from) : FileObject(nullptr, from) {}
  inline FileObject(FileObject&& from) noexcept
      : FileObject(nullptr, std::move(from)) {}
  inline FileObject& operator=(const FileObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline FileObject& operator=(FileObject&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::Omnira::DataSerialization::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>(::Omnira::DataSerialization::UnknownFieldSet::default_instance);
  }
  inline ::Omnira::DataSerialization::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>();
  }

  static const ::Omnira::DataSerialization::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::Omnira::DataSerialization::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::Omnira::DataSerialization::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FileObject& default_instance() {
    return *internal_default_instance();
  }
  static inline const FileObject* internal_default_instance() {
    return reinterpret_cast<const FileObject*>(
        &_FileObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(FileObject& a, FileObject& b) { a.Swap(&b); }
  inline void Swap(FileObject* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::Omnira::DataSerialization::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FileObject* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FileObject* New(::Omnira::DataSerialization::Arena* arena = nullptr) const final {
    return ::Omnira::DataSerialization::Message::DefaultConstruct<FileObject>(arena);
  }
  using ::Omnira::DataSerialization::Message::CopyFrom;
  void CopyFrom(const FileObject& from);
  using ::Omnira::DataSerialization::Message::MergeFrom;
  void MergeFrom(const FileObject& from) { FileObject::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::Omnira::DataSerialization::MessageLite& to_msg,
      const ::Omnira::DataSerialization::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::Omnira::DataSerialization::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::Omnira::DataSerialization::Arena* arena);
  void SharedDtor();
  void InternalSwap(FileObject* other);
 private:
  friend class ::Omnira::DataSerialization::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "builra3.FileObject"; }

 protected:
  explicit FileObject(::Omnira::DataSerialization::Arena* arena);
  FileObject(::Omnira::DataSerialization::Arena* arena, const FileObject& from);
  FileObject(::Omnira::DataSerialization::Arena* arena, FileObject&& from) noexcept
      : FileObject(arena) {
    *this = ::std::move(from);
  }
  const ::Omnira::DataSerialization::Message::ClassData* GetClassData() const final;

 public:
  ::Omnira::DataSerialization::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPathFieldNumber = 1,
    kObjectFieldNumber = 3,
    kTypeFieldNumber = 2,
  };
  // string path = 1;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // .builra3.CASID object = 3;
  bool has_object() const;
  void clear_object() ;
  const ::builra3::CASID& object() const;
  PROTOBUF_NODISCARD ::builra3::CASID* release_object();
  ::builra3::CASID* mutable_object();
  void set_allocated_object(::builra3::CASID* value);
  void unsafe_arena_set_allocated_object(::builra3::CASID* value);
  ::builra3::CASID* unsafe_arena_release_object();

  private:
  const ::builra3::CASID& _internal_object() const;
  ::builra3::CASID* _internal_mutable_object();

  public:
  // .builra3.FileType type = 2;
  void clear_type() ;
  ::builra3::FileType type() const;
  void set_type(::builra3::FileType value);

  private:
  ::builra3::FileType _internal_type() const;
  void _internal_set_type(::builra3::FileType value);

  public:
  // @@protoc_insertion_point(class_scope:builra3.FileObject)
 private:
  class _Internal;
  friend class ::Omnira::DataSerialization::internal::TcParser;
  static const ::Omnira::DataSerialization::internal::TcParseTable<
      2, 3, 1,
      32, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FileObject_default_instance_;

  friend class ::Omnira::DataSerialization::MessageLite;
  friend class ::Omnira::DataSerialization::Arena;
  template <typename T>
  friend class ::Omnira::DataSerialization::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::Omnira::DataSerialization::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena);
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena, const Impl_& from,
                          const FileObject& from_msg);
    ::Omnira::DataSerialization::internal::HasBits<1> _has_bits_;
    mutable ::Omnira::DataSerialization::internal::CachedSize _cached_size_;
    ::Omnira::DataSerialization::internal::ArenaStringPtr path_;
    ::builra3::CASID* object_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_builra3_2fAction_2eproto;
};
// -------------------------------------------------------------------

class ActionExecutionMetadata final : public ::Omnira::DataSerialization::Message
/* @@protoc_insertion_point(class_definition:builra3.ActionExecutionMetadata) */ {
 public:
  inline ActionExecutionMetadata() : ActionExecutionMetadata(nullptr) {}
  ~ActionExecutionMetadata() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ActionExecutionMetadata(
      ::Omnira::DataSerialization::internal::ConstantInitialized);

  inline ActionExecutionMetadata(const ActionExecutionMetadata& from) : ActionExecutionMetadata(nullptr, from) {}
  inline ActionExecutionMetadata(ActionExecutionMetadata&& from) noexcept
      : ActionExecutionMetadata(nullptr, std::move(from)) {}
  inline ActionExecutionMetadata& operator=(const ActionExecutionMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActionExecutionMetadata& operator=(ActionExecutionMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::Omnira::DataSerialization::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>(::Omnira::DataSerialization::UnknownFieldSet::default_instance);
  }
  inline ::Omnira::DataSerialization::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>();
  }

  static const ::Omnira::DataSerialization::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::Omnira::DataSerialization::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::Omnira::DataSerialization::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActionExecutionMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActionExecutionMetadata* internal_default_instance() {
    return reinterpret_cast<const ActionExecutionMetadata*>(
        &_ActionExecutionMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ActionExecutionMetadata& a, ActionExecutionMetadata& b) { a.Swap(&b); }
  inline void Swap(ActionExecutionMetadata* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::Omnira::DataSerialization::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActionExecutionMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActionExecutionMetadata* New(::Omnira::DataSerialization::Arena* arena = nullptr) const final {
    return ::Omnira::DataSerialization::Message::DefaultConstruct<ActionExecutionMetadata>(arena);
  }
  using ::Omnira::DataSerialization::Message::CopyFrom;
  void CopyFrom(const ActionExecutionMetadata& from);
  using ::Omnira::DataSerialization::Message::MergeFrom;
  void MergeFrom(const ActionExecutionMetadata& from) { ActionExecutionMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::Omnira::DataSerialization::MessageLite& to_msg,
      const ::Omnira::DataSerialization::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::Omnira::DataSerialization::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::Omnira::DataSerialization::Arena* arena);
  void SharedDtor();
  void InternalSwap(ActionExecutionMetadata* other);
 private:
  friend class ::Omnira::DataSerialization::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "builra3.ActionExecutionMetadata"; }

 protected:
  explicit ActionExecutionMetadata(::Omnira::DataSerialization::Arena* arena);
  ActionExecutionMetadata(::Omnira::DataSerialization::Arena* arena, const ActionExecutionMetadata& from);
  ActionExecutionMetadata(::Omnira::DataSerialization::Arena* arena, ActionExecutionMetadata&& from) noexcept
      : ActionExecutionMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::Omnira::DataSerialization::Message::ClassData* GetClassData() const final;

 public:
  ::Omnira::DataSerialization::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAdditionalDataFieldNumber = 15,
    kWorkerFieldNumber = 1,
    kQueuedFieldNumber = 2,
    kDispatchedFieldNumber = 3,
    kWorkerStartFieldNumber = 4,
    kWorkerCompletedFieldNumber = 5,
    kExecutionStartFieldNumber = 6,
    kExecutionCompletedFieldNumber = 7,
    kExecutionDurationFieldNumber = 8,
    kExecutionUserTimeFieldNumber = 9,
    kExecutionSystemTimeFieldNumber = 10,
    kOutputUploadStartFieldNumber = 12,
    kOutputUploadCompletedFieldNumber = 13,
    kCompletedFieldNumber = 14,
    kExecutionMaxRssFieldNumber = 11,
  };
  // repeated .google.protobuf.Any additional_data = 15;
  int additional_data_size() const;
  private:
  int _internal_additional_data_size() const;

  public:
  void clear_additional_data() ;
  ::Omnira::DataSerialization::Any* mutable_additional_data(int index);
  ::Omnira::DataSerialization::RepeatedPtrField<::Omnira::DataSerialization::Any>* mutable_additional_data();

  private:
  const ::Omnira::DataSerialization::RepeatedPtrField<::Omnira::DataSerialization::Any>& _internal_additional_data() const;
  ::Omnira::DataSerialization::RepeatedPtrField<::Omnira::DataSerialization::Any>* _internal_mutable_additional_data();
  public:
  const ::Omnira::DataSerialization::Any& additional_data(int index) const;
  ::Omnira::DataSerialization::Any* add_additional_data();
  const ::Omnira::DataSerialization::RepeatedPtrField<::Omnira::DataSerialization::Any>& additional_data() const;
  // string worker = 1;
  void clear_worker() ;
  const std::string& worker() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_worker(Arg_&& arg, Args_... args);
  std::string* mutable_worker();
  PROTOBUF_NODISCARD std::string* release_worker();
  void set_allocated_worker(std::string* value);

  private:
  const std::string& _internal_worker() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_worker(
      const std::string& value);
  std::string* _internal_mutable_worker();

  public:
  // .google.protobuf.Timestamp queued = 2;
  bool has_queued() const;
  void clear_queued() ;
  const ::Omnira::DataSerialization::Timestamp& queued() const;
  PROTOBUF_NODISCARD ::Omnira::DataSerialization::Timestamp* release_queued();
  ::Omnira::DataSerialization::Timestamp* mutable_queued();
  void set_allocated_queued(::Omnira::DataSerialization::Timestamp* value);
  void unsafe_arena_set_allocated_queued(::Omnira::DataSerialization::Timestamp* value);
  ::Omnira::DataSerialization::Timestamp* unsafe_arena_release_queued();

  private:
  const ::Omnira::DataSerialization::Timestamp& _internal_queued() const;
  ::Omnira::DataSerialization::Timestamp* _internal_mutable_queued();

  public:
  // .google.protobuf.Timestamp dispatched = 3;
  bool has_dispatched() const;
  void clear_dispatched() ;
  const ::Omnira::DataSerialization::Timestamp& dispatched() const;
  PROTOBUF_NODISCARD ::Omnira::DataSerialization::Timestamp* release_dispatched();
  ::Omnira::DataSerialization::Timestamp* mutable_dispatched();
  void set_allocated_dispatched(::Omnira::DataSerialization::Timestamp* value);
  void unsafe_arena_set_allocated_dispatched(::Omnira::DataSerialization::Timestamp* value);
  ::Omnira::DataSerialization::Timestamp* unsafe_arena_release_dispatched();

  private:
  const ::Omnira::DataSerialization::Timestamp& _internal_dispatched() const;
  ::Omnira::DataSerialization::Timestamp* _internal_mutable_dispatched();

  public:
  // .google.protobuf.Timestamp worker_start = 4;
  bool has_worker_start() const;
  void clear_worker_start() ;
  const ::Omnira::DataSerialization::Timestamp& worker_start() const;
  PROTOBUF_NODISCARD ::Omnira::DataSerialization::Timestamp* release_worker_start();
  ::Omnira::DataSerialization::Timestamp* mutable_worker_start();
  void set_allocated_worker_start(::Omnira::DataSerialization::Timestamp* value);
  void unsafe_arena_set_allocated_worker_start(::Omnira::DataSerialization::Timestamp* value);
  ::Omnira::DataSerialization::Timestamp* unsafe_arena_release_worker_start();

  private:
  const ::Omnira::DataSerialization::Timestamp& _internal_worker_start() const;
  ::Omnira::DataSerialization::Timestamp* _internal_mutable_worker_start();

  public:
  // .google.protobuf.Timestamp worker_completed = 5;
  bool has_worker_completed() const;
  void clear_worker_completed() ;
  const ::Omnira::DataSerialization::Timestamp& worker_completed() const;
  PROTOBUF_NODISCARD ::Omnira::DataSerialization::Timestamp* release_worker_completed();
  ::Omnira::DataSerialization::Timestamp* mutable_worker_completed();
  void set_allocated_worker_completed(::Omnira::DataSerialization::Timestamp* value);
  void unsafe_arena_set_allocated_worker_completed(::Omnira::DataSerialization::Timestamp* value);
  ::Omnira::DataSerialization::Timestamp* unsafe_arena_release_worker_completed();

  private:
  const ::Omnira::DataSerialization::Timestamp& _internal_worker_completed() const;
  ::Omnira::DataSerialization::Timestamp* _internal_mutable_worker_completed();

  public:
  // .google.protobuf.Timestamp execution_start = 6;
  bool has_execution_start() const;
  void clear_execution_start() ;
  const ::Omnira::DataSerialization::Timestamp& execution_start() const;
  PROTOBUF_NODISCARD ::Omnira::DataSerialization::Timestamp* release_execution_start();
  ::Omnira::DataSerialization::Timestamp* mutable_execution_start();
  void set_allocated_execution_start(::Omnira::DataSerialization::Timestamp* value);
  void unsafe_arena_set_allocated_execution_start(::Omnira::DataSerialization::Timestamp* value);
  ::Omnira::DataSerialization::Timestamp* unsafe_arena_release_execution_start();

  private:
  const ::Omnira::DataSerialization::Timestamp& _internal_execution_start() const;
  ::Omnira::DataSerialization::Timestamp* _internal_mutable_execution_start();

  public:
  // .google.protobuf.Timestamp execution_completed = 7;
  bool has_execution_completed() const;
  void clear_execution_completed() ;
  const ::Omnira::DataSerialization::Timestamp& execution_completed() const;
  PROTOBUF_NODISCARD ::Omnira::DataSerialization::Timestamp* release_execution_completed();
  ::Omnira::DataSerialization::Timestamp* mutable_execution_completed();
  void set_allocated_execution_completed(::Omnira::DataSerialization::Timestamp* value);
  void unsafe_arena_set_allocated_execution_completed(::Omnira::DataSerialization::Timestamp* value);
  ::Omnira::DataSerialization::Timestamp* unsafe_arena_release_execution_completed();

  private:
  const ::Omnira::DataSerialization::Timestamp& _internal_execution_completed() const;
  ::Omnira::DataSerialization::Timestamp* _internal_mutable_execution_completed();

  public:
  // .google.protobuf.Duration execution_duration = 8;
  bool has_execution_duration() const;
  void clear_execution_duration() ;
  const ::Omnira::DataSerialization::Duration& execution_duration() const;
  PROTOBUF_NODISCARD ::Omnira::DataSerialization::Duration* release_execution_duration();
  ::Omnira::DataSerialization::Duration* mutable_execution_duration();
  void set_allocated_execution_duration(::Omnira::DataSerialization::Duration* value);
  void unsafe_arena_set_allocated_execution_duration(::Omnira::DataSerialization::Duration* value);
  ::Omnira::DataSerialization::Duration* unsafe_arena_release_execution_duration();

  private:
  const ::Omnira::DataSerialization::Duration& _internal_execution_duration() const;
  ::Omnira::DataSerialization::Duration* _internal_mutable_execution_duration();

  public:
  // .google.protobuf.Duration execution_user_time = 9;
  bool has_execution_user_time() const;
  void clear_execution_user_time() ;
  const ::Omnira::DataSerialization::Duration& execution_user_time() const;
  PROTOBUF_NODISCARD ::Omnira::DataSerialization::Duration* release_execution_user_time();
  ::Omnira::DataSerialization::Duration* mutable_execution_user_time();
  void set_allocated_execution_user_time(::Omnira::DataSerialization::Duration* value);
  void unsafe_arena_set_allocated_execution_user_time(::Omnira::DataSerialization::Duration* value);
  ::Omnira::DataSerialization::Duration* unsafe_arena_release_execution_user_time();

  private:
  const ::Omnira::DataSerialization::Duration& _internal_execution_user_time() const;
  ::Omnira::DataSerialization::Duration* _internal_mutable_execution_user_time();

  public:
  // .google.protobuf.Duration execution_system_time = 10;
  bool has_execution_system_time() const;
  void clear_execution_system_time() ;
  const ::Omnira::DataSerialization::Duration& execution_system_time() const;
  PROTOBUF_NODISCARD ::Omnira::DataSerialization::Duration* release_execution_system_time();
  ::Omnira::DataSerialization::Duration* mutable_execution_system_time();
  void set_allocated_execution_system_time(::Omnira::DataSerialization::Duration* value);
  void unsafe_arena_set_allocated_execution_system_time(::Omnira::DataSerialization::Duration* value);
  ::Omnira::DataSerialization::Duration* unsafe_arena_release_execution_system_time();

  private:
  const ::Omnira::DataSerialization::Duration& _internal_execution_system_time() const;
  ::Omnira::DataSerialization::Duration* _internal_mutable_execution_system_time();

  public:
  // .google.protobuf.Timestamp output_upload_start = 12;
  bool has_output_upload_start() const;
  void clear_output_upload_start() ;
  const ::Omnira::DataSerialization::Timestamp& output_upload_start() const;
  PROTOBUF_NODISCARD ::Omnira::DataSerialization::Timestamp* release_output_upload_start();
  ::Omnira::DataSerialization::Timestamp* mutable_output_upload_start();
  void set_allocated_output_upload_start(::Omnira::DataSerialization::Timestamp* value);
  void unsafe_arena_set_allocated_output_upload_start(::Omnira::DataSerialization::Timestamp* value);
  ::Omnira::DataSerialization::Timestamp* unsafe_arena_release_output_upload_start();

  private:
  const ::Omnira::DataSerialization::Timestamp& _internal_output_upload_start() const;
  ::Omnira::DataSerialization::Timestamp* _internal_mutable_output_upload_start();

  public:
  // .google.protobuf.Timestamp output_upload_completed = 13;
  bool has_output_upload_completed() const;
  void clear_output_upload_completed() ;
  const ::Omnira::DataSerialization::Timestamp& output_upload_completed() const;
  PROTOBUF_NODISCARD ::Omnira::DataSerialization::Timestamp* release_output_upload_completed();
  ::Omnira::DataSerialization::Timestamp* mutable_output_upload_completed();
  void set_allocated_output_upload_completed(::Omnira::DataSerialization::Timestamp* value);
  void unsafe_arena_set_allocated_output_upload_completed(::Omnira::DataSerialization::Timestamp* value);
  ::Omnira::DataSerialization::Timestamp* unsafe_arena_release_output_upload_completed();

  private:
  const ::Omnira::DataSerialization::Timestamp& _internal_output_upload_completed() const;
  ::Omnira::DataSerialization::Timestamp* _internal_mutable_output_upload_completed();

  public:
  // .google.protobuf.Timestamp completed = 14;
  bool has_completed() const;
  void clear_completed() ;
  const ::Omnira::DataSerialization::Timestamp& completed() const;
  PROTOBUF_NODISCARD ::Omnira::DataSerialization::Timestamp* release_completed();
  ::Omnira::DataSerialization::Timestamp* mutable_completed();
  void set_allocated_completed(::Omnira::DataSerialization::Timestamp* value);
  void unsafe_arena_set_allocated_completed(::Omnira::DataSerialization::Timestamp* value);
  ::Omnira::DataSerialization::Timestamp* unsafe_arena_release_completed();

  private:
  const ::Omnira::DataSerialization::Timestamp& _internal_completed() const;
  ::Omnira::DataSerialization::Timestamp* _internal_mutable_completed();

  public:
  // uint64 execution_max_rss = 11;
  void clear_execution_max_rss() ;
  ::uint64_t execution_max_rss() const;
  void set_execution_max_rss(::uint64_t value);

  private:
  ::uint64_t _internal_execution_max_rss() const;
  void _internal_set_execution_max_rss(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:builra3.ActionExecutionMetadata)
 private:
  class _Internal;
  friend class ::Omnira::DataSerialization::internal::TcParser;
  static const ::Omnira::DataSerialization::internal::TcParseTable<
      4, 15, 13,
      55, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ActionExecutionMetadata_default_instance_;

  friend class ::Omnira::DataSerialization::MessageLite;
  friend class ::Omnira::DataSerialization::Arena;
  template <typename T>
  friend class ::Omnira::DataSerialization::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::Omnira::DataSerialization::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena);
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena, const Impl_& from,
                          const ActionExecutionMetadata& from_msg);
    ::Omnira::DataSerialization::internal::HasBits<1> _has_bits_;
    mutable ::Omnira::DataSerialization::internal::CachedSize _cached_size_;
    ::Omnira::DataSerialization::RepeatedPtrField< ::Omnira::DataSerialization::Any > additional_data_;
    ::Omnira::DataSerialization::internal::ArenaStringPtr worker_;
    ::Omnira::DataSerialization::Timestamp* queued_;
    ::Omnira::DataSerialization::Timestamp* dispatched_;
    ::Omnira::DataSerialization::Timestamp* worker_start_;
    ::Omnira::DataSerialization::Timestamp* worker_completed_;
    ::Omnira::DataSerialization::Timestamp* execution_start_;
    ::Omnira::DataSerialization::Timestamp* execution_completed_;
    ::Omnira::DataSerialization::Duration* execution_duration_;
    ::Omnira::DataSerialization::Duration* execution_user_time_;
    ::Omnira::DataSerialization::Duration* execution_system_time_;
    ::Omnira::DataSerialization::Timestamp* output_upload_start_;
    ::Omnira::DataSerialization::Timestamp* output_upload_completed_;
    ::Omnira::DataSerialization::Timestamp* completed_;
    ::uint64_t execution_max_rss_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_builra3_2fAction_2eproto;
};
// -------------------------------------------------------------------

class SubprocessResult final : public ::Omnira::DataSerialization::Message
/* @@protoc_insertion_point(class_definition:builra3.SubprocessResult) */ {
 public:
  inline SubprocessResult() : SubprocessResult(nullptr) {}
  ~SubprocessResult() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubprocessResult(
      ::Omnira::DataSerialization::internal::ConstantInitialized);

  inline SubprocessResult(const SubprocessResult& from) : SubprocessResult(nullptr, from) {}
  inline SubprocessResult(SubprocessResult&& from) noexcept
      : SubprocessResult(nullptr, std::move(from)) {}
  inline SubprocessResult& operator=(const SubprocessResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubprocessResult& operator=(SubprocessResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::Omnira::DataSerialization::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>(::Omnira::DataSerialization::UnknownFieldSet::default_instance);
  }
  inline ::Omnira::DataSerialization::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>();
  }

  static const ::Omnira::DataSerialization::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::Omnira::DataSerialization::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::Omnira::DataSerialization::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubprocessResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubprocessResult* internal_default_instance() {
    return reinterpret_cast<const SubprocessResult*>(
        &_SubprocessResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SubprocessResult& a, SubprocessResult& b) { a.Swap(&b); }
  inline void Swap(SubprocessResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::Omnira::DataSerialization::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubprocessResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubprocessResult* New(::Omnira::DataSerialization::Arena* arena = nullptr) const final {
    return ::Omnira::DataSerialization::Message::DefaultConstruct<SubprocessResult>(arena);
  }
  using ::Omnira::DataSerialization::Message::CopyFrom;
  void CopyFrom(const SubprocessResult& from);
  using ::Omnira::DataSerialization::Message::MergeFrom;
  void MergeFrom(const SubprocessResult& from) { SubprocessResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::Omnira::DataSerialization::MessageLite& to_msg,
      const ::Omnira::DataSerialization::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::Omnira::DataSerialization::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::Omnira::DataSerialization::Arena* arena);
  void SharedDtor();
  void InternalSwap(SubprocessResult* other);
 private:
  friend class ::Omnira::DataSerialization::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "builra3.SubprocessResult"; }

 protected:
  explicit SubprocessResult(::Omnira::DataSerialization::Arena* arena);
  SubprocessResult(::Omnira::DataSerialization::Arena* arena, const SubprocessResult& from);
  SubprocessResult(::Omnira::DataSerialization::Arena* arena, SubprocessResult&& from) noexcept
      : SubprocessResult(arena) {
    *this = ::std::move(from);
  }
  const ::Omnira::DataSerialization::Message::ClassData* GetClassData() const final;

 public:
  ::Omnira::DataSerialization::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutputsFieldNumber = 1,
    kStdoutFieldNumber = 3,
    kExitCodeFieldNumber = 2,
  };
  // repeated .builra3.FileObject outputs = 1;
  int outputs_size() const;
  private:
  int _internal_outputs_size() const;

  public:
  void clear_outputs() ;
  ::builra3::FileObject* mutable_outputs(int index);
  ::Omnira::DataSerialization::RepeatedPtrField<::builra3::FileObject>* mutable_outputs();

  private:
  const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::FileObject>& _internal_outputs() const;
  ::Omnira::DataSerialization::RepeatedPtrField<::builra3::FileObject>* _internal_mutable_outputs();
  public:
  const ::builra3::FileObject& outputs(int index) const;
  ::builra3::FileObject* add_outputs();
  const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::FileObject>& outputs() const;
  // .builra3.CASID stdout = 3;
  bool has_stdout() const;
  void clear_stdout() ;
  const ::builra3::CASID& stdout() const;
  PROTOBUF_NODISCARD ::builra3::CASID* release_stdout();
  ::builra3::CASID* mutable_stdout();
  void set_allocated_stdout(::builra3::CASID* value);
  void unsafe_arena_set_allocated_stdout(::builra3::CASID* value);
  ::builra3::CASID* unsafe_arena_release_stdout();

  private:
  const ::builra3::CASID& _internal_stdout() const;
  ::builra3::CASID* _internal_mutable_stdout();

  public:
  // int32 exit_code = 2;
  void clear_exit_code() ;
  ::int32_t exit_code() const;
  void set_exit_code(::int32_t value);

  private:
  ::int32_t _internal_exit_code() const;
  void _internal_set_exit_code(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:builra3.SubprocessResult)
 private:
  class _Internal;
  friend class ::Omnira::DataSerialization::internal::TcParser;
  static const ::Omnira::DataSerialization::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SubprocessResult_default_instance_;

  friend class ::Omnira::DataSerialization::MessageLite;
  friend class ::Omnira::DataSerialization::Arena;
  template <typename T>
  friend class ::Omnira::DataSerialization::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::Omnira::DataSerialization::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena);
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena, const Impl_& from,
                          const SubprocessResult& from_msg);
    ::Omnira::DataSerialization::internal::HasBits<1> _has_bits_;
    mutable ::Omnira::DataSerialization::internal::CachedSize _cached_size_;
    ::Omnira::DataSerialization::RepeatedPtrField< ::builra3::FileObject > outputs_;
    ::builra3::CASID* stdout_;
    ::int32_t exit_code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_builra3_2fAction_2eproto;
};
// -------------------------------------------------------------------

class Subprocess final : public ::Omnira::DataSerialization::Message
/* @@protoc_insertion_point(class_definition:builra3.Subprocess) */ {
 public:
  inline Subprocess() : Subprocess(nullptr) {}
  ~Subprocess() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Subprocess(
      ::Omnira::DataSerialization::internal::ConstantInitialized);

  inline Subprocess(const Subprocess& from) : Subprocess(nullptr, from) {}
  inline Subprocess(Subprocess&& from) noexcept
      : Subprocess(nullptr, std::move(from)) {}
  inline Subprocess& operator=(const Subprocess& from) {
    CopyFrom(from);
    return *this;
  }
  inline Subprocess& operator=(Subprocess&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::Omnira::DataSerialization::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>(::Omnira::DataSerialization::UnknownFieldSet::default_instance);
  }
  inline ::Omnira::DataSerialization::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>();
  }

  static const ::Omnira::DataSerialization::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::Omnira::DataSerialization::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::Omnira::DataSerialization::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Subprocess& default_instance() {
    return *internal_default_instance();
  }
  static inline const Subprocess* internal_default_instance() {
    return reinterpret_cast<const Subprocess*>(
        &_Subprocess_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Subprocess& a, Subprocess& b) { a.Swap(&b); }
  inline void Swap(Subprocess* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::Omnira::DataSerialization::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Subprocess* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Subprocess* New(::Omnira::DataSerialization::Arena* arena = nullptr) const final {
    return ::Omnira::DataSerialization::Message::DefaultConstruct<Subprocess>(arena);
  }
  using ::Omnira::DataSerialization::Message::CopyFrom;
  void CopyFrom(const Subprocess& from);
  using ::Omnira::DataSerialization::Message::MergeFrom;
  void MergeFrom(const Subprocess& from) { Subprocess::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::Omnira::DataSerialization::MessageLite& to_msg,
      const ::Omnira::DataSerialization::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::Omnira::DataSerialization::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::Omnira::DataSerialization::Arena* arena);
  void SharedDtor();
  void InternalSwap(Subprocess* other);
 private:
  friend class ::Omnira::DataSerialization::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "builra3.Subprocess"; }

 protected:
  explicit Subprocess(::Omnira::DataSerialization::Arena* arena);
  Subprocess(::Omnira::DataSerialization::Arena* arena, const Subprocess& from);
  Subprocess(::Omnira::DataSerialization::Arena* arena, Subprocess&& from) noexcept
      : Subprocess(arena) {
    *this = ::std::move(from);
  }
  const ::Omnira::DataSerialization::Message::ClassData* GetClassData() const final;

 public:
  ::Omnira::DataSerialization::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using EnvironmentVariable = Subprocess_EnvironmentVariable;

  // accessors -------------------------------------------------------
  enum : int {
    kArgumentsFieldNumber = 1,
    kEnvironmentFieldNumber = 2,
    kInputsFieldNumber = 4,
    kOutputPathsFieldNumber = 5,
    kWorkingDirectoryFieldNumber = 3,
  };
  // repeated string arguments = 1;
  int arguments_size() const;
  private:
  int _internal_arguments_size() const;

  public:
  void clear_arguments() ;
  const std::string& arguments(int index) const;
  std::string* mutable_arguments(int index);
  void set_arguments(int index, const std::string& value);
  void set_arguments(int index, std::string&& value);
  void set_arguments(int index, const char* value);
  void set_arguments(int index, const char* value, std::size_t size);
  void set_arguments(int index, absl::string_view value);
  std::string* add_arguments();
  void add_arguments(const std::string& value);
  void add_arguments(std::string&& value);
  void add_arguments(const char* value);
  void add_arguments(const char* value, std::size_t size);
  void add_arguments(absl::string_view value);
  const ::Omnira::DataSerialization::RepeatedPtrField<std::string>& arguments() const;
  ::Omnira::DataSerialization::RepeatedPtrField<std::string>* mutable_arguments();

  private:
  const ::Omnira::DataSerialization::RepeatedPtrField<std::string>& _internal_arguments() const;
  ::Omnira::DataSerialization::RepeatedPtrField<std::string>* _internal_mutable_arguments();

  public:
  // repeated .builra3.Subprocess.EnvironmentVariable environment = 2;
  int environment_size() const;
  private:
  int _internal_environment_size() const;

  public:
  void clear_environment() ;
  ::builra3::Subprocess_EnvironmentVariable* mutable_environment(int index);
  ::Omnira::DataSerialization::RepeatedPtrField<::builra3::Subprocess_EnvironmentVariable>* mutable_environment();

  private:
  const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::Subprocess_EnvironmentVariable>& _internal_environment() const;
  ::Omnira::DataSerialization::RepeatedPtrField<::builra3::Subprocess_EnvironmentVariable>* _internal_mutable_environment();
  public:
  const ::builra3::Subprocess_EnvironmentVariable& environment(int index) const;
  ::builra3::Subprocess_EnvironmentVariable* add_environment();
  const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::Subprocess_EnvironmentVariable>& environment() const;
  // repeated .builra3.FileObject inputs = 4;
  int inputs_size() const;
  private:
  int _internal_inputs_size() const;

  public:
  void clear_inputs() ;
  ::builra3::FileObject* mutable_inputs(int index);
  ::Omnira::DataSerialization::RepeatedPtrField<::builra3::FileObject>* mutable_inputs();

  private:
  const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::FileObject>& _internal_inputs() const;
  ::Omnira::DataSerialization::RepeatedPtrField<::builra3::FileObject>* _internal_mutable_inputs();
  public:
  const ::builra3::FileObject& inputs(int index) const;
  ::builra3::FileObject* add_inputs();
  const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::FileObject>& inputs() const;
  // repeated string output_paths = 5;
  int output_paths_size() const;
  private:
  int _internal_output_paths_size() const;

  public:
  void clear_output_paths() ;
  const std::string& output_paths(int index) const;
  std::string* mutable_output_paths(int index);
  void set_output_paths(int index, const std::string& value);
  void set_output_paths(int index, std::string&& value);
  void set_output_paths(int index, const char* value);
  void set_output_paths(int index, const char* value, std::size_t size);
  void set_output_paths(int index, absl::string_view value);
  std::string* add_output_paths();
  void add_output_paths(const std::string& value);
  void add_output_paths(std::string&& value);
  void add_output_paths(const char* value);
  void add_output_paths(const char* value, std::size_t size);
  void add_output_paths(absl::string_view value);
  const ::Omnira::DataSerialization::RepeatedPtrField<std::string>& output_paths() const;
  ::Omnira::DataSerialization::RepeatedPtrField<std::string>* mutable_output_paths();

  private:
  const ::Omnira::DataSerialization::RepeatedPtrField<std::string>& _internal_output_paths() const;
  ::Omnira::DataSerialization::RepeatedPtrField<std::string>* _internal_mutable_output_paths();

  public:
  // string working_directory = 3;
  void clear_working_directory() ;
  const std::string& working_directory() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_working_directory(Arg_&& arg, Args_... args);
  std::string* mutable_working_directory();
  PROTOBUF_NODISCARD std::string* release_working_directory();
  void set_allocated_working_directory(std::string* value);

  private:
  const std::string& _internal_working_directory() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_working_directory(
      const std::string& value);
  std::string* _internal_mutable_working_directory();

  public:
  // @@protoc_insertion_point(class_scope:builra3.Subprocess)
 private:
  class _Internal;
  friend class ::Omnira::DataSerialization::internal::TcParser;
  static const ::Omnira::DataSerialization::internal::TcParseTable<
      3, 5, 2,
      66, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Subprocess_default_instance_;

  friend class ::Omnira::DataSerialization::MessageLite;
  friend class ::Omnira::DataSerialization::Arena;
  template <typename T>
  friend class ::Omnira::DataSerialization::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::Omnira::DataSerialization::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena);
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena, const Impl_& from,
                          const Subprocess& from_msg);
    ::Omnira::DataSerialization::RepeatedPtrField<std::string> arguments_;
    ::Omnira::DataSerialization::RepeatedPtrField< ::builra3::Subprocess_EnvironmentVariable > environment_;
    ::Omnira::DataSerialization::RepeatedPtrField< ::builra3::FileObject > inputs_;
    ::Omnira::DataSerialization::RepeatedPtrField<std::string> output_paths_;
    ::Omnira::DataSerialization::internal::ArenaStringPtr working_directory_;
    mutable ::Omnira::DataSerialization::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_builra3_2fAction_2eproto;
};
// -------------------------------------------------------------------

class ActionResult final : public ::Omnira::DataSerialization::Message
/* @@protoc_insertion_point(class_definition:builra3.ActionResult) */ {
 public:
  inline ActionResult() : ActionResult(nullptr) {}
  ~ActionResult() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ActionResult(
      ::Omnira::DataSerialization::internal::ConstantInitialized);

  inline ActionResult(const ActionResult& from) : ActionResult(nullptr, from) {}
  inline ActionResult(ActionResult&& from) noexcept
      : ActionResult(nullptr, std::move(from)) {}
  inline ActionResult& operator=(const ActionResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActionResult& operator=(ActionResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::Omnira::DataSerialization::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>(::Omnira::DataSerialization::UnknownFieldSet::default_instance);
  }
  inline ::Omnira::DataSerialization::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>();
  }

  static const ::Omnira::DataSerialization::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::Omnira::DataSerialization::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::Omnira::DataSerialization::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActionResult& default_instance() {
    return *internal_default_instance();
  }
  enum ActionResultValueCase {
    kCasObject = 1,
    kSubprocess = 2,
    ACTIONRESULTVALUE_NOT_SET = 0,
  };
  static inline const ActionResult* internal_default_instance() {
    return reinterpret_cast<const ActionResult*>(
        &_ActionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ActionResult& a, ActionResult& b) { a.Swap(&b); }
  inline void Swap(ActionResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::Omnira::DataSerialization::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActionResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActionResult* New(::Omnira::DataSerialization::Arena* arena = nullptr) const final {
    return ::Omnira::DataSerialization::Message::DefaultConstruct<ActionResult>(arena);
  }
  using ::Omnira::DataSerialization::Message::CopyFrom;
  void CopyFrom(const ActionResult& from);
  using ::Omnira::DataSerialization::Message::MergeFrom;
  void MergeFrom(const ActionResult& from) { ActionResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::Omnira::DataSerialization::MessageLite& to_msg,
      const ::Omnira::DataSerialization::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::Omnira::DataSerialization::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::Omnira::DataSerialization::Arena* arena);
  void SharedDtor();
  void InternalSwap(ActionResult* other);
 private:
  friend class ::Omnira::DataSerialization::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "builra3.ActionResult"; }

 protected:
  explicit ActionResult(::Omnira::DataSerialization::Arena* arena);
  ActionResult(::Omnira::DataSerialization::Arena* arena, const ActionResult& from);
  ActionResult(::Omnira::DataSerialization::Arena* arena, ActionResult&& from) noexcept
      : ActionResult(arena) {
    *this = ::std::move(from);
  }
  const ::Omnira::DataSerialization::Message::ClassData* GetClassData() const final;

 public:
  ::Omnira::DataSerialization::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 3,
    kCasObjectFieldNumber = 1,
    kSubprocessFieldNumber = 2,
  };
  // .builra3.ActionExecutionMetadata metadata = 3;
  bool has_metadata() const;
  void clear_metadata() ;
  const ::builra3::ActionExecutionMetadata& metadata() const;
  PROTOBUF_NODISCARD ::builra3::ActionExecutionMetadata* release_metadata();
  ::builra3::ActionExecutionMetadata* mutable_metadata();
  void set_allocated_metadata(::builra3::ActionExecutionMetadata* value);
  void unsafe_arena_set_allocated_metadata(::builra3::ActionExecutionMetadata* value);
  ::builra3::ActionExecutionMetadata* unsafe_arena_release_metadata();

  private:
  const ::builra3::ActionExecutionMetadata& _internal_metadata() const;
  ::builra3::ActionExecutionMetadata* _internal_mutable_metadata();

  public:
  // .builra3.CASID cas_object = 1;
  bool has_cas_object() const;
  private:
  bool _internal_has_cas_object() const;

  public:
  void clear_cas_object() ;
  const ::builra3::CASID& cas_object() const;
  PROTOBUF_NODISCARD ::builra3::CASID* release_cas_object();
  ::builra3::CASID* mutable_cas_object();
  void set_allocated_cas_object(::builra3::CASID* value);
  void unsafe_arena_set_allocated_cas_object(::builra3::CASID* value);
  ::builra3::CASID* unsafe_arena_release_cas_object();

  private:
  const ::builra3::CASID& _internal_cas_object() const;
  ::builra3::CASID* _internal_mutable_cas_object();

  public:
  // .builra3.SubprocessResult subprocess = 2;
  bool has_subprocess() const;
  private:
  bool _internal_has_subprocess() const;

  public:
  void clear_subprocess() ;
  const ::builra3::SubprocessResult& subprocess() const;
  PROTOBUF_NODISCARD ::builra3::SubprocessResult* release_subprocess();
  ::builra3::SubprocessResult* mutable_subprocess();
  void set_allocated_subprocess(::builra3::SubprocessResult* value);
  void unsafe_arena_set_allocated_subprocess(::builra3::SubprocessResult* value);
  ::builra3::SubprocessResult* unsafe_arena_release_subprocess();

  private:
  const ::builra3::SubprocessResult& _internal_subprocess() const;
  ::builra3::SubprocessResult* _internal_mutable_subprocess();

  public:
  void clear_ActionResultValue();
  ActionResultValueCase ActionResultValue_case() const;
  // @@protoc_insertion_point(class_scope:builra3.ActionResult)
 private:
  class _Internal;
  void set_has_cas_object();
  void set_has_subprocess();
  inline bool has_ActionResultValue() const;
  inline void clear_has_ActionResultValue();
  friend class ::Omnira::DataSerialization::internal::TcParser;
  static const ::Omnira::DataSerialization::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ActionResult_default_instance_;

  friend class ::Omnira::DataSerialization::MessageLite;
  friend class ::Omnira::DataSerialization::Arena;
  template <typename T>
  friend class ::Omnira::DataSerialization::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::Omnira::DataSerialization::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena);
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena, const Impl_& from,
                          const ActionResult& from_msg);
    ::Omnira::DataSerialization::internal::HasBits<1> _has_bits_;
    mutable ::Omnira::DataSerialization::internal::CachedSize _cached_size_;
    ::builra3::ActionExecutionMetadata* metadata_;
    union ActionResultValueUnion {
      constexpr ActionResultValueUnion() : _constinit_{} {}
      ::Omnira::DataSerialization::internal::ConstantInitialized _constinit_;
      ::builra3::CASID* cas_object_;
      ::builra3::SubprocessResult* subprocess_;
    } ActionResultValue_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_builra3_2fAction_2eproto;
};
// -------------------------------------------------------------------

class Action final : public ::Omnira::DataSerialization::Message
/* @@protoc_insertion_point(class_definition:builra3.Action) */ {
 public:
  inline Action() : Action(nullptr) {}
  ~Action() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Action(
      ::Omnira::DataSerialization::internal::ConstantInitialized);

  inline Action(const Action& from) : Action(nullptr, from) {}
  inline Action(Action&& from) noexcept
      : Action(nullptr, std::move(from)) {}
  inline Action& operator=(const Action& from) {
    CopyFrom(from);
    return *this;
  }
  inline Action& operator=(Action&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::Omnira::DataSerialization::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>(::Omnira::DataSerialization::UnknownFieldSet::default_instance);
  }
  inline ::Omnira::DataSerialization::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::Omnira::DataSerialization::UnknownFieldSet>();
  }

  static const ::Omnira::DataSerialization::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::Omnira::DataSerialization::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::Omnira::DataSerialization::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Action& default_instance() {
    return *internal_default_instance();
  }
  enum OperationCase {
    kCasObject = 1,
    kSubprocess = 2,
    OPERATION_NOT_SET = 0,
  };
  static inline const Action* internal_default_instance() {
    return reinterpret_cast<const Action*>(
        &_Action_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Action& a, Action& b) { a.Swap(&b); }
  inline void Swap(Action* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::Omnira::DataSerialization::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Action* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Action* New(::Omnira::DataSerialization::Arena* arena = nullptr) const final {
    return ::Omnira::DataSerialization::Message::DefaultConstruct<Action>(arena);
  }
  using ::Omnira::DataSerialization::Message::CopyFrom;
  void CopyFrom(const Action& from);
  using ::Omnira::DataSerialization::Message::MergeFrom;
  void MergeFrom(const Action& from) { Action::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::Omnira::DataSerialization::MessageLite& to_msg,
      const ::Omnira::DataSerialization::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::Omnira::DataSerialization::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::Omnira::DataSerialization::Arena* arena);
  void SharedDtor();
  void InternalSwap(Action* other);
 private:
  friend class ::Omnira::DataSerialization::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "builra3.Action"; }

 protected:
  explicit Action(::Omnira::DataSerialization::Arena* arena);
  Action(::Omnira::DataSerialization::Arena* arena, const Action& from);
  Action(::Omnira::DataSerialization::Arena* arena, Action&& from) noexcept
      : Action(arena) {
    *this = ::std::move(from);
  }
  const ::Omnira::DataSerialization::Message::ClassData* GetClassData() const final;

 public:
  ::Omnira::DataSerialization::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFunctionFieldNumber = 3,
    kPlatformFieldNumber = 5,
    kIsVolatileFieldNumber = 4,
    kCasObjectFieldNumber = 1,
    kSubprocessFieldNumber = 2,
  };
  // .builra3.Label function = 3;
  bool has_function() const;
  void clear_function() ;
  const ::builra3::Label& function() const;
  PROTOBUF_NODISCARD ::builra3::Label* release_function();
  ::builra3::Label* mutable_function();
  void set_allocated_function(::builra3::Label* value);
  void unsafe_arena_set_allocated_function(::builra3::Label* value);
  ::builra3::Label* unsafe_arena_release_function();

  private:
  const ::builra3::Label& _internal_function() const;
  ::builra3::Label* _internal_mutable_function();

  public:
  // .builra3.Platform platform = 5;
  bool has_platform() const;
  void clear_platform() ;
  const ::builra3::Platform& platform() const;
  PROTOBUF_NODISCARD ::builra3::Platform* release_platform();
  ::builra3::Platform* mutable_platform();
  void set_allocated_platform(::builra3::Platform* value);
  void unsafe_arena_set_allocated_platform(::builra3::Platform* value);
  ::builra3::Platform* unsafe_arena_release_platform();

  private:
  const ::builra3::Platform& _internal_platform() const;
  ::builra3::Platform* _internal_mutable_platform();

  public:
  // bool is_volatile = 4;
  void clear_is_volatile() ;
  bool is_volatile() const;
  void set_is_volatile(bool value);

  private:
  bool _internal_is_volatile() const;
  void _internal_set_is_volatile(bool value);

  public:
  // .builra3.CASID cas_object = 1;
  bool has_cas_object() const;
  private:
  bool _internal_has_cas_object() const;

  public:
  void clear_cas_object() ;
  const ::builra3::CASID& cas_object() const;
  PROTOBUF_NODISCARD ::builra3::CASID* release_cas_object();
  ::builra3::CASID* mutable_cas_object();
  void set_allocated_cas_object(::builra3::CASID* value);
  void unsafe_arena_set_allocated_cas_object(::builra3::CASID* value);
  ::builra3::CASID* unsafe_arena_release_cas_object();

  private:
  const ::builra3::CASID& _internal_cas_object() const;
  ::builra3::CASID* _internal_mutable_cas_object();

  public:
  // .builra3.Subprocess subprocess = 2;
  bool has_subprocess() const;
  private:
  bool _internal_has_subprocess() const;

  public:
  void clear_subprocess() ;
  const ::builra3::Subprocess& subprocess() const;
  PROTOBUF_NODISCARD ::builra3::Subprocess* release_subprocess();
  ::builra3::Subprocess* mutable_subprocess();
  void set_allocated_subprocess(::builra3::Subprocess* value);
  void unsafe_arena_set_allocated_subprocess(::builra3::Subprocess* value);
  ::builra3::Subprocess* unsafe_arena_release_subprocess();

  private:
  const ::builra3::Subprocess& _internal_subprocess() const;
  ::builra3::Subprocess* _internal_mutable_subprocess();

  public:
  void clear_Operation();
  OperationCase Operation_case() const;
  // @@protoc_insertion_point(class_scope:builra3.Action)
 private:
  class _Internal;
  void set_has_cas_object();
  void set_has_subprocess();
  inline bool has_Operation() const;
  inline void clear_has_Operation();
  friend class ::Omnira::DataSerialization::internal::TcParser;
  static const ::Omnira::DataSerialization::internal::TcParseTable<
      2, 5, 4,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Action_default_instance_;

  friend class ::Omnira::DataSerialization::MessageLite;
  friend class ::Omnira::DataSerialization::Arena;
  template <typename T>
  friend class ::Omnira::DataSerialization::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::Omnira::DataSerialization::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena);
    inline explicit Impl_(::Omnira::DataSerialization::internal::InternalVisibility visibility,
                          ::Omnira::DataSerialization::Arena* arena, const Impl_& from,
                          const Action& from_msg);
    ::Omnira::DataSerialization::internal::HasBits<1> _has_bits_;
    mutable ::Omnira::DataSerialization::internal::CachedSize _cached_size_;
    ::builra3::Label* function_;
    ::builra3::Platform* platform_;
    bool is_volatile_;
    union OperationUnion {
      constexpr OperationUnion() : _constinit_{} {}
      ::Omnira::DataSerialization::internal::ConstantInitialized _constinit_;
      ::builra3::CASID* cas_object_;
      ::builra3::Subprocess* subprocess_;
    } Operation_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_builra3_2fAction_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// FileObject

// string path = 1;
inline void FileObject::clear_path() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
}
inline const std::string& FileObject::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.FileObject.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FileObject::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:builra3.FileObject.path)
}
inline std::string* FileObject::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:builra3.FileObject.path)
  return _s;
}
inline const std::string& FileObject::_internal_path() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void FileObject::_internal_set_path(const std::string& value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(value, GetArena());
}
inline std::string* FileObject::_internal_mutable_path() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* FileObject::release_path() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.FileObject.path)
  return _impl_.path_.Release();
}
inline void FileObject::set_allocated_path(std::string* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.path_.IsDefault()) {
          _impl_.path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:builra3.FileObject.path)
}

// .builra3.FileType type = 2;
inline void FileObject::clear_type() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::builra3::FileType FileObject::type() const {
  // @@protoc_insertion_point(field_get:builra3.FileObject.type)
  return _internal_type();
}
inline void FileObject::set_type(::builra3::FileType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:builra3.FileObject.type)
}
inline ::builra3::FileType FileObject::_internal_type() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return static_cast<::builra3::FileType>(_impl_.type_);
}
inline void FileObject::_internal_set_type(::builra3::FileType value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .builra3.CASID object = 3;
inline bool FileObject::has_object() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.object_ != nullptr);
  return value;
}
inline const ::builra3::CASID& FileObject::_internal_object() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  const ::builra3::CASID* p = _impl_.object_;
  return p != nullptr ? *p : reinterpret_cast<const ::builra3::CASID&>(::builra3::_CASID_default_instance_);
}
inline const ::builra3::CASID& FileObject::object() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.FileObject.object)
  return _internal_object();
}
inline void FileObject::unsafe_arena_set_allocated_object(::builra3::CASID* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.object_);
  }
  _impl_.object_ = reinterpret_cast<::builra3::CASID*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.FileObject.object)
}
inline ::builra3::CASID* FileObject::release_object() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::builra3::CASID* released = _impl_.object_;
  _impl_.object_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(released);
  released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::builra3::CASID* FileObject::unsafe_arena_release_object() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.FileObject.object)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::builra3::CASID* temp = _impl_.object_;
  _impl_.object_ = nullptr;
  return temp;
}
inline ::builra3::CASID* FileObject::_internal_mutable_object() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.object_ == nullptr) {
    auto* p = ::Omnira::DataSerialization::Message::DefaultConstruct<::builra3::CASID>(GetArena());
    _impl_.object_ = reinterpret_cast<::builra3::CASID*>(p);
  }
  return _impl_.object_;
}
inline ::builra3::CASID* FileObject::mutable_object() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::builra3::CASID* _msg = _internal_mutable_object();
  // @@protoc_insertion_point(field_mutable:builra3.FileObject.object)
  return _msg;
}
inline void FileObject::set_allocated_object(::builra3::CASID* value) {
  ::Omnira::DataSerialization::Arena* message_arena = GetArena();
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.object_);
  }

  if (value != nullptr) {
    ::Omnira::DataSerialization::Arena* submessage_arena = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::Omnira::DataSerialization::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.object_ = reinterpret_cast<::builra3::CASID*>(value);
  // @@protoc_insertion_point(field_set_allocated:builra3.FileObject.object)
}

// -------------------------------------------------------------------

// Subprocess_EnvironmentVariable

// string name = 1;
inline void Subprocess_EnvironmentVariable::clear_name() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Subprocess_EnvironmentVariable::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.Subprocess.EnvironmentVariable.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Subprocess_EnvironmentVariable::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:builra3.Subprocess.EnvironmentVariable.name)
}
inline std::string* Subprocess_EnvironmentVariable::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:builra3.Subprocess.EnvironmentVariable.name)
  return _s;
}
inline const std::string& Subprocess_EnvironmentVariable::_internal_name() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Subprocess_EnvironmentVariable::_internal_set_name(const std::string& value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Subprocess_EnvironmentVariable::_internal_mutable_name() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Subprocess_EnvironmentVariable::release_name() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.Subprocess.EnvironmentVariable.name)
  return _impl_.name_.Release();
}
inline void Subprocess_EnvironmentVariable::set_allocated_name(std::string* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:builra3.Subprocess.EnvironmentVariable.name)
}

// string value = 2;
inline void Subprocess_EnvironmentVariable::clear_value() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& Subprocess_EnvironmentVariable::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.Subprocess.EnvironmentVariable.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Subprocess_EnvironmentVariable::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:builra3.Subprocess.EnvironmentVariable.value)
}
inline std::string* Subprocess_EnvironmentVariable::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:builra3.Subprocess.EnvironmentVariable.value)
  return _s;
}
inline const std::string& Subprocess_EnvironmentVariable::_internal_value() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void Subprocess_EnvironmentVariable::_internal_set_value(const std::string& value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* Subprocess_EnvironmentVariable::_internal_mutable_value() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* Subprocess_EnvironmentVariable::release_value() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.Subprocess.EnvironmentVariable.value)
  return _impl_.value_.Release();
}
inline void Subprocess_EnvironmentVariable::set_allocated_value(std::string* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:builra3.Subprocess.EnvironmentVariable.value)
}

// -------------------------------------------------------------------

// Subprocess

// repeated string arguments = 1;
inline int Subprocess::_internal_arguments_size() const {
  return _internal_arguments().size();
}
inline int Subprocess::arguments_size() const {
  return _internal_arguments_size();
}
inline void Subprocess::clear_arguments() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.arguments_.Clear();
}
inline std::string* Subprocess::add_arguments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_arguments()->Add();
  // @@protoc_insertion_point(field_add_mutable:builra3.Subprocess.arguments)
  return _s;
}
inline const std::string& Subprocess::arguments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.Subprocess.arguments)
  return _internal_arguments().Get(index);
}
inline std::string* Subprocess::mutable_arguments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:builra3.Subprocess.arguments)
  return _internal_mutable_arguments()->Mutable(index);
}
inline void Subprocess::set_arguments(int index, const std::string& value) {
  _internal_mutable_arguments()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:builra3.Subprocess.arguments)
}
inline void Subprocess::set_arguments(int index, std::string&& value) {
  _internal_mutable_arguments()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:builra3.Subprocess.arguments)
}
inline void Subprocess::set_arguments(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_arguments()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:builra3.Subprocess.arguments)
}
inline void Subprocess::set_arguments(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_arguments()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:builra3.Subprocess.arguments)
}
inline void Subprocess::set_arguments(int index, absl::string_view value) {
  _internal_mutable_arguments()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:builra3.Subprocess.arguments)
}
inline void Subprocess::add_arguments(const std::string& value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _internal_mutable_arguments()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:builra3.Subprocess.arguments)
}
inline void Subprocess::add_arguments(std::string&& value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _internal_mutable_arguments()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:builra3.Subprocess.arguments)
}
inline void Subprocess::add_arguments(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _internal_mutable_arguments()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:builra3.Subprocess.arguments)
}
inline void Subprocess::add_arguments(const char* value, std::size_t size) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _internal_mutable_arguments()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:builra3.Subprocess.arguments)
}
inline void Subprocess::add_arguments(absl::string_view value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _internal_mutable_arguments()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:builra3.Subprocess.arguments)
}
inline const ::Omnira::DataSerialization::RepeatedPtrField<std::string>&
Subprocess::arguments() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:builra3.Subprocess.arguments)
  return _internal_arguments();
}
inline ::Omnira::DataSerialization::RepeatedPtrField<std::string>*
Subprocess::mutable_arguments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:builra3.Subprocess.arguments)
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  return _internal_mutable_arguments();
}
inline const ::Omnira::DataSerialization::RepeatedPtrField<std::string>&
Subprocess::_internal_arguments() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.arguments_;
}
inline ::Omnira::DataSerialization::RepeatedPtrField<std::string>*
Subprocess::_internal_mutable_arguments() {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return &_impl_.arguments_;
}

// repeated .builra3.Subprocess.EnvironmentVariable environment = 2;
inline int Subprocess::_internal_environment_size() const {
  return _internal_environment().size();
}
inline int Subprocess::environment_size() const {
  return _internal_environment_size();
}
inline void Subprocess::clear_environment() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.environment_.Clear();
}
inline ::builra3::Subprocess_EnvironmentVariable* Subprocess::mutable_environment(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:builra3.Subprocess.environment)
  return _internal_mutable_environment()->Mutable(index);
}
inline ::Omnira::DataSerialization::RepeatedPtrField<::builra3::Subprocess_EnvironmentVariable>* Subprocess::mutable_environment()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:builra3.Subprocess.environment)
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  return _internal_mutable_environment();
}
inline const ::builra3::Subprocess_EnvironmentVariable& Subprocess::environment(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.Subprocess.environment)
  return _internal_environment().Get(index);
}
inline ::builra3::Subprocess_EnvironmentVariable* Subprocess::add_environment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  ::builra3::Subprocess_EnvironmentVariable* _add = _internal_mutable_environment()->Add();
  // @@protoc_insertion_point(field_add:builra3.Subprocess.environment)
  return _add;
}
inline const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::Subprocess_EnvironmentVariable>& Subprocess::environment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:builra3.Subprocess.environment)
  return _internal_environment();
}
inline const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::Subprocess_EnvironmentVariable>&
Subprocess::_internal_environment() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.environment_;
}
inline ::Omnira::DataSerialization::RepeatedPtrField<::builra3::Subprocess_EnvironmentVariable>*
Subprocess::_internal_mutable_environment() {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return &_impl_.environment_;
}

// string working_directory = 3;
inline void Subprocess::clear_working_directory() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.working_directory_.ClearToEmpty();
}
inline const std::string& Subprocess::working_directory() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.Subprocess.working_directory)
  return _internal_working_directory();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Subprocess::set_working_directory(Arg_&& arg,
                                                     Args_... args) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.working_directory_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:builra3.Subprocess.working_directory)
}
inline std::string* Subprocess::mutable_working_directory() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_working_directory();
  // @@protoc_insertion_point(field_mutable:builra3.Subprocess.working_directory)
  return _s;
}
inline const std::string& Subprocess::_internal_working_directory() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.working_directory_.Get();
}
inline void Subprocess::_internal_set_working_directory(const std::string& value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.working_directory_.Set(value, GetArena());
}
inline std::string* Subprocess::_internal_mutable_working_directory() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  return _impl_.working_directory_.Mutable( GetArena());
}
inline std::string* Subprocess::release_working_directory() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.Subprocess.working_directory)
  return _impl_.working_directory_.Release();
}
inline void Subprocess::set_allocated_working_directory(std::string* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.working_directory_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.working_directory_.IsDefault()) {
          _impl_.working_directory_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:builra3.Subprocess.working_directory)
}

// repeated .builra3.FileObject inputs = 4;
inline int Subprocess::_internal_inputs_size() const {
  return _internal_inputs().size();
}
inline int Subprocess::inputs_size() const {
  return _internal_inputs_size();
}
inline void Subprocess::clear_inputs() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.inputs_.Clear();
}
inline ::builra3::FileObject* Subprocess::mutable_inputs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:builra3.Subprocess.inputs)
  return _internal_mutable_inputs()->Mutable(index);
}
inline ::Omnira::DataSerialization::RepeatedPtrField<::builra3::FileObject>* Subprocess::mutable_inputs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:builra3.Subprocess.inputs)
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  return _internal_mutable_inputs();
}
inline const ::builra3::FileObject& Subprocess::inputs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.Subprocess.inputs)
  return _internal_inputs().Get(index);
}
inline ::builra3::FileObject* Subprocess::add_inputs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  ::builra3::FileObject* _add = _internal_mutable_inputs()->Add();
  // @@protoc_insertion_point(field_add:builra3.Subprocess.inputs)
  return _add;
}
inline const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::FileObject>& Subprocess::inputs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:builra3.Subprocess.inputs)
  return _internal_inputs();
}
inline const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::FileObject>&
Subprocess::_internal_inputs() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.inputs_;
}
inline ::Omnira::DataSerialization::RepeatedPtrField<::builra3::FileObject>*
Subprocess::_internal_mutable_inputs() {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return &_impl_.inputs_;
}

// repeated string output_paths = 5;
inline int Subprocess::_internal_output_paths_size() const {
  return _internal_output_paths().size();
}
inline int Subprocess::output_paths_size() const {
  return _internal_output_paths_size();
}
inline void Subprocess::clear_output_paths() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.output_paths_.Clear();
}
inline std::string* Subprocess::add_output_paths()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_output_paths()->Add();
  // @@protoc_insertion_point(field_add_mutable:builra3.Subprocess.output_paths)
  return _s;
}
inline const std::string& Subprocess::output_paths(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.Subprocess.output_paths)
  return _internal_output_paths().Get(index);
}
inline std::string* Subprocess::mutable_output_paths(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:builra3.Subprocess.output_paths)
  return _internal_mutable_output_paths()->Mutable(index);
}
inline void Subprocess::set_output_paths(int index, const std::string& value) {
  _internal_mutable_output_paths()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:builra3.Subprocess.output_paths)
}
inline void Subprocess::set_output_paths(int index, std::string&& value) {
  _internal_mutable_output_paths()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:builra3.Subprocess.output_paths)
}
inline void Subprocess::set_output_paths(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_output_paths()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:builra3.Subprocess.output_paths)
}
inline void Subprocess::set_output_paths(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_output_paths()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:builra3.Subprocess.output_paths)
}
inline void Subprocess::set_output_paths(int index, absl::string_view value) {
  _internal_mutable_output_paths()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:builra3.Subprocess.output_paths)
}
inline void Subprocess::add_output_paths(const std::string& value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _internal_mutable_output_paths()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:builra3.Subprocess.output_paths)
}
inline void Subprocess::add_output_paths(std::string&& value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _internal_mutable_output_paths()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:builra3.Subprocess.output_paths)
}
inline void Subprocess::add_output_paths(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _internal_mutable_output_paths()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:builra3.Subprocess.output_paths)
}
inline void Subprocess::add_output_paths(const char* value, std::size_t size) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _internal_mutable_output_paths()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:builra3.Subprocess.output_paths)
}
inline void Subprocess::add_output_paths(absl::string_view value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _internal_mutable_output_paths()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:builra3.Subprocess.output_paths)
}
inline const ::Omnira::DataSerialization::RepeatedPtrField<std::string>&
Subprocess::output_paths() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:builra3.Subprocess.output_paths)
  return _internal_output_paths();
}
inline ::Omnira::DataSerialization::RepeatedPtrField<std::string>*
Subprocess::mutable_output_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:builra3.Subprocess.output_paths)
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  return _internal_mutable_output_paths();
}
inline const ::Omnira::DataSerialization::RepeatedPtrField<std::string>&
Subprocess::_internal_output_paths() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.output_paths_;
}
inline ::Omnira::DataSerialization::RepeatedPtrField<std::string>*
Subprocess::_internal_mutable_output_paths() {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return &_impl_.output_paths_;
}

// -------------------------------------------------------------------

// SubprocessResult

// repeated .builra3.FileObject outputs = 1;
inline int SubprocessResult::_internal_outputs_size() const {
  return _internal_outputs().size();
}
inline int SubprocessResult::outputs_size() const {
  return _internal_outputs_size();
}
inline void SubprocessResult::clear_outputs() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.outputs_.Clear();
}
inline ::builra3::FileObject* SubprocessResult::mutable_outputs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:builra3.SubprocessResult.outputs)
  return _internal_mutable_outputs()->Mutable(index);
}
inline ::Omnira::DataSerialization::RepeatedPtrField<::builra3::FileObject>* SubprocessResult::mutable_outputs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:builra3.SubprocessResult.outputs)
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  return _internal_mutable_outputs();
}
inline const ::builra3::FileObject& SubprocessResult::outputs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.SubprocessResult.outputs)
  return _internal_outputs().Get(index);
}
inline ::builra3::FileObject* SubprocessResult::add_outputs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  ::builra3::FileObject* _add = _internal_mutable_outputs()->Add();
  // @@protoc_insertion_point(field_add:builra3.SubprocessResult.outputs)
  return _add;
}
inline const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::FileObject>& SubprocessResult::outputs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:builra3.SubprocessResult.outputs)
  return _internal_outputs();
}
inline const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::FileObject>&
SubprocessResult::_internal_outputs() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.outputs_;
}
inline ::Omnira::DataSerialization::RepeatedPtrField<::builra3::FileObject>*
SubprocessResult::_internal_mutable_outputs() {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return &_impl_.outputs_;
}

// int32 exit_code = 2;
inline void SubprocessResult::clear_exit_code() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.exit_code_ = 0;
}
inline ::int32_t SubprocessResult::exit_code() const {
  // @@protoc_insertion_point(field_get:builra3.SubprocessResult.exit_code)
  return _internal_exit_code();
}
inline void SubprocessResult::set_exit_code(::int32_t value) {
  _internal_set_exit_code(value);
  // @@protoc_insertion_point(field_set:builra3.SubprocessResult.exit_code)
}
inline ::int32_t SubprocessResult::_internal_exit_code() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.exit_code_;
}
inline void SubprocessResult::_internal_set_exit_code(::int32_t value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.exit_code_ = value;
}

// .builra3.CASID stdout = 3;
inline bool SubprocessResult::has_stdout() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.stdout_ != nullptr);
  return value;
}
inline const ::builra3::CASID& SubprocessResult::_internal_stdout() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  const ::builra3::CASID* p = _impl_.stdout_;
  return p != nullptr ? *p : reinterpret_cast<const ::builra3::CASID&>(::builra3::_CASID_default_instance_);
}
inline const ::builra3::CASID& SubprocessResult::stdout() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.SubprocessResult.stdout)
  return _internal_stdout();
}
inline void SubprocessResult::unsafe_arena_set_allocated_stdout(::builra3::CASID* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.stdout_);
  }
  _impl_.stdout_ = reinterpret_cast<::builra3::CASID*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.SubprocessResult.stdout)
}
inline ::builra3::CASID* SubprocessResult::release_stdout() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::builra3::CASID* released = _impl_.stdout_;
  _impl_.stdout_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(released);
  released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::builra3::CASID* SubprocessResult::unsafe_arena_release_stdout() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.SubprocessResult.stdout)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::builra3::CASID* temp = _impl_.stdout_;
  _impl_.stdout_ = nullptr;
  return temp;
}
inline ::builra3::CASID* SubprocessResult::_internal_mutable_stdout() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.stdout_ == nullptr) {
    auto* p = ::Omnira::DataSerialization::Message::DefaultConstruct<::builra3::CASID>(GetArena());
    _impl_.stdout_ = reinterpret_cast<::builra3::CASID*>(p);
  }
  return _impl_.stdout_;
}
inline ::builra3::CASID* SubprocessResult::mutable_stdout() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::builra3::CASID* _msg = _internal_mutable_stdout();
  // @@protoc_insertion_point(field_mutable:builra3.SubprocessResult.stdout)
  return _msg;
}
inline void SubprocessResult::set_allocated_stdout(::builra3::CASID* value) {
  ::Omnira::DataSerialization::Arena* message_arena = GetArena();
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.stdout_);
  }

  if (value != nullptr) {
    ::Omnira::DataSerialization::Arena* submessage_arena = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::Omnira::DataSerialization::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.stdout_ = reinterpret_cast<::builra3::CASID*>(value);
  // @@protoc_insertion_point(field_set_allocated:builra3.SubprocessResult.stdout)
}

// -------------------------------------------------------------------

// Action

// .builra3.CASID cas_object = 1;
inline bool Action::has_cas_object() const {
  return Operation_case() == kCasObject;
}
inline bool Action::_internal_has_cas_object() const {
  return Operation_case() == kCasObject;
}
inline void Action::set_has_cas_object() {
  _impl_._oneof_case_[0] = kCasObject;
}
inline ::builra3::CASID* Action::release_cas_object() {
  // @@protoc_insertion_point(field_release:builra3.Action.cas_object)
  if (Operation_case() == kCasObject) {
    clear_has_Operation();
    auto* temp = _impl_.Operation_.cas_object_;
    if (GetArena() != nullptr) {
      temp = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(temp);
    }
    _impl_.Operation_.cas_object_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::builra3::CASID& Action::_internal_cas_object() const {
  return Operation_case() == kCasObject ? *_impl_.Operation_.cas_object_ : reinterpret_cast<::builra3::CASID&>(::builra3::_CASID_default_instance_);
}
inline const ::builra3::CASID& Action::cas_object() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.Action.cas_object)
  return _internal_cas_object();
}
inline ::builra3::CASID* Action::unsafe_arena_release_cas_object() {
  // @@protoc_insertion_point(field_unsafe_arena_release:builra3.Action.cas_object)
  if (Operation_case() == kCasObject) {
    clear_has_Operation();
    auto* temp = _impl_.Operation_.cas_object_;
    _impl_.Operation_.cas_object_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Action::unsafe_arena_set_allocated_cas_object(::builra3::CASID* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_Operation();
  if (value) {
    set_has_cas_object();
    _impl_.Operation_.cas_object_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.Action.cas_object)
}
inline ::builra3::CASID* Action::_internal_mutable_cas_object() {
  if (Operation_case() != kCasObject) {
    clear_Operation();
    set_has_cas_object();
    _impl_.Operation_.cas_object_ =
        ::Omnira::DataSerialization::Message::DefaultConstruct<::builra3::CASID>(GetArena());
  }
  return _impl_.Operation_.cas_object_;
}
inline ::builra3::CASID* Action::mutable_cas_object() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::builra3::CASID* _msg = _internal_mutable_cas_object();
  // @@protoc_insertion_point(field_mutable:builra3.Action.cas_object)
  return _msg;
}

// .builra3.Subprocess subprocess = 2;
inline bool Action::has_subprocess() const {
  return Operation_case() == kSubprocess;
}
inline bool Action::_internal_has_subprocess() const {
  return Operation_case() == kSubprocess;
}
inline void Action::set_has_subprocess() {
  _impl_._oneof_case_[0] = kSubprocess;
}
inline void Action::clear_subprocess() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (Operation_case() == kSubprocess) {
    if (GetArena() == nullptr) {
      delete _impl_.Operation_.subprocess_;
    } else if (::Omnira::DataSerialization::internal::DebugHardenClearOneofMessageOnArena()) {
      ::Omnira::DataSerialization::internal::MaybePoisonAfterClear(_impl_.Operation_.subprocess_);
    }
    clear_has_Operation();
  }
}
inline ::builra3::Subprocess* Action::release_subprocess() {
  // @@protoc_insertion_point(field_release:builra3.Action.subprocess)
  if (Operation_case() == kSubprocess) {
    clear_has_Operation();
    auto* temp = _impl_.Operation_.subprocess_;
    if (GetArena() != nullptr) {
      temp = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(temp);
    }
    _impl_.Operation_.subprocess_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::builra3::Subprocess& Action::_internal_subprocess() const {
  return Operation_case() == kSubprocess ? *_impl_.Operation_.subprocess_ : reinterpret_cast<::builra3::Subprocess&>(::builra3::_Subprocess_default_instance_);
}
inline const ::builra3::Subprocess& Action::subprocess() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.Action.subprocess)
  return _internal_subprocess();
}
inline ::builra3::Subprocess* Action::unsafe_arena_release_subprocess() {
  // @@protoc_insertion_point(field_unsafe_arena_release:builra3.Action.subprocess)
  if (Operation_case() == kSubprocess) {
    clear_has_Operation();
    auto* temp = _impl_.Operation_.subprocess_;
    _impl_.Operation_.subprocess_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Action::unsafe_arena_set_allocated_subprocess(::builra3::Subprocess* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_Operation();
  if (value) {
    set_has_subprocess();
    _impl_.Operation_.subprocess_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.Action.subprocess)
}
inline ::builra3::Subprocess* Action::_internal_mutable_subprocess() {
  if (Operation_case() != kSubprocess) {
    clear_Operation();
    set_has_subprocess();
    _impl_.Operation_.subprocess_ =
        ::Omnira::DataSerialization::Message::DefaultConstruct<::builra3::Subprocess>(GetArena());
  }
  return _impl_.Operation_.subprocess_;
}
inline ::builra3::Subprocess* Action::mutable_subprocess() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::builra3::Subprocess* _msg = _internal_mutable_subprocess();
  // @@protoc_insertion_point(field_mutable:builra3.Action.subprocess)
  return _msg;
}

// .builra3.Label function = 3;
inline bool Action::has_function() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.function_ != nullptr);
  return value;
}
inline const ::builra3::Label& Action::_internal_function() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  const ::builra3::Label* p = _impl_.function_;
  return p != nullptr ? *p : reinterpret_cast<const ::builra3::Label&>(::builra3::_Label_default_instance_);
}
inline const ::builra3::Label& Action::function() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.Action.function)
  return _internal_function();
}
inline void Action::unsafe_arena_set_allocated_function(::builra3::Label* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.function_);
  }
  _impl_.function_ = reinterpret_cast<::builra3::Label*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.Action.function)
}
inline ::builra3::Label* Action::release_function() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::builra3::Label* released = _impl_.function_;
  _impl_.function_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(released);
  released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::builra3::Label* Action::unsafe_arena_release_function() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.Action.function)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::builra3::Label* temp = _impl_.function_;
  _impl_.function_ = nullptr;
  return temp;
}
inline ::builra3::Label* Action::_internal_mutable_function() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.function_ == nullptr) {
    auto* p = ::Omnira::DataSerialization::Message::DefaultConstruct<::builra3::Label>(GetArena());
    _impl_.function_ = reinterpret_cast<::builra3::Label*>(p);
  }
  return _impl_.function_;
}
inline ::builra3::Label* Action::mutable_function() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::builra3::Label* _msg = _internal_mutable_function();
  // @@protoc_insertion_point(field_mutable:builra3.Action.function)
  return _msg;
}
inline void Action::set_allocated_function(::builra3::Label* value) {
  ::Omnira::DataSerialization::Arena* message_arena = GetArena();
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.function_);
  }

  if (value != nullptr) {
    ::Omnira::DataSerialization::Arena* submessage_arena = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::Omnira::DataSerialization::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.function_ = reinterpret_cast<::builra3::Label*>(value);
  // @@protoc_insertion_point(field_set_allocated:builra3.Action.function)
}

// bool is_volatile = 4;
inline void Action::clear_is_volatile() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.is_volatile_ = false;
}
inline bool Action::is_volatile() const {
  // @@protoc_insertion_point(field_get:builra3.Action.is_volatile)
  return _internal_is_volatile();
}
inline void Action::set_is_volatile(bool value) {
  _internal_set_is_volatile(value);
  // @@protoc_insertion_point(field_set:builra3.Action.is_volatile)
}
inline bool Action::_internal_is_volatile() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.is_volatile_;
}
inline void Action::_internal_set_is_volatile(bool value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.is_volatile_ = value;
}

// .builra3.Platform platform = 5;
inline bool Action::has_platform() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.platform_ != nullptr);
  return value;
}
inline void Action::clear_platform() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.platform_ != nullptr) _impl_.platform_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::builra3::Platform& Action::_internal_platform() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  const ::builra3::Platform* p = _impl_.platform_;
  return p != nullptr ? *p : reinterpret_cast<const ::builra3::Platform&>(::builra3::_Platform_default_instance_);
}
inline const ::builra3::Platform& Action::platform() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.Action.platform)
  return _internal_platform();
}
inline void Action::unsafe_arena_set_allocated_platform(::builra3::Platform* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.platform_);
  }
  _impl_.platform_ = reinterpret_cast<::builra3::Platform*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.Action.platform)
}
inline ::builra3::Platform* Action::release_platform() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::builra3::Platform* released = _impl_.platform_;
  _impl_.platform_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(released);
  released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::builra3::Platform* Action::unsafe_arena_release_platform() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.Action.platform)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::builra3::Platform* temp = _impl_.platform_;
  _impl_.platform_ = nullptr;
  return temp;
}
inline ::builra3::Platform* Action::_internal_mutable_platform() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.platform_ == nullptr) {
    auto* p = ::Omnira::DataSerialization::Message::DefaultConstruct<::builra3::Platform>(GetArena());
    _impl_.platform_ = reinterpret_cast<::builra3::Platform*>(p);
  }
  return _impl_.platform_;
}
inline ::builra3::Platform* Action::mutable_platform() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::builra3::Platform* _msg = _internal_mutable_platform();
  // @@protoc_insertion_point(field_mutable:builra3.Action.platform)
  return _msg;
}
inline void Action::set_allocated_platform(::builra3::Platform* value) {
  ::Omnira::DataSerialization::Arena* message_arena = GetArena();
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.platform_);
  }

  if (value != nullptr) {
    ::Omnira::DataSerialization::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::Omnira::DataSerialization::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.platform_ = reinterpret_cast<::builra3::Platform*>(value);
  // @@protoc_insertion_point(field_set_allocated:builra3.Action.platform)
}

inline bool Action::has_Operation() const {
  return Operation_case() != OPERATION_NOT_SET;
}
inline void Action::clear_has_Operation() {
  _impl_._oneof_case_[0] = OPERATION_NOT_SET;
}
inline Action::OperationCase Action::Operation_case() const {
  return Action::OperationCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Platform_Property

// string name = 1;
inline void Platform_Property::clear_name() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Platform_Property::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.Platform.Property.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Platform_Property::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:builra3.Platform.Property.name)
}
inline std::string* Platform_Property::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:builra3.Platform.Property.name)
  return _s;
}
inline const std::string& Platform_Property::_internal_name() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Platform_Property::_internal_set_name(const std::string& value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Platform_Property::_internal_mutable_name() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Platform_Property::release_name() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.Platform.Property.name)
  return _impl_.name_.Release();
}
inline void Platform_Property::set_allocated_name(std::string* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:builra3.Platform.Property.name)
}

// string value = 2;
inline void Platform_Property::clear_value() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& Platform_Property::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.Platform.Property.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Platform_Property::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:builra3.Platform.Property.value)
}
inline std::string* Platform_Property::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:builra3.Platform.Property.value)
  return _s;
}
inline const std::string& Platform_Property::_internal_value() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void Platform_Property::_internal_set_value(const std::string& value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* Platform_Property::_internal_mutable_value() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* Platform_Property::release_value() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.Platform.Property.value)
  return _impl_.value_.Release();
}
inline void Platform_Property::set_allocated_value(std::string* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:builra3.Platform.Property.value)
}

// -------------------------------------------------------------------

// Platform

// repeated .builra3.Platform.Property properties = 1;
inline int Platform::_internal_properties_size() const {
  return _internal_properties().size();
}
inline int Platform::properties_size() const {
  return _internal_properties_size();
}
inline void Platform::clear_properties() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.properties_.Clear();
}
inline ::builra3::Platform_Property* Platform::mutable_properties(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:builra3.Platform.properties)
  return _internal_mutable_properties()->Mutable(index);
}
inline ::Omnira::DataSerialization::RepeatedPtrField<::builra3::Platform_Property>* Platform::mutable_properties()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:builra3.Platform.properties)
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  return _internal_mutable_properties();
}
inline const ::builra3::Platform_Property& Platform::properties(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.Platform.properties)
  return _internal_properties().Get(index);
}
inline ::builra3::Platform_Property* Platform::add_properties() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  ::builra3::Platform_Property* _add = _internal_mutable_properties()->Add();
  // @@protoc_insertion_point(field_add:builra3.Platform.properties)
  return _add;
}
inline const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::Platform_Property>& Platform::properties() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:builra3.Platform.properties)
  return _internal_properties();
}
inline const ::Omnira::DataSerialization::RepeatedPtrField<::builra3::Platform_Property>&
Platform::_internal_properties() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.properties_;
}
inline ::Omnira::DataSerialization::RepeatedPtrField<::builra3::Platform_Property>*
Platform::_internal_mutable_properties() {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return &_impl_.properties_;
}

// -------------------------------------------------------------------

// ActionResult

// .builra3.CASID cas_object = 1;
inline bool ActionResult::has_cas_object() const {
  return ActionResultValue_case() == kCasObject;
}
inline bool ActionResult::_internal_has_cas_object() const {
  return ActionResultValue_case() == kCasObject;
}
inline void ActionResult::set_has_cas_object() {
  _impl_._oneof_case_[0] = kCasObject;
}
inline ::builra3::CASID* ActionResult::release_cas_object() {
  // @@protoc_insertion_point(field_release:builra3.ActionResult.cas_object)
  if (ActionResultValue_case() == kCasObject) {
    clear_has_ActionResultValue();
    auto* temp = _impl_.ActionResultValue_.cas_object_;
    if (GetArena() != nullptr) {
      temp = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(temp);
    }
    _impl_.ActionResultValue_.cas_object_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::builra3::CASID& ActionResult::_internal_cas_object() const {
  return ActionResultValue_case() == kCasObject ? *_impl_.ActionResultValue_.cas_object_ : reinterpret_cast<::builra3::CASID&>(::builra3::_CASID_default_instance_);
}
inline const ::builra3::CASID& ActionResult::cas_object() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.ActionResult.cas_object)
  return _internal_cas_object();
}
inline ::builra3::CASID* ActionResult::unsafe_arena_release_cas_object() {
  // @@protoc_insertion_point(field_unsafe_arena_release:builra3.ActionResult.cas_object)
  if (ActionResultValue_case() == kCasObject) {
    clear_has_ActionResultValue();
    auto* temp = _impl_.ActionResultValue_.cas_object_;
    _impl_.ActionResultValue_.cas_object_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ActionResult::unsafe_arena_set_allocated_cas_object(::builra3::CASID* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_ActionResultValue();
  if (value) {
    set_has_cas_object();
    _impl_.ActionResultValue_.cas_object_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.ActionResult.cas_object)
}
inline ::builra3::CASID* ActionResult::_internal_mutable_cas_object() {
  if (ActionResultValue_case() != kCasObject) {
    clear_ActionResultValue();
    set_has_cas_object();
    _impl_.ActionResultValue_.cas_object_ =
        ::Omnira::DataSerialization::Message::DefaultConstruct<::builra3::CASID>(GetArena());
  }
  return _impl_.ActionResultValue_.cas_object_;
}
inline ::builra3::CASID* ActionResult::mutable_cas_object() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::builra3::CASID* _msg = _internal_mutable_cas_object();
  // @@protoc_insertion_point(field_mutable:builra3.ActionResult.cas_object)
  return _msg;
}

// .builra3.SubprocessResult subprocess = 2;
inline bool ActionResult::has_subprocess() const {
  return ActionResultValue_case() == kSubprocess;
}
inline bool ActionResult::_internal_has_subprocess() const {
  return ActionResultValue_case() == kSubprocess;
}
inline void ActionResult::set_has_subprocess() {
  _impl_._oneof_case_[0] = kSubprocess;
}
inline void ActionResult::clear_subprocess() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (ActionResultValue_case() == kSubprocess) {
    if (GetArena() == nullptr) {
      delete _impl_.ActionResultValue_.subprocess_;
    } else if (::Omnira::DataSerialization::internal::DebugHardenClearOneofMessageOnArena()) {
      ::Omnira::DataSerialization::internal::MaybePoisonAfterClear(_impl_.ActionResultValue_.subprocess_);
    }
    clear_has_ActionResultValue();
  }
}
inline ::builra3::SubprocessResult* ActionResult::release_subprocess() {
  // @@protoc_insertion_point(field_release:builra3.ActionResult.subprocess)
  if (ActionResultValue_case() == kSubprocess) {
    clear_has_ActionResultValue();
    auto* temp = _impl_.ActionResultValue_.subprocess_;
    if (GetArena() != nullptr) {
      temp = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(temp);
    }
    _impl_.ActionResultValue_.subprocess_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::builra3::SubprocessResult& ActionResult::_internal_subprocess() const {
  return ActionResultValue_case() == kSubprocess ? *_impl_.ActionResultValue_.subprocess_ : reinterpret_cast<::builra3::SubprocessResult&>(::builra3::_SubprocessResult_default_instance_);
}
inline const ::builra3::SubprocessResult& ActionResult::subprocess() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.ActionResult.subprocess)
  return _internal_subprocess();
}
inline ::builra3::SubprocessResult* ActionResult::unsafe_arena_release_subprocess() {
  // @@protoc_insertion_point(field_unsafe_arena_release:builra3.ActionResult.subprocess)
  if (ActionResultValue_case() == kSubprocess) {
    clear_has_ActionResultValue();
    auto* temp = _impl_.ActionResultValue_.subprocess_;
    _impl_.ActionResultValue_.subprocess_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ActionResult::unsafe_arena_set_allocated_subprocess(::builra3::SubprocessResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_ActionResultValue();
  if (value) {
    set_has_subprocess();
    _impl_.ActionResultValue_.subprocess_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.ActionResult.subprocess)
}
inline ::builra3::SubprocessResult* ActionResult::_internal_mutable_subprocess() {
  if (ActionResultValue_case() != kSubprocess) {
    clear_ActionResultValue();
    set_has_subprocess();
    _impl_.ActionResultValue_.subprocess_ =
        ::Omnira::DataSerialization::Message::DefaultConstruct<::builra3::SubprocessResult>(GetArena());
  }
  return _impl_.ActionResultValue_.subprocess_;
}
inline ::builra3::SubprocessResult* ActionResult::mutable_subprocess() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::builra3::SubprocessResult* _msg = _internal_mutable_subprocess();
  // @@protoc_insertion_point(field_mutable:builra3.ActionResult.subprocess)
  return _msg;
}

// .builra3.ActionExecutionMetadata metadata = 3;
inline bool ActionResult::has_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metadata_ != nullptr);
  return value;
}
inline void ActionResult::clear_metadata() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::builra3::ActionExecutionMetadata& ActionResult::_internal_metadata() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  const ::builra3::ActionExecutionMetadata* p = _impl_.metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::builra3::ActionExecutionMetadata&>(::builra3::_ActionExecutionMetadata_default_instance_);
}
inline const ::builra3::ActionExecutionMetadata& ActionResult::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.ActionResult.metadata)
  return _internal_metadata();
}
inline void ActionResult::unsafe_arena_set_allocated_metadata(::builra3::ActionExecutionMetadata* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.metadata_);
  }
  _impl_.metadata_ = reinterpret_cast<::builra3::ActionExecutionMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.ActionResult.metadata)
}
inline ::builra3::ActionExecutionMetadata* ActionResult::release_metadata() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::builra3::ActionExecutionMetadata* released = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(released);
  released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::builra3::ActionExecutionMetadata* ActionResult::unsafe_arena_release_metadata() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.ActionResult.metadata)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::builra3::ActionExecutionMetadata* temp = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  return temp;
}
inline ::builra3::ActionExecutionMetadata* ActionResult::_internal_mutable_metadata() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ == nullptr) {
    auto* p = ::Omnira::DataSerialization::Message::DefaultConstruct<::builra3::ActionExecutionMetadata>(GetArena());
    _impl_.metadata_ = reinterpret_cast<::builra3::ActionExecutionMetadata*>(p);
  }
  return _impl_.metadata_;
}
inline ::builra3::ActionExecutionMetadata* ActionResult::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::builra3::ActionExecutionMetadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:builra3.ActionResult.metadata)
  return _msg;
}
inline void ActionResult::set_allocated_metadata(::builra3::ActionExecutionMetadata* value) {
  ::Omnira::DataSerialization::Arena* message_arena = GetArena();
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.metadata_);
  }

  if (value != nullptr) {
    ::Omnira::DataSerialization::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::Omnira::DataSerialization::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.metadata_ = reinterpret_cast<::builra3::ActionExecutionMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:builra3.ActionResult.metadata)
}

inline bool ActionResult::has_ActionResultValue() const {
  return ActionResultValue_case() != ACTIONRESULTVALUE_NOT_SET;
}
inline void ActionResult::clear_has_ActionResultValue() {
  _impl_._oneof_case_[0] = ACTIONRESULTVALUE_NOT_SET;
}
inline ActionResult::ActionResultValueCase ActionResult::ActionResultValue_case() const {
  return ActionResult::ActionResultValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// ActionExecutionMetadata

// string worker = 1;
inline void ActionExecutionMetadata::clear_worker() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.worker_.ClearToEmpty();
}
inline const std::string& ActionExecutionMetadata::worker() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.ActionExecutionMetadata.worker)
  return _internal_worker();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ActionExecutionMetadata::set_worker(Arg_&& arg,
                                                     Args_... args) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.worker_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:builra3.ActionExecutionMetadata.worker)
}
inline std::string* ActionExecutionMetadata::mutable_worker() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_worker();
  // @@protoc_insertion_point(field_mutable:builra3.ActionExecutionMetadata.worker)
  return _s;
}
inline const std::string& ActionExecutionMetadata::_internal_worker() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.worker_.Get();
}
inline void ActionExecutionMetadata::_internal_set_worker(const std::string& value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.worker_.Set(value, GetArena());
}
inline std::string* ActionExecutionMetadata::_internal_mutable_worker() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  return _impl_.worker_.Mutable( GetArena());
}
inline std::string* ActionExecutionMetadata::release_worker() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.ActionExecutionMetadata.worker)
  return _impl_.worker_.Release();
}
inline void ActionExecutionMetadata::set_allocated_worker(std::string* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.worker_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.worker_.IsDefault()) {
          _impl_.worker_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:builra3.ActionExecutionMetadata.worker)
}

// .google.protobuf.Timestamp queued = 2;
inline bool ActionExecutionMetadata::has_queued() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.queued_ != nullptr);
  return value;
}
inline const ::Omnira::DataSerialization::Timestamp& ActionExecutionMetadata::_internal_queued() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  const ::Omnira::DataSerialization::Timestamp* p = _impl_.queued_;
  return p != nullptr ? *p : reinterpret_cast<const ::Omnira::DataSerialization::Timestamp&>(::Omnira::DataSerialization::_Timestamp_default_instance_);
}
inline const ::Omnira::DataSerialization::Timestamp& ActionExecutionMetadata::queued() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.ActionExecutionMetadata.queued)
  return _internal_queued();
}
inline void ActionExecutionMetadata::unsafe_arena_set_allocated_queued(::Omnira::DataSerialization::Timestamp* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.queued_);
  }
  _impl_.queued_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.ActionExecutionMetadata.queued)
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::release_queued() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Omnira::DataSerialization::Timestamp* released = _impl_.queued_;
  _impl_.queued_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(released);
  released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::unsafe_arena_release_queued() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.ActionExecutionMetadata.queued)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Omnira::DataSerialization::Timestamp* temp = _impl_.queued_;
  _impl_.queued_ = nullptr;
  return temp;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::_internal_mutable_queued() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.queued_ == nullptr) {
    auto* p = ::Omnira::DataSerialization::Message::DefaultConstruct<::Omnira::DataSerialization::Timestamp>(GetArena());
    _impl_.queued_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(p);
  }
  return _impl_.queued_;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::mutable_queued() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Omnira::DataSerialization::Timestamp* _msg = _internal_mutable_queued();
  // @@protoc_insertion_point(field_mutable:builra3.ActionExecutionMetadata.queued)
  return _msg;
}
inline void ActionExecutionMetadata::set_allocated_queued(::Omnira::DataSerialization::Timestamp* value) {
  ::Omnira::DataSerialization::Arena* message_arena = GetArena();
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.queued_);
  }

  if (value != nullptr) {
    ::Omnira::DataSerialization::Arena* submessage_arena = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::Omnira::DataSerialization::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.queued_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:builra3.ActionExecutionMetadata.queued)
}

// .google.protobuf.Timestamp dispatched = 3;
inline bool ActionExecutionMetadata::has_dispatched() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dispatched_ != nullptr);
  return value;
}
inline const ::Omnira::DataSerialization::Timestamp& ActionExecutionMetadata::_internal_dispatched() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  const ::Omnira::DataSerialization::Timestamp* p = _impl_.dispatched_;
  return p != nullptr ? *p : reinterpret_cast<const ::Omnira::DataSerialization::Timestamp&>(::Omnira::DataSerialization::_Timestamp_default_instance_);
}
inline const ::Omnira::DataSerialization::Timestamp& ActionExecutionMetadata::dispatched() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.ActionExecutionMetadata.dispatched)
  return _internal_dispatched();
}
inline void ActionExecutionMetadata::unsafe_arena_set_allocated_dispatched(::Omnira::DataSerialization::Timestamp* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.dispatched_);
  }
  _impl_.dispatched_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.ActionExecutionMetadata.dispatched)
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::release_dispatched() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Omnira::DataSerialization::Timestamp* released = _impl_.dispatched_;
  _impl_.dispatched_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(released);
  released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::unsafe_arena_release_dispatched() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.ActionExecutionMetadata.dispatched)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Omnira::DataSerialization::Timestamp* temp = _impl_.dispatched_;
  _impl_.dispatched_ = nullptr;
  return temp;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::_internal_mutable_dispatched() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.dispatched_ == nullptr) {
    auto* p = ::Omnira::DataSerialization::Message::DefaultConstruct<::Omnira::DataSerialization::Timestamp>(GetArena());
    _impl_.dispatched_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(p);
  }
  return _impl_.dispatched_;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::mutable_dispatched() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::Omnira::DataSerialization::Timestamp* _msg = _internal_mutable_dispatched();
  // @@protoc_insertion_point(field_mutable:builra3.ActionExecutionMetadata.dispatched)
  return _msg;
}
inline void ActionExecutionMetadata::set_allocated_dispatched(::Omnira::DataSerialization::Timestamp* value) {
  ::Omnira::DataSerialization::Arena* message_arena = GetArena();
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.dispatched_);
  }

  if (value != nullptr) {
    ::Omnira::DataSerialization::Arena* submessage_arena = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::Omnira::DataSerialization::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.dispatched_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:builra3.ActionExecutionMetadata.dispatched)
}

// .google.protobuf.Timestamp worker_start = 4;
inline bool ActionExecutionMetadata::has_worker_start() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.worker_start_ != nullptr);
  return value;
}
inline const ::Omnira::DataSerialization::Timestamp& ActionExecutionMetadata::_internal_worker_start() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  const ::Omnira::DataSerialization::Timestamp* p = _impl_.worker_start_;
  return p != nullptr ? *p : reinterpret_cast<const ::Omnira::DataSerialization::Timestamp&>(::Omnira::DataSerialization::_Timestamp_default_instance_);
}
inline const ::Omnira::DataSerialization::Timestamp& ActionExecutionMetadata::worker_start() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.ActionExecutionMetadata.worker_start)
  return _internal_worker_start();
}
inline void ActionExecutionMetadata::unsafe_arena_set_allocated_worker_start(::Omnira::DataSerialization::Timestamp* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.worker_start_);
  }
  _impl_.worker_start_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.ActionExecutionMetadata.worker_start)
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::release_worker_start() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Omnira::DataSerialization::Timestamp* released = _impl_.worker_start_;
  _impl_.worker_start_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(released);
  released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::unsafe_arena_release_worker_start() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.ActionExecutionMetadata.worker_start)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Omnira::DataSerialization::Timestamp* temp = _impl_.worker_start_;
  _impl_.worker_start_ = nullptr;
  return temp;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::_internal_mutable_worker_start() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.worker_start_ == nullptr) {
    auto* p = ::Omnira::DataSerialization::Message::DefaultConstruct<::Omnira::DataSerialization::Timestamp>(GetArena());
    _impl_.worker_start_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(p);
  }
  return _impl_.worker_start_;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::mutable_worker_start() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::Omnira::DataSerialization::Timestamp* _msg = _internal_mutable_worker_start();
  // @@protoc_insertion_point(field_mutable:builra3.ActionExecutionMetadata.worker_start)
  return _msg;
}
inline void ActionExecutionMetadata::set_allocated_worker_start(::Omnira::DataSerialization::Timestamp* value) {
  ::Omnira::DataSerialization::Arena* message_arena = GetArena();
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.worker_start_);
  }

  if (value != nullptr) {
    ::Omnira::DataSerialization::Arena* submessage_arena = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::Omnira::DataSerialization::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.worker_start_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:builra3.ActionExecutionMetadata.worker_start)
}

// .google.protobuf.Timestamp worker_completed = 5;
inline bool ActionExecutionMetadata::has_worker_completed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.worker_completed_ != nullptr);
  return value;
}
inline const ::Omnira::DataSerialization::Timestamp& ActionExecutionMetadata::_internal_worker_completed() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  const ::Omnira::DataSerialization::Timestamp* p = _impl_.worker_completed_;
  return p != nullptr ? *p : reinterpret_cast<const ::Omnira::DataSerialization::Timestamp&>(::Omnira::DataSerialization::_Timestamp_default_instance_);
}
inline const ::Omnira::DataSerialization::Timestamp& ActionExecutionMetadata::worker_completed() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.ActionExecutionMetadata.worker_completed)
  return _internal_worker_completed();
}
inline void ActionExecutionMetadata::unsafe_arena_set_allocated_worker_completed(::Omnira::DataSerialization::Timestamp* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.worker_completed_);
  }
  _impl_.worker_completed_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.ActionExecutionMetadata.worker_completed)
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::release_worker_completed() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::Omnira::DataSerialization::Timestamp* released = _impl_.worker_completed_;
  _impl_.worker_completed_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(released);
  released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::unsafe_arena_release_worker_completed() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.ActionExecutionMetadata.worker_completed)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::Omnira::DataSerialization::Timestamp* temp = _impl_.worker_completed_;
  _impl_.worker_completed_ = nullptr;
  return temp;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::_internal_mutable_worker_completed() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.worker_completed_ == nullptr) {
    auto* p = ::Omnira::DataSerialization::Message::DefaultConstruct<::Omnira::DataSerialization::Timestamp>(GetArena());
    _impl_.worker_completed_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(p);
  }
  return _impl_.worker_completed_;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::mutable_worker_completed() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::Omnira::DataSerialization::Timestamp* _msg = _internal_mutable_worker_completed();
  // @@protoc_insertion_point(field_mutable:builra3.ActionExecutionMetadata.worker_completed)
  return _msg;
}
inline void ActionExecutionMetadata::set_allocated_worker_completed(::Omnira::DataSerialization::Timestamp* value) {
  ::Omnira::DataSerialization::Arena* message_arena = GetArena();
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.worker_completed_);
  }

  if (value != nullptr) {
    ::Omnira::DataSerialization::Arena* submessage_arena = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::Omnira::DataSerialization::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.worker_completed_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:builra3.ActionExecutionMetadata.worker_completed)
}

// .google.protobuf.Timestamp execution_start = 6;
inline bool ActionExecutionMetadata::has_execution_start() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.execution_start_ != nullptr);
  return value;
}
inline const ::Omnira::DataSerialization::Timestamp& ActionExecutionMetadata::_internal_execution_start() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  const ::Omnira::DataSerialization::Timestamp* p = _impl_.execution_start_;
  return p != nullptr ? *p : reinterpret_cast<const ::Omnira::DataSerialization::Timestamp&>(::Omnira::DataSerialization::_Timestamp_default_instance_);
}
inline const ::Omnira::DataSerialization::Timestamp& ActionExecutionMetadata::execution_start() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.ActionExecutionMetadata.execution_start)
  return _internal_execution_start();
}
inline void ActionExecutionMetadata::unsafe_arena_set_allocated_execution_start(::Omnira::DataSerialization::Timestamp* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.execution_start_);
  }
  _impl_.execution_start_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.ActionExecutionMetadata.execution_start)
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::release_execution_start() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::Omnira::DataSerialization::Timestamp* released = _impl_.execution_start_;
  _impl_.execution_start_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(released);
  released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::unsafe_arena_release_execution_start() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.ActionExecutionMetadata.execution_start)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::Omnira::DataSerialization::Timestamp* temp = _impl_.execution_start_;
  _impl_.execution_start_ = nullptr;
  return temp;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::_internal_mutable_execution_start() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.execution_start_ == nullptr) {
    auto* p = ::Omnira::DataSerialization::Message::DefaultConstruct<::Omnira::DataSerialization::Timestamp>(GetArena());
    _impl_.execution_start_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(p);
  }
  return _impl_.execution_start_;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::mutable_execution_start() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::Omnira::DataSerialization::Timestamp* _msg = _internal_mutable_execution_start();
  // @@protoc_insertion_point(field_mutable:builra3.ActionExecutionMetadata.execution_start)
  return _msg;
}
inline void ActionExecutionMetadata::set_allocated_execution_start(::Omnira::DataSerialization::Timestamp* value) {
  ::Omnira::DataSerialization::Arena* message_arena = GetArena();
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.execution_start_);
  }

  if (value != nullptr) {
    ::Omnira::DataSerialization::Arena* submessage_arena = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::Omnira::DataSerialization::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.execution_start_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:builra3.ActionExecutionMetadata.execution_start)
}

// .google.protobuf.Timestamp execution_completed = 7;
inline bool ActionExecutionMetadata::has_execution_completed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.execution_completed_ != nullptr);
  return value;
}
inline const ::Omnira::DataSerialization::Timestamp& ActionExecutionMetadata::_internal_execution_completed() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  const ::Omnira::DataSerialization::Timestamp* p = _impl_.execution_completed_;
  return p != nullptr ? *p : reinterpret_cast<const ::Omnira::DataSerialization::Timestamp&>(::Omnira::DataSerialization::_Timestamp_default_instance_);
}
inline const ::Omnira::DataSerialization::Timestamp& ActionExecutionMetadata::execution_completed() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.ActionExecutionMetadata.execution_completed)
  return _internal_execution_completed();
}
inline void ActionExecutionMetadata::unsafe_arena_set_allocated_execution_completed(::Omnira::DataSerialization::Timestamp* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.execution_completed_);
  }
  _impl_.execution_completed_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.ActionExecutionMetadata.execution_completed)
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::release_execution_completed() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::Omnira::DataSerialization::Timestamp* released = _impl_.execution_completed_;
  _impl_.execution_completed_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(released);
  released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::unsafe_arena_release_execution_completed() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.ActionExecutionMetadata.execution_completed)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::Omnira::DataSerialization::Timestamp* temp = _impl_.execution_completed_;
  _impl_.execution_completed_ = nullptr;
  return temp;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::_internal_mutable_execution_completed() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.execution_completed_ == nullptr) {
    auto* p = ::Omnira::DataSerialization::Message::DefaultConstruct<::Omnira::DataSerialization::Timestamp>(GetArena());
    _impl_.execution_completed_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(p);
  }
  return _impl_.execution_completed_;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::mutable_execution_completed() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::Omnira::DataSerialization::Timestamp* _msg = _internal_mutable_execution_completed();
  // @@protoc_insertion_point(field_mutable:builra3.ActionExecutionMetadata.execution_completed)
  return _msg;
}
inline void ActionExecutionMetadata::set_allocated_execution_completed(::Omnira::DataSerialization::Timestamp* value) {
  ::Omnira::DataSerialization::Arena* message_arena = GetArena();
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.execution_completed_);
  }

  if (value != nullptr) {
    ::Omnira::DataSerialization::Arena* submessage_arena = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::Omnira::DataSerialization::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.execution_completed_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:builra3.ActionExecutionMetadata.execution_completed)
}

// .google.protobuf.Duration execution_duration = 8;
inline bool ActionExecutionMetadata::has_execution_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.execution_duration_ != nullptr);
  return value;
}
inline const ::Omnira::DataSerialization::Duration& ActionExecutionMetadata::_internal_execution_duration() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  const ::Omnira::DataSerialization::Duration* p = _impl_.execution_duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::Omnira::DataSerialization::Duration&>(::Omnira::DataSerialization::_Duration_default_instance_);
}
inline const ::Omnira::DataSerialization::Duration& ActionExecutionMetadata::execution_duration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.ActionExecutionMetadata.execution_duration)
  return _internal_execution_duration();
}
inline void ActionExecutionMetadata::unsafe_arena_set_allocated_execution_duration(::Omnira::DataSerialization::Duration* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.execution_duration_);
  }
  _impl_.execution_duration_ = reinterpret_cast<::Omnira::DataSerialization::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.ActionExecutionMetadata.execution_duration)
}
inline ::Omnira::DataSerialization::Duration* ActionExecutionMetadata::release_execution_duration() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::Omnira::DataSerialization::Duration* released = _impl_.execution_duration_;
  _impl_.execution_duration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(released);
  released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Omnira::DataSerialization::Duration* ActionExecutionMetadata::unsafe_arena_release_execution_duration() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.ActionExecutionMetadata.execution_duration)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::Omnira::DataSerialization::Duration* temp = _impl_.execution_duration_;
  _impl_.execution_duration_ = nullptr;
  return temp;
}
inline ::Omnira::DataSerialization::Duration* ActionExecutionMetadata::_internal_mutable_execution_duration() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.execution_duration_ == nullptr) {
    auto* p = ::Omnira::DataSerialization::Message::DefaultConstruct<::Omnira::DataSerialization::Duration>(GetArena());
    _impl_.execution_duration_ = reinterpret_cast<::Omnira::DataSerialization::Duration*>(p);
  }
  return _impl_.execution_duration_;
}
inline ::Omnira::DataSerialization::Duration* ActionExecutionMetadata::mutable_execution_duration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::Omnira::DataSerialization::Duration* _msg = _internal_mutable_execution_duration();
  // @@protoc_insertion_point(field_mutable:builra3.ActionExecutionMetadata.execution_duration)
  return _msg;
}
inline void ActionExecutionMetadata::set_allocated_execution_duration(::Omnira::DataSerialization::Duration* value) {
  ::Omnira::DataSerialization::Arena* message_arena = GetArena();
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.execution_duration_);
  }

  if (value != nullptr) {
    ::Omnira::DataSerialization::Arena* submessage_arena = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::Omnira::DataSerialization::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.execution_duration_ = reinterpret_cast<::Omnira::DataSerialization::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:builra3.ActionExecutionMetadata.execution_duration)
}

// .google.protobuf.Duration execution_user_time = 9;
inline bool ActionExecutionMetadata::has_execution_user_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.execution_user_time_ != nullptr);
  return value;
}
inline const ::Omnira::DataSerialization::Duration& ActionExecutionMetadata::_internal_execution_user_time() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  const ::Omnira::DataSerialization::Duration* p = _impl_.execution_user_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::Omnira::DataSerialization::Duration&>(::Omnira::DataSerialization::_Duration_default_instance_);
}
inline const ::Omnira::DataSerialization::Duration& ActionExecutionMetadata::execution_user_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.ActionExecutionMetadata.execution_user_time)
  return _internal_execution_user_time();
}
inline void ActionExecutionMetadata::unsafe_arena_set_allocated_execution_user_time(::Omnira::DataSerialization::Duration* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.execution_user_time_);
  }
  _impl_.execution_user_time_ = reinterpret_cast<::Omnira::DataSerialization::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.ActionExecutionMetadata.execution_user_time)
}
inline ::Omnira::DataSerialization::Duration* ActionExecutionMetadata::release_execution_user_time() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::Omnira::DataSerialization::Duration* released = _impl_.execution_user_time_;
  _impl_.execution_user_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(released);
  released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Omnira::DataSerialization::Duration* ActionExecutionMetadata::unsafe_arena_release_execution_user_time() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.ActionExecutionMetadata.execution_user_time)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::Omnira::DataSerialization::Duration* temp = _impl_.execution_user_time_;
  _impl_.execution_user_time_ = nullptr;
  return temp;
}
inline ::Omnira::DataSerialization::Duration* ActionExecutionMetadata::_internal_mutable_execution_user_time() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.execution_user_time_ == nullptr) {
    auto* p = ::Omnira::DataSerialization::Message::DefaultConstruct<::Omnira::DataSerialization::Duration>(GetArena());
    _impl_.execution_user_time_ = reinterpret_cast<::Omnira::DataSerialization::Duration*>(p);
  }
  return _impl_.execution_user_time_;
}
inline ::Omnira::DataSerialization::Duration* ActionExecutionMetadata::mutable_execution_user_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::Omnira::DataSerialization::Duration* _msg = _internal_mutable_execution_user_time();
  // @@protoc_insertion_point(field_mutable:builra3.ActionExecutionMetadata.execution_user_time)
  return _msg;
}
inline void ActionExecutionMetadata::set_allocated_execution_user_time(::Omnira::DataSerialization::Duration* value) {
  ::Omnira::DataSerialization::Arena* message_arena = GetArena();
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.execution_user_time_);
  }

  if (value != nullptr) {
    ::Omnira::DataSerialization::Arena* submessage_arena = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::Omnira::DataSerialization::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.execution_user_time_ = reinterpret_cast<::Omnira::DataSerialization::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:builra3.ActionExecutionMetadata.execution_user_time)
}

// .google.protobuf.Duration execution_system_time = 10;
inline bool ActionExecutionMetadata::has_execution_system_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.execution_system_time_ != nullptr);
  return value;
}
inline const ::Omnira::DataSerialization::Duration& ActionExecutionMetadata::_internal_execution_system_time() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  const ::Omnira::DataSerialization::Duration* p = _impl_.execution_system_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::Omnira::DataSerialization::Duration&>(::Omnira::DataSerialization::_Duration_default_instance_);
}
inline const ::Omnira::DataSerialization::Duration& ActionExecutionMetadata::execution_system_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.ActionExecutionMetadata.execution_system_time)
  return _internal_execution_system_time();
}
inline void ActionExecutionMetadata::unsafe_arena_set_allocated_execution_system_time(::Omnira::DataSerialization::Duration* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.execution_system_time_);
  }
  _impl_.execution_system_time_ = reinterpret_cast<::Omnira::DataSerialization::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.ActionExecutionMetadata.execution_system_time)
}
inline ::Omnira::DataSerialization::Duration* ActionExecutionMetadata::release_execution_system_time() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::Omnira::DataSerialization::Duration* released = _impl_.execution_system_time_;
  _impl_.execution_system_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(released);
  released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Omnira::DataSerialization::Duration* ActionExecutionMetadata::unsafe_arena_release_execution_system_time() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.ActionExecutionMetadata.execution_system_time)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::Omnira::DataSerialization::Duration* temp = _impl_.execution_system_time_;
  _impl_.execution_system_time_ = nullptr;
  return temp;
}
inline ::Omnira::DataSerialization::Duration* ActionExecutionMetadata::_internal_mutable_execution_system_time() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.execution_system_time_ == nullptr) {
    auto* p = ::Omnira::DataSerialization::Message::DefaultConstruct<::Omnira::DataSerialization::Duration>(GetArena());
    _impl_.execution_system_time_ = reinterpret_cast<::Omnira::DataSerialization::Duration*>(p);
  }
  return _impl_.execution_system_time_;
}
inline ::Omnira::DataSerialization::Duration* ActionExecutionMetadata::mutable_execution_system_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::Omnira::DataSerialization::Duration* _msg = _internal_mutable_execution_system_time();
  // @@protoc_insertion_point(field_mutable:builra3.ActionExecutionMetadata.execution_system_time)
  return _msg;
}
inline void ActionExecutionMetadata::set_allocated_execution_system_time(::Omnira::DataSerialization::Duration* value) {
  ::Omnira::DataSerialization::Arena* message_arena = GetArena();
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.execution_system_time_);
  }

  if (value != nullptr) {
    ::Omnira::DataSerialization::Arena* submessage_arena = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::Omnira::DataSerialization::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.execution_system_time_ = reinterpret_cast<::Omnira::DataSerialization::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:builra3.ActionExecutionMetadata.execution_system_time)
}

// uint64 execution_max_rss = 11;
inline void ActionExecutionMetadata::clear_execution_max_rss() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.execution_max_rss_ = ::uint64_t{0u};
}
inline ::uint64_t ActionExecutionMetadata::execution_max_rss() const {
  // @@protoc_insertion_point(field_get:builra3.ActionExecutionMetadata.execution_max_rss)
  return _internal_execution_max_rss();
}
inline void ActionExecutionMetadata::set_execution_max_rss(::uint64_t value) {
  _internal_set_execution_max_rss(value);
  // @@protoc_insertion_point(field_set:builra3.ActionExecutionMetadata.execution_max_rss)
}
inline ::uint64_t ActionExecutionMetadata::_internal_execution_max_rss() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.execution_max_rss_;
}
inline void ActionExecutionMetadata::_internal_set_execution_max_rss(::uint64_t value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  _impl_.execution_max_rss_ = value;
}

// .google.protobuf.Timestamp output_upload_start = 12;
inline bool ActionExecutionMetadata::has_output_upload_start() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.output_upload_start_ != nullptr);
  return value;
}
inline const ::Omnira::DataSerialization::Timestamp& ActionExecutionMetadata::_internal_output_upload_start() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  const ::Omnira::DataSerialization::Timestamp* p = _impl_.output_upload_start_;
  return p != nullptr ? *p : reinterpret_cast<const ::Omnira::DataSerialization::Timestamp&>(::Omnira::DataSerialization::_Timestamp_default_instance_);
}
inline const ::Omnira::DataSerialization::Timestamp& ActionExecutionMetadata::output_upload_start() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.ActionExecutionMetadata.output_upload_start)
  return _internal_output_upload_start();
}
inline void ActionExecutionMetadata::unsafe_arena_set_allocated_output_upload_start(::Omnira::DataSerialization::Timestamp* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.output_upload_start_);
  }
  _impl_.output_upload_start_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.ActionExecutionMetadata.output_upload_start)
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::release_output_upload_start() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::Omnira::DataSerialization::Timestamp* released = _impl_.output_upload_start_;
  _impl_.output_upload_start_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(released);
  released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::unsafe_arena_release_output_upload_start() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.ActionExecutionMetadata.output_upload_start)

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::Omnira::DataSerialization::Timestamp* temp = _impl_.output_upload_start_;
  _impl_.output_upload_start_ = nullptr;
  return temp;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::_internal_mutable_output_upload_start() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.output_upload_start_ == nullptr) {
    auto* p = ::Omnira::DataSerialization::Message::DefaultConstruct<::Omnira::DataSerialization::Timestamp>(GetArena());
    _impl_.output_upload_start_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(p);
  }
  return _impl_.output_upload_start_;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::mutable_output_upload_start() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000200u;
  ::Omnira::DataSerialization::Timestamp* _msg = _internal_mutable_output_upload_start();
  // @@protoc_insertion_point(field_mutable:builra3.ActionExecutionMetadata.output_upload_start)
  return _msg;
}
inline void ActionExecutionMetadata::set_allocated_output_upload_start(::Omnira::DataSerialization::Timestamp* value) {
  ::Omnira::DataSerialization::Arena* message_arena = GetArena();
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.output_upload_start_);
  }

  if (value != nullptr) {
    ::Omnira::DataSerialization::Arena* submessage_arena = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::Omnira::DataSerialization::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }

  _impl_.output_upload_start_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:builra3.ActionExecutionMetadata.output_upload_start)
}

// .google.protobuf.Timestamp output_upload_completed = 13;
inline bool ActionExecutionMetadata::has_output_upload_completed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.output_upload_completed_ != nullptr);
  return value;
}
inline const ::Omnira::DataSerialization::Timestamp& ActionExecutionMetadata::_internal_output_upload_completed() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  const ::Omnira::DataSerialization::Timestamp* p = _impl_.output_upload_completed_;
  return p != nullptr ? *p : reinterpret_cast<const ::Omnira::DataSerialization::Timestamp&>(::Omnira::DataSerialization::_Timestamp_default_instance_);
}
inline const ::Omnira::DataSerialization::Timestamp& ActionExecutionMetadata::output_upload_completed() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.ActionExecutionMetadata.output_upload_completed)
  return _internal_output_upload_completed();
}
inline void ActionExecutionMetadata::unsafe_arena_set_allocated_output_upload_completed(::Omnira::DataSerialization::Timestamp* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.output_upload_completed_);
  }
  _impl_.output_upload_completed_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.ActionExecutionMetadata.output_upload_completed)
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::release_output_upload_completed() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::Omnira::DataSerialization::Timestamp* released = _impl_.output_upload_completed_;
  _impl_.output_upload_completed_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(released);
  released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::unsafe_arena_release_output_upload_completed() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.ActionExecutionMetadata.output_upload_completed)

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::Omnira::DataSerialization::Timestamp* temp = _impl_.output_upload_completed_;
  _impl_.output_upload_completed_ = nullptr;
  return temp;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::_internal_mutable_output_upload_completed() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.output_upload_completed_ == nullptr) {
    auto* p = ::Omnira::DataSerialization::Message::DefaultConstruct<::Omnira::DataSerialization::Timestamp>(GetArena());
    _impl_.output_upload_completed_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(p);
  }
  return _impl_.output_upload_completed_;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::mutable_output_upload_completed() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000400u;
  ::Omnira::DataSerialization::Timestamp* _msg = _internal_mutable_output_upload_completed();
  // @@protoc_insertion_point(field_mutable:builra3.ActionExecutionMetadata.output_upload_completed)
  return _msg;
}
inline void ActionExecutionMetadata::set_allocated_output_upload_completed(::Omnira::DataSerialization::Timestamp* value) {
  ::Omnira::DataSerialization::Arena* message_arena = GetArena();
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.output_upload_completed_);
  }

  if (value != nullptr) {
    ::Omnira::DataSerialization::Arena* submessage_arena = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::Omnira::DataSerialization::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }

  _impl_.output_upload_completed_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:builra3.ActionExecutionMetadata.output_upload_completed)
}

// .google.protobuf.Timestamp completed = 14;
inline bool ActionExecutionMetadata::has_completed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.completed_ != nullptr);
  return value;
}
inline const ::Omnira::DataSerialization::Timestamp& ActionExecutionMetadata::_internal_completed() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  const ::Omnira::DataSerialization::Timestamp* p = _impl_.completed_;
  return p != nullptr ? *p : reinterpret_cast<const ::Omnira::DataSerialization::Timestamp&>(::Omnira::DataSerialization::_Timestamp_default_instance_);
}
inline const ::Omnira::DataSerialization::Timestamp& ActionExecutionMetadata::completed() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.ActionExecutionMetadata.completed)
  return _internal_completed();
}
inline void ActionExecutionMetadata::unsafe_arena_set_allocated_completed(::Omnira::DataSerialization::Timestamp* value) {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.completed_);
  }
  _impl_.completed_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:builra3.ActionExecutionMetadata.completed)
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::release_completed() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::Omnira::DataSerialization::Timestamp* released = _impl_.completed_;
  _impl_.completed_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(released);
  released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::Omnira::DataSerialization::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::unsafe_arena_release_completed() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:builra3.ActionExecutionMetadata.completed)

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::Omnira::DataSerialization::Timestamp* temp = _impl_.completed_;
  _impl_.completed_ = nullptr;
  return temp;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::_internal_mutable_completed() {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (_impl_.completed_ == nullptr) {
    auto* p = ::Omnira::DataSerialization::Message::DefaultConstruct<::Omnira::DataSerialization::Timestamp>(GetArena());
    _impl_.completed_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(p);
  }
  return _impl_.completed_;
}
inline ::Omnira::DataSerialization::Timestamp* ActionExecutionMetadata::mutable_completed() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000800u;
  ::Omnira::DataSerialization::Timestamp* _msg = _internal_mutable_completed();
  // @@protoc_insertion_point(field_mutable:builra3.ActionExecutionMetadata.completed)
  return _msg;
}
inline void ActionExecutionMetadata::set_allocated_completed(::Omnira::DataSerialization::Timestamp* value) {
  ::Omnira::DataSerialization::Arena* message_arena = GetArena();
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(_impl_.completed_);
  }

  if (value != nullptr) {
    ::Omnira::DataSerialization::Arena* submessage_arena = reinterpret_cast<::Omnira::DataSerialization::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::Omnira::DataSerialization::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }

  _impl_.completed_ = reinterpret_cast<::Omnira::DataSerialization::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:builra3.ActionExecutionMetadata.completed)
}

// repeated .google.protobuf.Any additional_data = 15;
inline int ActionExecutionMetadata::_internal_additional_data_size() const {
  return _internal_additional_data().size();
}
inline int ActionExecutionMetadata::additional_data_size() const {
  return _internal_additional_data_size();
}
inline ::Omnira::DataSerialization::Any* ActionExecutionMetadata::mutable_additional_data(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:builra3.ActionExecutionMetadata.additional_data)
  return _internal_mutable_additional_data()->Mutable(index);
}
inline ::Omnira::DataSerialization::RepeatedPtrField<::Omnira::DataSerialization::Any>* ActionExecutionMetadata::mutable_additional_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:builra3.ActionExecutionMetadata.additional_data)
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  return _internal_mutable_additional_data();
}
inline const ::Omnira::DataSerialization::Any& ActionExecutionMetadata::additional_data(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:builra3.ActionExecutionMetadata.additional_data)
  return _internal_additional_data().Get(index);
}
inline ::Omnira::DataSerialization::Any* ActionExecutionMetadata::add_additional_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::Omnira::DataSerialization::internal::TSanWrite(&_impl_);
  ::Omnira::DataSerialization::Any* _add = _internal_mutable_additional_data()->Add();
  // @@protoc_insertion_point(field_add:builra3.ActionExecutionMetadata.additional_data)
  return _add;
}
inline const ::Omnira::DataSerialization::RepeatedPtrField<::Omnira::DataSerialization::Any>& ActionExecutionMetadata::additional_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:builra3.ActionExecutionMetadata.additional_data)
  return _internal_additional_data();
}
inline const ::Omnira::DataSerialization::RepeatedPtrField<::Omnira::DataSerialization::Any>&
ActionExecutionMetadata::_internal_additional_data() const {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return _impl_.additional_data_;
}
inline ::Omnira::DataSerialization::RepeatedPtrField<::Omnira::DataSerialization::Any>*
ActionExecutionMetadata::_internal_mutable_additional_data() {
  ::Omnira::DataSerialization::internal::TSanRead(&_impl_);
  return &_impl_.additional_data_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace builra3


// @@protoc_insertion_point(global_scope)

#include "Omnira/DataSerialization/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_builra3_2fAction_2eproto_2epb_2eh
