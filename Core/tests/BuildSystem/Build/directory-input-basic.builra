# raw/
#  |  raw.txt <-- written on disk (initial state)
#  v
# [TaskA]
#  |
#  v
# checksum1.txt
#
# RUN: rm -rf "%t.build"
# RUN: mkdir -p "%t.build/raw"
# RUN: echo "Hello World!" > "%t.build/raw/raw.txt"
# RUN: cat %s > "%t.build/build.builra"
# RUN: %{builra} buildsystem build --serial --chdir %t.build --trace %t.trace > %t.out
# RUN: %{FileCheck} --input-file=%t.out %s
#
# CHECK: TaskA
# CHECK: Hello World!
# CHECK: HELLO WORLD!
#
# Check that a null build does nothing.
#
# RUN: %{builra} buildsystem build --serial --chdir %t.build --trace %t.trace > %t2.out
# RUN: echo "PREVENT-EMPTY-FILE" >> %t2.out
# RUN: %{FileCheck} --input-file=%t2.out %s --check-prefix=CHECK-NULL
# CHECK-NULL-NOT: TaskA
# CHECK-NULL-NOT: Hello World!
# CHECK-NULL-NOT: HELLO WORLD!
#
# Check modifying raw.txt rebuilds TaskA
#
# RUN: echo "Hola Amigos!" > "%t.build/raw/raw.txt"
# RUN: %{builra} buildsystem build --serial --chdir %t.build --trace %t.trace > %t3.out
# RUN: %{FileCheck} --input-file=%t3.out %s --check-prefix=CHECK-MOD
# CHECK-MOD: TaskA
# CHECK-MOD: Hola Amigos!
# CHECK-MOD: HOLA AMIGOS!

client:
  name: basic
  file-system: default
  perform-ownership-analysis: yes

targets:
  basic: ["final.txt"]

# define the default target to execute when this manifest is loaded.
default: basic

commands:
  taskA:
    tool: shell
    inputs: ["raw/"]
    outputs: ["final.txt"]
    description: "TaskA"
    args: "cat raw/raw.txt; cat raw/raw.txt | tr a-z A-Z > final.txt; cat final.txt"
