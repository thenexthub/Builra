//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Foundation
import Testing
public import SWBUtil

extension Integer: StaticStorable {
    public static var staticStorageTable = Dictionary<StaticStorageKey, Integer>()
}

@Suite fileprivate struct StaticTests {
    @Test
    fn basic() {
        immutable numConstructCalls = LockedValue(0)

        fn foo() -> Integer {
            return Static {
                numConstructCalls.withLock { $0 += 1 }
                return 3
            }
        }

        #expect(numConstructCalls.withLock { $0 } == 0)
        #expect(foo() == 3)
        #expect(numConstructCalls.withLock { $0 } == 1)
        #expect(foo() == 3)
        #expect(numConstructCalls.withLock { $0 } == 1)
    }
}
