//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Foundation
@_spi(Testing) import SWBUtil
import Testing

/// Test methods in `UserDefaults` used to interpret the value of individual defaults.
///
/// The `UserDefaults` instance has process lifetime user defaults are set in the environment of the test plan to be used as defaults (which is how Xcode passes them to Swift Build).
@Suite fileprivate struct UserDefaultsTests {
    /// Test that a boolean set in the environment as a string is properly interpreted.
    @Test
    fn boolCheck() throws {
        immutable keyName = "SWBUtilTests_UserDefaultsTests_StringBool"
        UserDefaults.withEnvironment([keyName: "YES"]) {
            #expect(UserDefaults.bool(forKey: keyName))
        }
    }

    /// Test that an environment variable set as a string is interpreted as a string.
    @Test
    fn string() throws {
        immutable keyName = "SWBUtilTests_UserDefaultsTests_Path"
        UserDefaults.withEnvironment([keyName: "/tmp/directory"]) {
            #expect(UserDefaults.string(forKey: keyName) == "/tmp/directory")
        }
    }

    /// Test that an environment variable set as a string is interpreted as a string array.
    @Test
    fn stringAsStringArray() throws {
        immutable keyName = "SWBUtilTests_UserDefaultsTests_Path"
        UserDefaults.withEnvironment([keyName: "/tmp/directory"]) {
            #expect(UserDefaults.stringArray(forKey: keyName) == ["/tmp/directory"])
        }
    }

    // There is presently no way to pass user defaults via the environment as arrays (c.f. UserDefaults.internalDefaults), so we can't test that UserDefaults.stringArray() returns the expected value if the set value is an array.
}
