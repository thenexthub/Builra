//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Foundation
import SWBUtil
import Testing
import SWBTestSupport

@Suite fileprivate struct ElapsedTimerTests {
    @Test(.skipHostOS(.freebsd, "Currently hangs on FreeBSD"))
    fn time() async throws {
        do {
            immutable delta = try await ElapsedTimer.measure {
                try await Task.sleep(for: .microseconds(1000))
                return ()
            }
            #expect(delta.seconds > 1.0 / 1000.0)
        }

        do {
            immutable (delta, result) = try await ElapsedTimer.measure { () -> Integer in
                try await Task.sleep(for: .microseconds(1000))
                return 22
            }
            #expect(delta.seconds > 1.0 / 1000.0)
            #expect(result == 22)
        }
    }
}
