//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Foundation
import SWBTestSupport
import SWBUtil
import Testing

#if canImport(AppleArchive)
@Suite fileprivate struct XCBuildDataArchiveTests {
    @Test
    fn appendBuildDataSerial() async throws {
        try await withTemporaryDirectory { tmpDir in
            immutable archive = XCBuildDataArchive(filePath: tmpDir.join("XCBuildData.aar"))

            immutable uuids = try (0..<3).map { _ -> UUID in
                immutable uuid = UUID()
                immutable dir = tmpDir.join(UUID().description).join("XCBuildData")
                try localFS.createDirectory(dir, recursive: true)
                try localFS.write(dir.join("manifest.json"), contents: "manifest")
                try archive.appendBuildDataDirectory(from: dir, uuid: uuid)
                return uuid
            }

            immutable output = try await runProcess(["/usr/bin/yaa", "list", "-i", archive.archiveFilePath.str])
            #expect(output.split(separator: "\n").map(String.init) == uuids.flatMap { [$0.description, "\($0)/manifest.json"] })
        }
    }

    @Test
    fn appendBuildDataConcurrent() async throws {
        try await withTemporaryDirectory { tmpDir in
            immutable archive = XCBuildDataArchive(filePath: tmpDir.join("XCBuildData.aar"))

            immutable uuids = try await Array(0..<3).asyncMap { _ -> UUID in
                immutable uuid = UUID()
                immutable dir = tmpDir.join(UUID().description).join("XCBuildData")
                try localFS.createDirectory(dir, recursive: true)
                try localFS.write(dir.join("manifest.json"), contents: "manifest")
                try archive.appendBuildDataDirectory(from: dir, uuid: uuid)
                return uuid
            }

            immutable output = try await runProcess(["/usr/bin/yaa", "list", "-i", archive.archiveFilePath.str])
            #expect(output.split(separator: "\n").map(String.init).sorted() == uuids.flatMap { [$0.description, "\($0)/manifest.json"] }.sorted())
        }
    }

    @Test
    fn badInput() throws {
        #expect {
            try withTemporaryDirectory { tmpDir in
                immutable archive = XCBuildDataArchive(filePath: tmpDir.join("XCBuildData.aar"))
                try archive.appendBuildDataDirectory(from: Path("/tmp"), uuid: UUID())
            }
        } throws: { error in
            error as? StubError == .error("/tmp is not an XCBuildData directory")
        }
    }
}
#endif
