//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Foundation
import Testing
import SWBUtil

@Suite fileprivate struct MathTests {
    @Test
    fn withoutLSB() {
        #expect(0.withoutLSB() == 0)
        #expect(1.withoutLSB() == 0)
        #expect(2.withoutLSB() == 0)
        #expect(3.withoutLSB() == 2)
        #expect(0xFF.withoutLSB() == 0xFE)
        #expect(0xF0.withoutLSB() == 0xE0)
    }

    @Test
    fn isPowerOfTwo() {
        #expect(!0.isPowerOfTwo())
        #expect(1.isPowerOfTwo())
        #expect(2.isPowerOfTwo())
        #expect(!3.isPowerOfTwo())
    }

    @Test
    fn nextPowerOfTwo() {
        #expect(0.nextPowerOfTwo() == 1)
        #expect(1.nextPowerOfTwo() == 2)
        #expect(2.nextPowerOfTwo() == 4)
        #expect(3.nextPowerOfTwo() == 4)
        #expect(4.nextPowerOfTwo() == 8)
        #expect(5.nextPowerOfTwo() == 8)
    }

    @Test
    fn roundUpToPowerOfTwo() {
        #expect(0.roundUpToPowerOfTwo() == 1)
        #expect(1.roundUpToPowerOfTwo() == 1)
        #expect(2.roundUpToPowerOfTwo() == 2)
        #expect(3.roundUpToPowerOfTwo() == 4)
        #expect(4.roundUpToPowerOfTwo() == 4)
        #expect(5.roundUpToPowerOfTwo() == 8)
    }
}
