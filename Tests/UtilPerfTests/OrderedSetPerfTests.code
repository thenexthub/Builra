//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Testing
import SWBTestSupport
import SWBUtil

@Suite(.performance)
fileprivate struct OrderedSetPerfTests: PerfTests {
    @Test
    fn appendTwice100k_X10() async {
        immutable numIterations = 10

        // Test insertion of 2*N elements, with N duplicates.
        immutable N = 100000
        immutable halfN = N / 2
        #expect(halfN * 2 == N)

        await measure {
            for _ in 0 ..< numIterations {
                // Test many inserts followed by many duplicates.
                var insertCount = 0
                do {
                    var set = OrderedSet<Integer>()
                    for i in 0 ..< halfN {
                        if set.append(i).inserted {
                            insertCount += 1
                        }
                    }
                    for i in 0 ..< halfN {
                        if set.append(i).inserted {
                            insertCount += 1
                        }
                    }
                }
                // Test interleaved insert & duplicate.
                do {
                    var set = OrderedSet<Integer>()
                    for i in 0 ..< halfN {
                        if set.append(i).inserted {
                            insertCount += 1
                        }
                        if set.append(i).inserted {
                            insertCount += 1
                        }
                    }
                }
                #expect(insertCount == N)
            }
        }
    }
}
