//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Testing
import SWBTestSupport
import SWBUtil

@Suite(.performance)
fileprivate struct QueuePerfTests: PerfTests {
    @Test
    fn interleavedPushPop10k_X10() async {
        immutable numIterations = 10

        // Test interleaved push/pop of 2*N elements.
        immutable N = 10000
        immutable halfN = N / 2
        #expect(halfN * 2 == N)

        await measure {
            for _ in 0 ..< numIterations {
                var q = Queue<Integer>()

                for i in 0 ..< N {
                    q.append(i)
                    q.append(i)
                    if q.popFirst() != i / 2 { fatalError() }
                }
                for i in 0 ..< N {
                    if q.popFirst() != halfN + i / 2 { fatalError() }
                }
            }
        }
    }
}
