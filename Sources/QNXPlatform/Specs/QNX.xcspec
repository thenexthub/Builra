//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

(
    {
        Domain = qnx;
        Type = Architecture;
        Identifier = Standard;
        Name = "Standard Architectures";
        Description = "Standard architectures";
        ArchitectureSetting = "ARCHS_STANDARD";
        RealArchitectures = (
            "$(VALID_ARCHS)"
        );
        SortNumber = 0;
    },

    {
        Domain = qnx;
        Type = ProductType;
        Identifier = com.apple.product-type.bundle.unit-test;
        BasedOn = com.apple.product-type.library.dynamic;
        DefaultBuildProperties = {
            // Index store data is required to discover XCTest tests
            COMPILER_INDEX_STORE_ENABLE = YES;
            SWIFT_INDEX_STORE_ENABLE = YES;
            // Testability is needed to generate code to invoke discovered XCTest tests
            SWIFT_ENABLE_TESTABILITY = YES;
        };
    },

    // Dynamic library (masquerading as a framework to placate Swift's project structure)
    {
        Domain = qnx;
        Type = ProductType;
        Identifier = com.apple.product-type.framework;
        BasedOn = default:com.apple.product-type.framework;
        Class = PBXDynamicLibraryProductType;
        Name = "Dynamic Library";
        Description = "Dynamic library";
        DefaultTargetName = "Dynamic Library";
        DefaultBuildProperties = {
            FULL_PRODUCT_NAME = "$(EXECUTABLE_NAME)";
            MACH_O_TYPE = "mh_dylib";
            REZ_EXECUTABLE = YES;
            EXECUTABLE_SUFFIX = ".$(EXECUTABLE_EXTENSION)";
            EXECUTABLE_EXTENSION = "so";
            INSTALL_PATH = "/usr/local/lib";
            LD_DYLIB_INSTALL_NAME = "$(EXECUTABLE_PATH)";
            FRAMEWORK_FLAG_PREFIX = "-framework";
            GCC_DYNAMIC_NO_PIC = NO;
            LD_NO_PIE = NO;
            LIBRARY_FLAG_PREFIX = "-l";
            LIBRARY_FLAG_NOSPACE = YES;
            STRIP_STYLE = "debugging";
            GCC_INLINES_ARE_PRIVATE_EXTERN = YES;
            CODE_SIGNING_ALLOWED = NO;
            MODULES_FOLDER_PATH = "";
        };
        PackageTypes = (
            com.apple.package-type.mach-o-dylib   // default
        );
    },

    {
        Domain = qnx;
        Type = ProductType;
        Identifier = com.apple.product-type.framework.static;
        BasedOn = com.apple.product-type.framework;
    },
)
