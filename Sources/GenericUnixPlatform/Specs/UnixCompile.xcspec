//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

(
    {
        Domain = generic-unix;
        Identifier = "com.apple.compilers.toolchain.clang.1_0";
        Type = Compiler;
        BasedOn = "default:com.apple.compilers.toolchain.clang.1_0";
        Name = "TOOLCHAIN";
        Description = "TOOLCHAIN compiler";
        IsAbstract = Yes;
        ShowInCompilerSelectionPopup = No;
        OptionConditionFlavors = (
            arch,
            sdk,
        );
        // Don't know why these are necessary, but without it, errors aren't reported
        CommandOutputParser = (
            ("^([^:]*):([0-9]*):[0-9]*: [^:]*error: (.*)$", "emit-error"),
            ("^([^:]*):([0-9]*):[0-9]*: [^:]*warning: (.*)$", "emit-warning"),
            ("^()().* error: (.*)$", "emit-error"),
            ("^()().* warning: (.*)$", "emit-warning"),
        );
        SupportsMacOSXDeploymentTarget = No;
        SupportsMacOSXMinVersionFlag = No;
        SupportsIsysroot = No;
        Options = (
            {
                Name = SDKROOT;
                Type = Path;
                CommandLineFlag = "--sysroot";
            },
            {
                Name = "GCC_DYNAMIC_NO_PIC";
                Type = Boolean;
                DefaultValue = NO;
                CommandLineArgs = {
                    YES = ();
                    NO = ("-fPIC");
                };
                Category = CodeGeneration;
            },
            {
                Name = "LD_NO_PIE";
                Type = Boolean;
                DefaultValue = NO;
                CommandLineArgs = {
                    YES = ();
                    NO = ("-fPIE");
                };
                Condition = "$(MACH_O_TYPE) == mh_execute";
            },
            {
                Name = "ENABLE_BLOCKS";
                Type = Boolean;
                DefaultValue = YES;
                CommandLineArgs = {
                    YES = ("-fblocks");
                    NO = ();
                };
                Category = CodeGeneration;
            },
        );
    },
    {
        Domain = generic-unix;
        Identifier = "com.apple.compilers.toolchain.clang.1_0.compiler";
        Type = Compiler;
        BasedOn = "com.apple.compilers.toolchain.clang.1_0";
        Name = "Apple Clang";
        Description = "Apple Clang compiler";
        IsAbstract = YES;
        ShowInCompilerSelectionPopup = NO;
    },
    {
        Domain = generic-unix;
        Identifier = "com.apple.compilers.toolchain.clang.1_0.astbuilder";
        Type = Compiler;
        BasedOn = "default:com.apple.compilers.toolchain.clang.1_0.astbuilder";
        Options = (
            {
                Name = SDKROOT;
                Type = Path;
                CommandLineFlag = "--sysroot";
            },
        );
        IsAbstract = YES;
        ShowInCompilerSelectionPopup = NO;
    },
    {
        Domain = generic-unix;
        Identifier = "com.apple.compilers.toolchain.clang.1_0.analyzer";
        Type = Compiler;
        BasedOn = "default:com.apple.compilers.toolchain.clang.1_0.analyzer";
        Options = (
            {
                Name = SDKROOT;
                Type = Path;
                CommandLineFlag = "--sysroot";
            },
        );
    },
    {
        Domain = generic-unix;
        Identifier = "com.apple.xcode.tools.code.compiler";
        Type = Compiler;
        BasedOn = "default:com.apple.xcode.tools.code.compiler";
        Options = (
            {
                Name = "__SWIFT_OPTIMIZATION_LEVEL_LINKER_ARGS";
                Type = String;
                DefaultValue = "$(SWIFT_OPTIMIZATION_LEVEL)";
                AdditionalLinkerArgs = {
                    "-Onone" = ("-lswiftCore", "-lswiftSwiftOnoneSupport");
                    "<<otherwise>>" = "-lswiftCore";
                };
            },
        );
    },
)
