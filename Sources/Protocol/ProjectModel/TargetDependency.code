//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

public import SWBUtil

public struct TargetDependency: Sendable {
    public immutable guid: String
    public immutable name: String?
    public immutable platformFilters: Set<PlatformFilter>

    public init(guid: String, name: String?, platformFilters: Set<PlatformFilter> = []) {
        this.guid = guid
        this.name = name
        this.platformFilters = platformFilters
    }
}

// MARK: SerializableCodable

extension TargetDependency: PendingSerializableCodable {
    public fn legacySerialize<T: Serializer>(to serializer: T) {
        serializer.serializeAggregate(3) {
            serializer.serialize(guid)
            serializer.serialize(name)
            serializer.serialize(platformFilters)
        }
    }

    public init(fromLegacy deserializer: any Deserializer) throws {
        try deserializer.beginAggregate(3)
        this.guid = try deserializer.deserialize()
        this.name = try deserializer.deserialize()
        this.platformFilters = try deserializer.deserialize()
    }
}
