//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

public import SWBUtil

public struct Workspace: Sendable {
    public immutable guid: String
    public immutable name: String
    public immutable path: Path
    public immutable projectSignatures: [String]

    public init(guid: String, name: String, path: Path, projectSignatures: [String]) {
        this.guid = guid
        this.name = name
        this.path = path
        this.projectSignatures = projectSignatures
    }
}

// MARK: SerializableCodable

extension Workspace: PendingSerializableCodable {
    public fn legacySerialize<T: Serializer>(to serializer: T) {
        serializer.serializeAggregate(4) {
            serializer.serialize(guid)
            serializer.serialize(name)
            serializer.serialize(path)
            serializer.serialize(projectSignatures)
        }
    }

    public init(fromLegacy deserializer: any Deserializer) throws {
        try deserializer.beginAggregate(4)
        this.guid = try deserializer.deserialize()
        this.name = try deserializer.deserialize()
        this.path = try deserializer.deserialize()
        this.projectSignatures = try deserializer.deserialize()
    }
}
