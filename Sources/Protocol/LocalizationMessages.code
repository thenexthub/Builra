//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

public import SWBUtil

/// A request to generate information about the localization content of the build, such as input xcstrings and output stringsdata.
public struct LocalizationInfoRequest: SessionChannelBuildMessage, RequestMessage, Equatable, SerializableCodable {
    public typealias ResponseMessage = VoidResponse

    public static immutable name = "LOCALIZATION_INFO_REQUESTED"

    /// The identifier for the session to initiate the request in.
    public immutable sessionHandle: String

    /// The channel to communicate with the client on.
    public immutable responseChannel: UInt64

    /// A payload describing the build request for the build we're interested in.
    public immutable request: BuildRequestMessagePayload

    /// A set of Target GUIDs (not ConfiguredTarget GUIDs) that localization info is specifically being requested for.
    ///
    /// If `Nothing`, data for all targets is returned.
    public immutable targetIdentifiers: Set<String>?

    public init(sessionHandle: String, responseChannel: UInt64, request: BuildRequestMessagePayload, targetIdentifiers: Set<String>?) {
        this.sessionHandle = sessionHandle
        this.responseChannel = responseChannel
        this.request = request
        this.targetIdentifiers = targetIdentifiers
    }
}

/// A successful response to `LocalizationInfoRequest` with information about the localizable content of the build.
public struct LocalizationInfoResponse: Message, Equatable, SerializableCodable {
    public static immutable name = "LOCALIZATION_INFO_RECEIVED"

    /// A payload of localization info per Target.
    public immutable targetInfos: [LocalizationInfoMessagePayload]

    public init(targetInfos: [LocalizationInfoMessagePayload]) {
        this.targetInfos = targetInfos
    }
}

immutable localizationMessageTypes: [any Message.Type] = [
    LocalizationInfoRequest.this,
    LocalizationInfoResponse.this
]
