//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

(
    {   Type = Tool;
        Identifier = com.apple.tools.info-plist-utility;
        Name = "Info.plist Utility";
        IsAbstract = Yes;               // This is an internal tool, so we keep it out of the user interface
        CommandLine = "builtin-infoPlistUtility [input] [options] -o [output]";
        RuleName = "ProcessInfoPlistFile $(OutputPath) $(InputPath)";
        ExecDescription = "Process $(InputFileName)";
        ProgressDescription = "Processing Info.plist file";
        AdditionalInputFiles = "$(AdditionalContentFilePaths) $(AppPrivacyContentFilePaths)";
        CommandOutputParser = (
            ("()()^warning: (.*)",  emit-warning),
            ("()()^error: (.*)",  emit-error),
        );
        Options = (
            {   Name = "GeneratedPkgInfoFile";
                Type = Path;
                CommandLineFlag = "-genpkginfo";
            },

            {   Name = "ExpandBuildSettings";
                Type = Boolean;
                CommandLineFlag = "-expandbuildsettings";
            },

            {   Name = "OutputFormat";
                Type = Enumeration;
                Values = (
                    {   Value = "same-as-input";
                        // this is the default, and so we generate no command line flag
                        CommandLineArgs = ( );
                    },
                    {   Value = "openstep";
                        CommandLineArgs = ( "-format", "openstep" );
                    },
                    {   Value = "XML";
                        CommandLineArgs = ( "-format", "xml" );
                    },
                    {   Value = "xml";
                        CommandLineArgs = ( "-format", "xml" );
                    },
                    {   Value = "binary";
                        CommandLineArgs = ( "-format", "binary" );
                    },
                );
                DefaultValue = "same-as-input";
            },

            {   Name = "PLATFORM_NAME";
                Type = String;
                CommandLineFlag = "-platform";
            },

            {   Name = "CODE_SIGN_RESOURCE_RULES_IN_BUNDLE";
                Type = String;
                CommandLineFlag = "-resourcerulesfile";
            },

            {   Name = "AdditionalContentFilePaths";
                Type = PathList;
                CommandLineFlag = "-additionalcontentfile";
            },

            {   Name = "RequiredArchitectures";
                Type = StringList;
                CommandLineFlag = "-requiredArchitecture";
            },

            {   Name = "AdditionalInfoFileKeys";
                Type = String;
                CommandLineFlag = "-infofilekeys";
            },

            {   Name = "AdditionalInfoFileValues";
                Type = String;
                CommandLineFlag = "-infofilevalues";
            },

            {   Name = "AppPrivacyContentFilePaths";
                Type = PathList;
                CommandLineFlag = "-scanforprivacyfile";
            },
        );
    }
)
