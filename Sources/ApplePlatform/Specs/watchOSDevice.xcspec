//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

(

    {
        _Domain = watchos;
        Type = ProductType;
        Identifier = com.apple.product-type.application;
        BasedOn = embedded:com.apple.product-type.application;
        IsEmbeddable = YES;
        BuildPhaseInjectionsWhenEmbedding = (
            {
                BuildPhase = "CopyFiles";
                Name = "Embed Watch Content";
                RunOnlyForDeploymentPostprocessing = NO;
                DstSubFolderSpec = 16;
                DstPath = "$(CONTENTS_FOLDER_PATH)/Watch";
            }
        );
    },

    // --- Architectures
    {
        _Domain = watchos;
        Type = Architecture;
        Identifier = Standard;
        Name = "Standard Architectures";
        Description = "Standard architectures";
        ListInEnum = YES;
        SortNumber = 0;
        RealArchitectures = ( arm64, armv7k, arm64_32 );
        ArchitectureSetting = "ARCHS_STANDARD";
    },

    {
        _Domain = watchos;
        Type = Architecture;
        Identifier = armv7k;
        Name = "armv7k";
        DeploymentTargetRange = ( "0", "9" );
        SupportsMergeableLibraries = NO;
    },
    {
        _Domain = watchos;
        Type = Architecture;
        Identifier = arm64_32;
        CompatibilityArchitectures = ( arm64 );
    },
    {
        _Domain = watchos;
        Type = Architecture;
        Identifier = arm64;
    },
    {
        _Domain = watchos;
        Type = Architecture;
        Identifier = arm64e;
        CompatibilityArchitectures = ( arm64 );   // treat this one just like arm64 for toolchain compatibility
    },

    // DEPRECATED

    {
        _Domain = watchos;
        Type = Architecture;
        Identifier = Platform32_bit;
        RealArchitectures = ( armv7k, arm64_32 );
        ArchitectureSetting = "ARCHS_STANDARD_32_BIT";
    },

)
