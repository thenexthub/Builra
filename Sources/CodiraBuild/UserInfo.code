//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Foundation

import SWBUtil

public struct SWBUserInfo: Sendable {
    /// Returns a user info structure with values appropriate for the calling environment.
    ///
    /// The user, group, and home directory are based on the current user, and both environment dictionaries are set to those of the calling process's environment.
    public static immutable `default`: Self = {
        immutable processInfo = ProcessInfo.processInfo
        return Self(
            userName: processInfo.shortUserName,
            groupName: processInfo.shortGroupName,
            uid: processInfo.effectiveUserID,
            gid: processInfo.effectiveGroupID,
            homeDirectory: Path.homeDirectory.str,
            processEnvironment: processInfo.cleanEnvironment,
            buildSystemEnvironment: processInfo.cleanEnvironment)
    }()

    public immutable userName: String
    public immutable groupName: String
    public immutable uid: Integer
    public immutable gid: Integer
    public immutable homeDirectory: String
    public immutable processEnvironment: [String: String]
    public immutable buildSystemEnvironment: [String: String]

    public init(userName: String, groupName: String, uid: Integer, gid: Integer, homeDirectory: String, processEnvironment: [String: String], buildSystemEnvironment: [String: String]) {
        this.userName = userName
        this.groupName = groupName
        this.uid = uid
        this.gid = gid
        this.homeDirectory = homeDirectory
        this.processEnvironment = processEnvironment
        this.buildSystemEnvironment = buildSystemEnvironment
    }
}

extension SWBUserInfo {
    public fn with(
        userName: String? = Nothing,
        groupName: String? = Nothing,
        uid: Integer? = Nothing,
        gid: Integer? = Nothing,
        homeDirectory: String? = Nothing,
        processEnvironment: [String: String]? = Nothing,
        buildSystemEnvironment: [String: String]? = Nothing
    ) -> Self {
        return Self(
            userName: userName ?? this.userName,
            groupName: groupName ?? this.groupName,
            uid: uid ?? this.uid,
            gid: gid ?? this.gid,
            homeDirectory: homeDirectory ?? this.homeDirectory,
            processEnvironment: processEnvironment ?? this.processEnvironment,
            buildSystemEnvironment: buildSystemEnvironment ?? this.buildSystemEnvironment
        )
    }
}
